{
    /*
     * iASL Warning: There were 15 external control methods found during
     * disassembly, but only 8 were resolved (7 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_PR_.BGIA, FieldUnitObj)
    External (_PR_.BGMA, FieldUnitObj)
    External (_PR_.BGMS, FieldUnitObj)
    External (_PR_.CPU0._PPC, IntObj)
    External (_PR_.CPU0._PSS, PkgObj)
    External (_PR_.DSAE, FieldUnitObj)
    External (_PR_.DTSE, FieldUnitObj)
    External (_PR_.DTSF, FieldUnitObj)
    External (_PR_.TRPD, FieldUnitObj)
    External (_PR_.TRPF, FieldUnitObj)
    External (_SB_.PCCD, UnknownObj)
    External (_SB_.PCCD.PENB, UnknownObj)
    External (_SB_.PCI0.B0D3.ABAR, FieldUnitObj)
    External (_SB_.PCI0.B0D3.BARA, IntObj)
    External (_SB_.PCI0.EPON, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GFX0.AINT, MethodObj)    // 2 Arguments
    External (_SB_.PCI0.GFX0.BLM0, FieldUnitObj)
    External (_SB_.PCI0.GFX0.BLM1, FieldUnitObj)
    External (_SB_.PCI0.GFX0.BLM2, FieldUnitObj)
    External (_SB_.PCI0.GFX0.BLM3, FieldUnitObj)
    External (_SB_.PCI0.GFX0.BLM4, FieldUnitObj)
    External (_SB_.PCI0.GFX0.BLM5, FieldUnitObj)
    External (_SB_.PCI0.GFX0.BLM6, FieldUnitObj)
    External (_SB_.PCI0.GFX0.BLM7, FieldUnitObj)
    External (_SB_.PCI0.GFX0.BLM8, FieldUnitObj)
    External (_SB_.PCI0.GFX0.BLM9, FieldUnitObj)
    External (_SB_.PCI0.GFX0.BLMA, FieldUnitObj)
    External (_SB_.PCI0.GFX0.BLMX, FieldUnitObj)
    External (_SB_.PCI0.GFX0.CLID, FieldUnitObj)
    External (_SB_.PCI0.GFX0.DD1F, UnknownObj)
    External (_SB_.PCI0.GFX0.GHDS, MethodObj)    // 1 Arguments
    External (_SB_.PCI0.GFX0.GSCI, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GFX0.GSSE, FieldUnitObj)
    External (_SB_.PCI0.PAUD.PUAM, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.PEG0.HPME, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG1.HPME, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG2.HPME, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.WMID, UnknownObj)
    External (_SB_.PCI0.WMID.FEBC, BuffObj)
    External (_SB_.PCI0.XHC_.DUAM, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.TPM_.PTS_, MethodObj)    // 1 Arguments
    External (_TZ_.TZ00, UnknownObj)
    External (D1F0, UnknownObj)
    External (D1F1, UnknownObj)
    External (D1F2, UnknownObj)
    External (DIDX, FieldUnitObj)
    External (GSMI, FieldUnitObj)
    External (IGDS, FieldUnitObj)
    External (INIR, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (INIX, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (LIDS, FieldUnitObj)
    External (M64B, FieldUnitObj)
    External (M64L, FieldUnitObj)
    External (PDC0, IntObj)
    External (PDC1, IntObj)
    External (PDC2, IntObj)
    External (PDC3, IntObj)
    External (PDC4, IntObj)
    External (PDC5, IntObj)
    External (PDC6, IntObj)
    External (PDC7, IntObj)
    External (PS0X, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (PS2X, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (PS3X, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (SGMD, FieldUnitObj)

    Name (SS1, Zero)

    0024: 08 53 53 31 5F 00                                // .SS1_.

    Name (SS2, Zero)

    002A: 08 53 53 32 5F 00                                // .SS2_.

    Name (SS3, One)

    0030: 08 53 53 33 5F 01                                // .SS3_.

    Name (SS4, One)

    0036: 08 53 53 34 5F 01                                // .SS4_.

    OperationRegion (GNVS, SystemMemory, 0x96FBBC18, 0x038D)

    003C: 5B 80 47 4E 56 53 00 0C 18 BC FB 96 0B 8D 03     // [.GNVS.........

    Field (GNVS, AnyAcc, Lock, Preserve)
    {
        OSYS,   16, 
        SMIF,   8, 
        PRM0,   8, 
        PRM1,   8, 
        SCIF,   8, 
        PRM2,   8, 
        PRM3,   8, 
        LCKF,   8, 
        PRM4,   8, 
        PRM5,   8, 
        P80D,   32, 
        PWRS,   8, 
        DBGS,   8, 
        THOF,   8, 
        ACT1,   8, 
        ACTT,   8, 
        PSVT,   8, 
        TC1V,   8, 
        TC2V,   8, 
        TSPV,   8, 
        CRTT,   8, 
        DTSE,   8, 
        DTS1,   8, 
        DTS2,   8, 
        DTSF,   8, 
        Offset (0x1E), 
        RSV0,   8, 
        RSV1,   8, 
        RSV2,   8, 
        RSV3,   8, 
        RSV4,   8, 
        RSV5,   8, 
        RSV6,   8, 
        REVN,   8, 
        Offset (0x28), 
        APIC,   8, 
        TCNT,   8, 
        PCP0,   8, 
        PCP1,   8, 
        PPCM,   8, 
        PPMF,   32, 
        C67L,   8, 
        NATP,   8, 
        CMAP,   8, 
        CMBP,   8, 
        LPTP,   8, 
        FDCP,   8, 
        CMCP,   8, 
        CIRP,   8, 
        SMSC,   8, 
        W381,   8, 
        SMC1,   8, 
        EMAE,   8, 
        EMAP,   16, 
        EMAL,   16, 
        Offset (0x42), 
        MEFE,   8, 
        DSTS,   8, 
        TL2F,   32, 
        MORD,   8, 
        TCGP,   8, 
        PPRP,   32, 
        PPRQ,   8, 
        LPPR,   8, 
        GTF0,   56, 
        GTF2,   56, 
        IDEM,   8, 
        GTF1,   56, 
        BID,    16, 
        PLID,   8, 
        ECTG,   8, 
        SDPO,   8, 
        SKID,   8, 
        Offset (0x70), 
        OSCC,   8, 
        NEXP,   8, 
        SBV1,   8, 
        SBV2,   8, 
        Offset (0x7A), 
        DSEN,   8, 
        Offset (0x7C), 
        GPIC,   8, 
        CTYP,   8, 
        L01C,   8, 
        VFN0,   8, 
        VFN1,   8, 
        VFN2,   8, 
        VFN3,   8, 
        VFN4,   8, 
        VFN5,   8, 
        VFN6,   8, 
        VFN7,   8, 
        VFN8,   8, 
        VFN9,   8, 
        Offset (0x8F), 
        ATMC,   8, 
        PTMC,   8, 
        ATRA,   8, 
        PTRA,   8, 
        PNHM,   32, 
        Offset (0x9F), 
        RTIP,   8, 
        TSOD,   8, 
        ATPC,   8, 
        PTPC,   8, 
        PFLV,   8, 
        BREV,   8, 
        PDTS,   8, 
        PKGA,   8, 
        PAMT,   8, 
        AC0F,   8, 
        AC1F,   8, 
        DTS3,   8, 
        DTS4,   8, 
        SHFQ,   32, 
        LTR1,   8, 
        LTR2,   8, 
        LTR3,   8, 
        LTR4,   8, 
        LTR5,   8, 
        LTR6,   8, 
        LTR7,   8, 
        LTR8,   8, 
        OBF1,   8, 
        OBF2,   8, 
        OBF3,   8, 
        OBF4,   8, 
        OBF5,   8, 
        OBF6,   8, 
        OBF7,   8, 
        OBF8,   8, 
        XHCI,   8, 
        XTUB,   32, 
        XTUS,   32, 
        XMPB,   32, 
        DDRF,   8, 
        RTD3,   8, 
        PEP0,   8, 
        PEP3,   8, 
        DPTF,   8, 
        SADE,   8, 
        SACR,   8, 
        SAHT,   8, 
        PCHD,   8, 
        PCHC,   8, 
        PCHH,   8, 
        CTDP,   8, 
        LPMP,   8, 
        LPMV,   8, 
        ECEU,   8, 
        TGFG,   16, 
        MEMD,   8, 
        MEMC,   8, 
        MEMH,   8, 
        FND1,   8, 
        FND2,   8, 
        AMBD,   8, 
        AMAT,   8, 
        AMPT,   8, 
        AMCT,   8, 
        AMHT,   8, 
        SKDE,   8, 
        SKAT,   8, 
        SKPT,   8, 
        SKCT,   8, 
        SKHT,   8, 
        EFDE,   8, 
        EFAT,   8, 
        EFPT,   8, 
        EFCT,   8, 
        EFHT,   8, 
        VRDE,   8, 
        VRAT,   8, 
        VRPT,   8, 
        VRCT,   8, 
        VRHT,   8, 
        DPAP,   8, 
        DPPP,   8, 
        DPCP,   8, 
        DCMP,   8, 
        TRTV,   8, 
        LPOE,   8, 
        LPOP,   8, 
        LPOS,   8, 
        LPOW,   8, 
        LPER,   8, 
        PPSZ,   32, 
        DISE,   8, 
        BGMA,   64, 
        BGMS,   8, 
        BGIA,   16, 
        ICNF,   8, 
        DSP0,   32, 
        DSP1,   32, 
        NFCE,   8, 
        DFUE,   8, 
        CODS,   8, 
        SNHE,   8, 
        S0ID,   8, 
        CTDB,   8, 
        DKSM,   8, 
        SIO1,   8, 
        SIO2,   8, 
        SPBA,   16, 
        Offset (0x1FF), 
        ULCK,   8, 
        WIFD,   8, 
        WFAT,   8, 
        WFPT,   8, 
        WFCT,   8, 
        WFHT,   8, 
        Offset (0x209), 
        XHPR,   8, 
        SDS0,   16, 
        SDS1,   16, 
        SDS2,   8, 
        SDS3,   8, 
        SDS4,   8, 
        SDS5,   8, 
        RIC0,   8, 
        PEPY,   8, 
        DVS0,   8, 
        DVS1,   8, 
        DVS2,   8, 
        DVS3,   8, 
        GBSX,   8, 
        IUBE,   8, 
        IUCE,   8, 
        IUDE,   8, 
        ECNO,   8, 
        AUDD,   16, 
        DSPD,   16, 
        IC0D,   16, 
        IC1D,   16, 
        IC1S,   16, 
        VRRD,   16, 
        PSCP,   8, 
        RWAG,   8, 
        I20D,   16, 
        I21D,   16, 
        PLT0,   8, 
        RCG0,   16, 
        ECDB,   8, 
        P2ME,   8, 
        SSH0,   16, 
        SSL0,   16, 
        SSD0,   16, 
        FMH0,   16, 
        FML0,   16, 
        FMD0,   16, 
        FPH0,   16, 
        FPL0,   16, 
        FPD0,   16, 
        SSH1,   16, 
        SSL1,   16, 
        SSD1,   16, 
        FMH1,   16, 
        FML1,   16, 
        FMD1,   16, 
        FPH1,   16, 
        FPL1,   16, 
        FPD1,   16, 
        M0C0,   16, 
        M1C0,   16, 
        M2C0,   16, 
        M0C1,   16, 
        M1C1,   16, 
        M2C1,   16, 
        M0C2,   16, 
        M1C2,   16, 
        M0C3,   16, 
        M1C3,   16, 
        M0C4,   16, 
        M1C4,   16, 
        M0C5,   16, 
        M1C5,   16, 
        TBSF,   8, 
        GIRQ,   32, 
        DMTP,   8, 
        DMTD,   8, 
        DMSH,   8, 
        LANP,   8, 
        Offset (0x27E), 
        SHSB,   8, 
        PLCS,   8, 
        PLVL,   16, 
        GN1E,   8, 
        G1AT,   8, 
        G1PT,   8, 
        G1CT,   8, 
        G1HT,   8, 
        GN2E,   8, 
        G2AT,   8, 
        G2PT,   8, 
        G2CT,   8, 
        G2HT,   8, 
        WWSD,   8, 
        CVSD,   8, 
        SSDD,   8, 
        INLD,   8, 
        IFAT,   8, 
        IFPT,   8, 
        IFCT,   8, 
        IFHT,   8, 
        ANCS,   8, 
        SHTP,   8, 
        BCV4,   8, 
        WTVX,   8, 
        WITX,   8, 
        APFU,   8, 
        SOHP,   8, 
        NOHP,   8, 
        TBSE,   8, 
        WKFN,   8, 
        PEPC,   16, 
        VRSD,   16, 
        PB1E,   8, 
        GNID,   8, 
        WAND,   8, 
        WWAT,   8, 
        WWPT,   8, 
        WWCT,   8, 
        WWHT,   8, 
        Offset (0x2AE), 
        MPL0,   16, 
        GR13,   8, 
        CHGE,   8, 
        SAC3,   8, 
        PCH3,   8, 
        MEM3,   8, 
        AMC3,   8, 
        SKC3,   8, 
        EFC3,   8, 
        VRC3,   8, 
        WFC3,   8, 
        G1C3,   8, 
        G2C3,   8, 
        IFC3,   8, 
        WWC3,   8, 
        WGC3,   8, 
        SPST,   8, 
        Offset (0x2C1), 
        GN3E,   8, 
        G3AT,   8, 
        G3PT,   8, 
        G3CT,   8, 
        G3HT,   8, 
        GN4E,   8, 
        G4AT,   8, 
        G4PT,   8, 
        G4CT,   8, 
        G4HT,   8, 
        GN5E,   8, 
        G5AT,   8, 
        G5PT,   8, 
        G5CT,   8, 
        G5HT,   8, 
        GN6E,   8, 
        G6AT,   8, 
        G6PT,   8, 
        G6CT,   8, 
        G6HT,   8, 
        ECLP,   8, 
        G3C3,   8, 
        G4C3,   8, 
        G5C3,   8, 
        G6C3,   8, 
        Offset (0x2E0), 
        S1DE,   8, 
        S1AT,   8, 
        S1PT,   8, 
        S1CT,   8, 
        S1HT,   8, 
        S2DE,   8, 
        S2AT,   8, 
        S2PT,   8, 
        S2CT,   8, 
        S2HT,   8, 
        S3DE,   8, 
        S3AT,   8, 
        S3PT,   8, 
        S3CT,   8, 
        S3HT,   8, 
        S4DE,   8, 
        S4AT,   8, 
        S4PT,   8, 
        S4CT,   8, 
        S4HT,   8, 
        S5DE,   8, 
        S5AT,   8, 
        S5PT,   8, 
        S5CT,   8, 
        S5HT,   8, 
        S6DE,   8, 
        S6AT,   8, 
        S6PT,   8, 
        S6CT,   8, 
        S6HT,   8, 
        S7DE,   8, 
        S7AT,   8, 
        S7PT,   8, 
        S7CT,   8, 
        S7HT,   8, 
        S1S3,   8, 
        S2S3,   8, 
        S3S3,   8, 
        S4S3,   8, 
        S5S3,   8, 
        S6S3,   8, 
        S7S3,   8, 
        PSME,   8, 
        PDT1,   8, 
        PLM1,   16, 
        PTW1,   16, 
        PDT2,   8, 
        PLM2,   16, 
        PTW2,   16, 
        DDT1,   8, 
        DDP1,   8, 
        DLI1,   16, 
        DPL1,   16, 
        DTW1,   16, 
        DMI1,   16, 
        DMA1,   16, 
        DMT1,   16, 
        DDT2,   8, 
        DDP2,   8, 
        DLI2,   16, 
        DPL2,   16, 
        DTW2,   16, 
        DMI2,   16, 
        DMA2,   16, 
        DMT2,   16, 
        WIFE,   8, 
        DOM1,   8, 
        LIM1,   16, 
        TIM1,   16, 
        DOM2,   8, 
        LIM2,   16, 
        TIM2,   16, 
        DOM3,   8, 
        LIM3,   16, 
        TIM3,   16, 
        TRD0,   8, 
        TRL0,   8, 
        TRD1,   8, 
        TRL1,   8, 
        DACT,   8, 
        MPL1,   16, 
        MPL2,   16, 
        SATS,   16, 
        PCTS,   16, 
        SKTS,   16, 
        TBTS,   8, 
        ECGP,   8, 
        IVDF,   8, 
        WDM1,   8, 
        CID1,   16, 
        WDM2,   8, 
        CID2,   16, 
        ECR1,   8, 
        DRMB,   64, 
        EMOD,   8, 
        CCMD,   8, 
        COMD,   8, 
        LPT1,   8, 
        PSTP,   8, 
        WKMD,   8, 
        IDER,   8, 
        PIE0,   8, 
        PIE1,   8, 
        CSTS,   8, 
        PMEE,   8, 
        WOLE,   8, 
        NVAD,   32, 
        NVSZ,   32, 
        IFSE,   8, 
        ISCT,   8, 
        S1C0,   16, 
        S1C1,   16, 
        S2C0,   16, 
        S2C1,   16, 
        P2KB,   8, 
        HRAM,   8, 
        MDEN,   8, 
        TBEP,   8, 
        SDEB,   8, 
        FGNE,   8, 
        TBTC,   8, 
        TRPN,   8, 
        TBTM,   32, 
        ULTP,   8
    }


    004B: 5B 81 4D 97 47 4E 56 53 10 4F 53 59 53 10 53 4D  // [.M.GNVS.OSYS.SM
    005B: 49 46 08 50 52 4D 30 08 50 52 4D 31 08 53 43 49  // IF.PRM0.PRM1.SCI
    006B: 46 08 50 52 4D 32 08 50 52 4D 33 08 4C 43 4B 46  // F.PRM2.PRM3.LCKF
    007B: 08 50 52 4D 34 08 50 52 4D 35 08 50 38 30 44 20  // .PRM4.PRM5.P80D 
    008B: 50 57 52 53 08 44 42 47 53 08 54 48 4F 46 08 41  // PWRS.DBGS.THOF.A
    009B: 43 54 31 08 41 43 54 54 08 50 53 56 54 08 54 43  // CT1.ACTT.PSVT.TC
    00AB: 31 56 08 54 43 32 56 08 54 53 50 56 08 43 52 54  // 1V.TC2V.TSPV.CRT
    00BB: 54 08 44 54 53 45 08 44 54 53 31 08 44 54 53 32  // T.DTSE.DTS1.DTS2
    00CB: 08 44 54 53 46 08 00 08 52 53 56 30 08 52 53 56  // .DTSF...RSV0.RSV
    00DB: 31 08 52 53 56 32 08 52 53 56 33 08 52 53 56 34  // 1.RSV2.RSV3.RSV4
    00EB: 08 52 53 56 35 08 52 53 56 36 08 52 45 56 4E 08  // .RSV5.RSV6.REVN.
    00FB: 00 10 41 50 49 43 08 54 43 4E 54 08 50 43 50 30  // ..APIC.TCNT.PCP0
    010B: 08 50 43 50 31 08 50 50 43 4D 08 50 50 4D 46 20  // .PCP1.PPCM.PPMF 
    011B: 43 36 37 4C 08 4E 41 54 50 08 43 4D 41 50 08 43  // C67L.NATP.CMAP.C
    012B: 4D 42 50 08 4C 50 54 50 08 46 44 43 50 08 43 4D  // MBP.LPTP.FDCP.CM
    013B: 43 50 08 43 49 52 50 08 53 4D 53 43 08 57 33 38  // CP.CIRP.SMSC.W38
    014B: 31 08 53 4D 43 31 08 45 4D 41 45 08 45 4D 41 50  // 1.SMC1.EMAE.EMAP
    015B: 10 45 4D 41 4C 10 00 08 4D 45 46 45 08 44 53 54  // .EMAL...MEFE.DST
    016B: 53 08 54 4C 32 46 20 4D 4F 52 44 08 54 43 47 50  // S.TL2F MORD.TCGP
    017B: 08 50 50 52 50 20 50 50 52 51 08 4C 50 50 52 08  // .PPRP PPRQ.LPPR.
    018B: 47 54 46 30 38 47 54 46 32 38 49 44 45 4D 08 47  // GTF08GTF28IDEM.G
    019B: 54 46 31 38 42 49 44 5F 10 50 4C 49 44 08 45 43  // TF18BID_.PLID.EC
    01AB: 54 47 08 53 44 50 4F 08 53 4B 49 44 08 00 20 4F  // TG.SDPO.SKID.. O
    01BB: 53 43 43 08 4E 45 58 50 08 53 42 56 31 08 53 42  // SCC.NEXP.SBV1.SB
    01CB: 56 32 08 00 30 44 53 45 4E 08 00 08 47 50 49 43  // V2..0DSEN...GPIC
    01DB: 08 43 54 59 50 08 4C 30 31 43 08 56 46 4E 30 08  // .CTYP.L01C.VFN0.
    01EB: 56 46 4E 31 08 56 46 4E 32 08 56 46 4E 33 08 56  // VFN1.VFN2.VFN3.V
    01FB: 46 4E 34 08 56 46 4E 35 08 56 46 4E 36 08 56 46  // FN4.VFN5.VFN6.VF
    020B: 4E 37 08 56 46 4E 38 08 56 46 4E 39 08 00 30 41  // N7.VFN8.VFN9..0A
    021B: 54 4D 43 08 50 54 4D 43 08 41 54 52 41 08 50 54  // TMC.PTMC.ATRA.PT
    022B: 52 41 08 50 4E 48 4D 20 00 40 04 52 54 49 50 08  // RA.PNHM .@.RTIP.
    023B: 54 53 4F 44 08 41 54 50 43 08 50 54 50 43 08 50  // TSOD.ATPC.PTPC.P
    024B: 46 4C 56 08 42 52 45 56 08 50 44 54 53 08 50 4B  // FLV.BREV.PDTS.PK
    025B: 47 41 08 50 41 4D 54 08 41 43 30 46 08 41 43 31  // GA.PAMT.AC0F.AC1
    026B: 46 08 44 54 53 33 08 44 54 53 34 08 53 48 46 51  // F.DTS3.DTS4.SHFQ
    027B: 20 4C 54 52 31 08 4C 54 52 32 08 4C 54 52 33 08  //  LTR1.LTR2.LTR3.
    028B: 4C 54 52 34 08 4C 54 52 35 08 4C 54 52 36 08 4C  // LTR4.LTR5.LTR6.L
    029B: 54 52 37 08 4C 54 52 38 08 4F 42 46 31 08 4F 42  // TR7.LTR8.OBF1.OB
    02AB: 46 32 08 4F 42 46 33 08 4F 42 46 34 08 4F 42 46  // F2.OBF3.OBF4.OBF
    02BB: 35 08 4F 42 46 36 08 4F 42 46 37 08 4F 42 46 38  // 5.OBF6.OBF7.OBF8
    02CB: 08 58 48 43 49 08 58 54 55 42 20 58 54 55 53 20  // .XHCI.XTUB XTUS 
    02DB: 58 4D 50 42 20 44 44 52 46 08 52 54 44 33 08 50  // XMPB DDRF.RTD3.P
    02EB: 45 50 30 08 50 45 50 33 08 44 50 54 46 08 53 41  // EP0.PEP3.DPTF.SA
    02FB: 44 45 08 53 41 43 52 08 53 41 48 54 08 50 43 48  // DE.SACR.SAHT.PCH
    030B: 44 08 50 43 48 43 08 50 43 48 48 08 43 54 44 50  // D.PCHC.PCHH.CTDP
    031B: 08 4C 50 4D 50 08 4C 50 4D 56 08 45 43 45 55 08  // .LPMP.LPMV.ECEU.
    032B: 54 47 46 47 10 4D 45 4D 44 08 4D 45 4D 43 08 4D  // TGFG.MEMD.MEMC.M
    033B: 45 4D 48 08 46 4E 44 31 08 46 4E 44 32 08 41 4D  // EMH.FND1.FND2.AM
    034B: 42 44 08 41 4D 41 54 08 41 4D 50 54 08 41 4D 43  // BD.AMAT.AMPT.AMC
    035B: 54 08 41 4D 48 54 08 53 4B 44 45 08 53 4B 41 54  // T.AMHT.SKDE.SKAT
    036B: 08 53 4B 50 54 08 53 4B 43 54 08 53 4B 48 54 08  // .SKPT.SKCT.SKHT.
    037B: 45 46 44 45 08 45 46 41 54 08 45 46 50 54 08 45  // EFDE.EFAT.EFPT.E
    038B: 46 43 54 08 45 46 48 54 08 56 52 44 45 08 56 52  // FCT.EFHT.VRDE.VR
    039B: 41 54 08 56 52 50 54 08 56 52 43 54 08 56 52 48  // AT.VRPT.VRCT.VRH
    03AB: 54 08 44 50 41 50 08 44 50 50 50 08 44 50 43 50  // T.DPAP.DPPP.DPCP
    03BB: 08 44 43 4D 50 08 54 52 54 56 08 4C 50 4F 45 08  // .DCMP.TRTV.LPOE.
    03CB: 4C 50 4F 50 08 4C 50 4F 53 08 4C 50 4F 57 08 4C  // LPOP.LPOS.LPOW.L
    03DB: 50 45 52 08 50 50 53 5A 20 44 49 53 45 08 42 47  // PER.PPSZ DISE.BG
    03EB: 4D 41 40 04 42 47 4D 53 08 42 47 49 41 10 49 43  // MA@.BGMS.BGIA.IC
    03FB: 4E 46 08 44 53 50 30 20 44 53 50 31 20 4E 46 43  // NF.DSP0 DSP1 NFC
    040B: 45 08 44 46 55 45 08 43 4F 44 53 08 53 4E 48 45  // E.DFUE.CODS.SNHE
    041B: 08 53 30 49 44 08 43 54 44 42 08 44 4B 53 4D 08  // .S0ID.CTDB.DKSM.
    042B: 53 49 4F 31 08 53 49 4F 32 08 53 50 42 41 10 00  // SIO1.SIO2.SPBA..
    043B: 40 6D 55 4C 43 4B 08 57 49 46 44 08 57 46 41 54  // @mULCK.WIFD.WFAT
    044B: 08 57 46 50 54 08 57 46 43 54 08 57 46 48 54 08  // .WFPT.WFCT.WFHT.
    045B: 00 20 58 48 50 52 08 53 44 53 30 10 53 44 53 31  // . XHPR.SDS0.SDS1
    046B: 10 53 44 53 32 08 53 44 53 33 08 53 44 53 34 08  // .SDS2.SDS3.SDS4.
    047B: 53 44 53 35 08 52 49 43 30 08 50 45 50 59 08 44  // SDS5.RIC0.PEPY.D
    048B: 56 53 30 08 44 56 53 31 08 44 56 53 32 08 44 56  // VS0.DVS1.DVS2.DV
    049B: 53 33 08 47 42 53 58 08 49 55 42 45 08 49 55 43  // S3.GBSX.IUBE.IUC
    04AB: 45 08 49 55 44 45 08 45 43 4E 4F 08 41 55 44 44  // E.IUDE.ECNO.AUDD
    04BB: 10 44 53 50 44 10 49 43 30 44 10 49 43 31 44 10  // .DSPD.IC0D.IC1D.
    04CB: 49 43 31 53 10 56 52 52 44 10 50 53 43 50 08 52  // IC1S.VRRD.PSCP.R
    04DB: 57 41 47 08 49 32 30 44 10 49 32 31 44 10 50 4C  // WAG.I20D.I21D.PL
    04EB: 54 30 08 52 43 47 30 10 45 43 44 42 08 50 32 4D  // T0.RCG0.ECDB.P2M
    04FB: 45 08 53 53 48 30 10 53 53 4C 30 10 53 53 44 30  // E.SSH0.SSL0.SSD0
    050B: 10 46 4D 48 30 10 46 4D 4C 30 10 46 4D 44 30 10  // .FMH0.FML0.FMD0.
    051B: 46 50 48 30 10 46 50 4C 30 10 46 50 44 30 10 53  // FPH0.FPL0.FPD0.S
    052B: 53 48 31 10 53 53 4C 31 10 53 53 44 31 10 46 4D  // SH1.SSL1.SSD1.FM
    053B: 48 31 10 46 4D 4C 31 10 46 4D 44 31 10 46 50 48  // H1.FML1.FMD1.FPH
    054B: 31 10 46 50 4C 31 10 46 50 44 31 10 4D 30 43 30  // 1.FPL1.FPD1.M0C0
    055B: 10 4D 31 43 30 10 4D 32 43 30 10 4D 30 43 31 10  // .M1C0.M2C0.M0C1.
    056B: 4D 31 43 31 10 4D 32 43 31 10 4D 30 43 32 10 4D  // M1C1.M2C1.M0C2.M
    057B: 31 43 32 10 4D 30 43 33 10 4D 31 43 33 10 4D 30  // 1C2.M0C3.M1C3.M0
    058B: 43 34 10 4D 31 43 34 10 4D 30 43 35 10 4D 31 43  // C4.M1C4.M0C5.M1C
    059B: 35 10 54 42 53 46 08 47 49 52 51 20 44 4D 54 50  // 5.TBSF.GIRQ DMTP
    05AB: 08 44 4D 54 44 08 44 4D 53 48 08 4C 41 4E 50 08  // .DMTD.DMSH.LANP.
    05BB: 00 08 53 48 53 42 08 50 4C 43 53 08 50 4C 56 4C  // ..SHSB.PLCS.PLVL
    05CB: 10 47 4E 31 45 08 47 31 41 54 08 47 31 50 54 08  // .GN1E.G1AT.G1PT.
    05DB: 47 31 43 54 08 47 31 48 54 08 47 4E 32 45 08 47  // G1CT.G1HT.GN2E.G
    05EB: 32 41 54 08 47 32 50 54 08 47 32 43 54 08 47 32  // 2AT.G2PT.G2CT.G2
    05FB: 48 54 08 57 57 53 44 08 43 56 53 44 08 53 53 44  // HT.WWSD.CVSD.SSD
    060B: 44 08 49 4E 4C 44 08 49 46 41 54 08 49 46 50 54  // D.INLD.IFAT.IFPT
    061B: 08 49 46 43 54 08 49 46 48 54 08 41 4E 43 53 08  // .IFCT.IFHT.ANCS.
    062B: 53 48 54 50 08 42 43 56 34 08 57 54 56 58 08 57  // SHTP.BCV4.WTVX.W
    063B: 49 54 58 08 41 50 46 55 08 53 4F 48 50 08 4E 4F  // ITX.APFU.SOHP.NO
    064B: 48 50 08 54 42 53 45 08 57 4B 46 4E 08 50 45 50  // HP.TBSE.WKFN.PEP
    065B: 43 10 56 52 53 44 10 50 42 31 45 08 47 4E 49 44  // C.VRSD.PB1E.GNID
    066B: 08 57 41 4E 44 08 57 57 41 54 08 57 57 50 54 08  // .WAND.WWAT.WWPT.
    067B: 57 57 43 54 08 57 57 48 54 08 00 28 4D 50 4C 30  // WWCT.WWHT..(MPL0
    068B: 10 47 52 31 33 08 43 48 47 45 08 53 41 43 33 08  // .GR13.CHGE.SAC3.
    069B: 50 43 48 33 08 4D 45 4D 33 08 41 4D 43 33 08 53  // PCH3.MEM3.AMC3.S
    06AB: 4B 43 33 08 45 46 43 33 08 56 52 43 33 08 57 46  // KC3.EFC3.VRC3.WF
    06BB: 43 33 08 47 31 43 33 08 47 32 43 33 08 49 46 43  // C3.G1C3.G2C3.IFC
    06CB: 33 08 57 57 43 33 08 57 47 43 33 08 53 50 53 54  // 3.WWC3.WGC3.SPST
    06DB: 08 00 08 47 4E 33 45 08 47 33 41 54 08 47 33 50  // ...GN3E.G3AT.G3P
    06EB: 54 08 47 33 43 54 08 47 33 48 54 08 47 4E 34 45  // T.G3CT.G3HT.GN4E
    06FB: 08 47 34 41 54 08 47 34 50 54 08 47 34 43 54 08  // .G4AT.G4PT.G4CT.
    070B: 47 34 48 54 08 47 4E 35 45 08 47 35 41 54 08 47  // G4HT.GN5E.G5AT.G
    071B: 35 50 54 08 47 35 43 54 08 47 35 48 54 08 47 4E  // 5PT.G5CT.G5HT.GN
    072B: 36 45 08 47 36 41 54 08 47 36 50 54 08 47 36 43  // 6E.G6AT.G6PT.G6C
    073B: 54 08 47 36 48 54 08 45 43 4C 50 08 47 33 43 33  // T.G6HT.ECLP.G3C3
    074B: 08 47 34 43 33 08 47 35 43 33 08 47 36 43 33 08  // .G4C3.G5C3.G6C3.
    075B: 00 30 53 31 44 45 08 53 31 41 54 08 53 31 50 54  // .0S1DE.S1AT.S1PT
    076B: 08 53 31 43 54 08 53 31 48 54 08 53 32 44 45 08  // .S1CT.S1HT.S2DE.
    077B: 53 32 41 54 08 53 32 50 54 08 53 32 43 54 08 53  // S2AT.S2PT.S2CT.S
    078B: 32 48 54 08 53 33 44 45 08 53 33 41 54 08 53 33  // 2HT.S3DE.S3AT.S3
    079B: 50 54 08 53 33 43 54 08 53 33 48 54 08 53 34 44  // PT.S3CT.S3HT.S4D
    07AB: 45 08 53 34 41 54 08 53 34 50 54 08 53 34 43 54  // E.S4AT.S4PT.S4CT
    07BB: 08 53 34 48 54 08 53 35 44 45 08 53 35 41 54 08  // .S4HT.S5DE.S5AT.
    07CB: 53 35 50 54 08 53 35 43 54 08 53 35 48 54 08 53  // S5PT.S5CT.S5HT.S
    07DB: 36 44 45 08 53 36 41 54 08 53 36 50 54 08 53 36  // 6DE.S6AT.S6PT.S6
    07EB: 43 54 08 53 36 48 54 08 53 37 44 45 08 53 37 41  // CT.S6HT.S7DE.S7A
    07FB: 54 08 53 37 50 54 08 53 37 43 54 08 53 37 48 54  // T.S7PT.S7CT.S7HT
    080B: 08 53 31 53 33 08 53 32 53 33 08 53 33 53 33 08  // .S1S3.S2S3.S3S3.
    081B: 53 34 53 33 08 53 35 53 33 08 53 36 53 33 08 53  // S4S3.S5S3.S6S3.S
    082B: 37 53 33 08 50 53 4D 45 08 50 44 54 31 08 50 4C  // 7S3.PSME.PDT1.PL
    083B: 4D 31 10 50 54 57 31 10 50 44 54 32 08 50 4C 4D  // M1.PTW1.PDT2.PLM
    084B: 32 10 50 54 57 32 10 44 44 54 31 08 44 44 50 31  // 2.PTW2.DDT1.DDP1
    085B: 08 44 4C 49 31 10 44 50 4C 31 10 44 54 57 31 10  // .DLI1.DPL1.DTW1.
    086B: 44 4D 49 31 10 44 4D 41 31 10 44 4D 54 31 10 44  // DMI1.DMA1.DMT1.D
    087B: 44 54 32 08 44 44 50 32 08 44 4C 49 32 10 44 50  // DT2.DDP2.DLI2.DP
    088B: 4C 32 10 44 54 57 32 10 44 4D 49 32 10 44 4D 41  // L2.DTW2.DMI2.DMA
    089B: 32 10 44 4D 54 32 10 57 49 46 45 08 44 4F 4D 31  // 2.DMT2.WIFE.DOM1
    08AB: 08 4C 49 4D 31 10 54 49 4D 31 10 44 4F 4D 32 08  // .LIM1.TIM1.DOM2.
    08BB: 4C 49 4D 32 10 54 49 4D 32 10 44 4F 4D 33 08 4C  // LIM2.TIM2.DOM3.L
    08CB: 49 4D 33 10 54 49 4D 33 10 54 52 44 30 08 54 52  // IM3.TIM3.TRD0.TR
    08DB: 4C 30 08 54 52 44 31 08 54 52 4C 31 08 44 41 43  // L0.TRD1.TRL1.DAC
    08EB: 54 08 4D 50 4C 31 10 4D 50 4C 32 10 53 41 54 53  // T.MPL1.MPL2.SATS
    08FB: 10 50 43 54 53 10 53 4B 54 53 10 54 42 54 53 08  // .PCTS.SKTS.TBTS.
    090B: 45 43 47 50 08 49 56 44 46 08 57 44 4D 31 08 43  // ECGP.IVDF.WDM1.C
    091B: 49 44 31 10 57 44 4D 32 08 43 49 44 32 10 45 43  // ID1.WDM2.CID2.EC
    092B: 52 31 08 44 52 4D 42 40 04 45 4D 4F 44 08 43 43  // R1.DRMB@.EMOD.CC
    093B: 4D 44 08 43 4F 4D 44 08 4C 50 54 31 08 50 53 54  // MD.COMD.LPT1.PST
    094B: 50 08 57 4B 4D 44 08 49 44 45 52 08 50 49 45 30  // P.WKMD.IDER.PIE0
    095B: 08 50 49 45 31 08 43 53 54 53 08 50 4D 45 45 08  // .PIE1.CSTS.PMEE.
    096B: 57 4F 4C 45 08 4E 56 41 44 20 4E 56 53 5A 20 49  // WOLE.NVAD NVSZ I
    097B: 46 53 45 08 49 53 43 54 08 53 31 43 30 10 53 31  // FSE.ISCT.S1C0.S1
    098B: 43 31 10 53 32 43 30 10 53 32 43 31 10 50 32 4B  // C1.S2C0.S2C1.P2K
    099B: 42 08 48 52 41 4D 08 4D 44 45 4E 08 54 42 45 50  // B.HRAM.MDEN.TBEP
    09AB: 08 53 44 45 42 08 46 47 4E 45 08 54 42 54 43 08  // .SDEB.FGNE.TBTC.
    09BB: 54 52 50 4E 08 54 42 54 4D 20 55 4C 54 50 08     // TRPN.TBTM ULTP.

    OperationRegion (OGNS, SystemMemory, 0x96FB8F98, 0x00000010)

    09CA: 5B 80 4F 47 4E 53 00 0C 98 8F FB 96 0C 10 00 00  // [.OGNS..........
    09DA: 00                                               // .

    Field (OGNS, AnyAcc, Lock, Preserve)
    {
        OG00,   8, 
        OG01,   8, 
        OG02,   8, 
        OG03,   8, 
        OG04,   8, 
        OG05,   8, 
        OG06,   8, 
        OG07,   8, 
        OG08,   8, 
        OG09,   8, 
        OG10,   8, 
        ECON,   8, 
        FPID,   32
    }


    09DB: 5B 81 48 04 4F 47 4E 53 10 4F 47 30 30 08 4F 47  // [.H.OGNS.OG00.OG
    09EB: 30 31 08 4F 47 30 32 08 4F 47 30 33 08 4F 47 30  // 01.OG02.OG03.OG0
    09FB: 34 08 4F 47 30 35 08 4F 47 30 36 08 4F 47 30 37  // 4.OG05.OG06.OG07
    0A0B: 08 4F 47 30 38 08 4F 47 30 39 08 4F 47 31 30 08  // .OG08.OG09.OG10.
    0A1B: 45 43 4F 4E 08 46 50 49 44 20                    // ECON.FPID 

    Scope (_SB)
    {

    0A25: 10 8E 29 01 5F 53 42 5F                          // ..)._SB_

        Name (PR00, 
    0A2D: 08 50 52 30 30                                   // .PR00

Package (0x1E)
        {

    0A32: 12 41 1B 1E                                      // .A..

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                LNKF, 
                Zero
            }, 


    0A36: 12 0D 04 0C FF FF 1F 00 00 4C 4E 4B 46 00        // .........LNKF.

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


    0A44: 12 0D 04 0C FF FF 1F 00 01 4C 4E 4B 44 00        // .........LNKD.

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    0A52: 12 0E 04 0C FF FF 1F 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                LNKA, 
                Zero
            }, 


    0A61: 12 0E 04 0C FF FF 1F 00 0A 03 4C 4E 4B 41 00     // ..........LNKA.

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 


    0A70: 12 0D 04 0C FF FF 15 00 00 4C 4E 4B 45 00        // .........LNKE.

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                LNKE, 
                Zero
            }, 


    0A7E: 12 0D 04 0C FF FF 15 00 01 4C 4E 4B 45 00        // .........LNKE.

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                LNKF, 
                Zero
            }, 


    0A8C: 12 0E 04 0C FF FF 15 00 0A 02 4C 4E 4B 46 00     // ..........LNKF.

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                LNKF, 
                Zero
            }, 


    0A9B: 12 0E 04 0C FF FF 15 00 0A 03 4C 4E 4B 46 00     // ..........LNKF.

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 


    0AAA: 12 0D 04 0C FF FF 17 00 00 4C 4E 4B 47 00        // .........LNKG.

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                LNKH, 
                Zero
            }, 


    0AB8: 12 0D 04 0C FF FF 1D 00 00 4C 4E 4B 48 00        // .........LNKH.

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    0AC6: 12 0D 04 0C FF FF 1A 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                LNKH, 
                Zero
            }, 


    0AD4: 12 0D 04 0C FF FF 13 00 00 4C 4E 4B 48 00        // .........LNKH.

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 


    0AE2: 12 0D 04 0C FF FF 1B 00 00 4C 4E 4B 47 00        // .........LNKG.

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 


    0AF0: 12 0D 04 0C FF FF 18 00 00 4C 4E 4B 45 00        // .........LNKE.

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                LNKE, 
                Zero
            }, 


    0AFE: 12 0D 04 0C FF FF 19 00 00 4C 4E 4B 45 00        // .........LNKE.

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    0B0C: 12 0D 04 0C FF FF 16 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    0B1A: 12 0D 04 0C FF FF 16 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    0B28: 12 0E 04 0C FF FF 16 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    0B37: 12 0E 04 0C FF FF 16 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    0B46: 12 0D 04 0C FF FF 1C 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    0B54: 12 0D 04 0C FF FF 1C 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    0B62: 12 0E 04 0C FF FF 1C 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    0B71: 12 0E 04 0C FF FF 1C 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    0B80: 12 0D 04 0C FF FF 01 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    0B8E: 12 0D 04 0C FF FF 01 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    0B9C: 12 0E 04 0C FF FF 01 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


    0BAB: 12 0E 04 0C FF FF 01 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    0BBA: 12 0D 04 0C FF FF 02 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    0BC8: 12 0D 04 0C FF FF 03 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                LNKA, 
                Zero
            }
        })

    0BD6: 12 0D 04 0C FF FF 04 00 00 4C 4E 4B 41 00        // .........LNKA.

        Name (AR00, 
    0BE4: 08 41 52 30 30                                   // .AR00

Package (0x1E)
        {

    0BE9: 12 45 17 1E                                      // .E..

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x15
            }, 


    0BED: 12 0B 04 0C FF FF 1F 00 00 00 0A 15              // ............

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                Zero, 
                0x13
            }, 


    0BF9: 12 0B 04 0C FF FF 1F 00 01 00 0A 13              // ............

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    0C05: 12 0C 04 0C FF FF 1F 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                Zero, 
                0x10
            }, 


    0C12: 12 0C 04 0C FF FF 1F 00 0A 03 00 0A 10           // .............

            Package (0x04)
            {
                0x0015FFFF, 
                Zero, 
                Zero, 
                0x14
            }, 


    0C1F: 12 0B 04 0C FF FF 15 00 00 00 0A 14              // ............

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                Zero, 
                0x14
            }, 


    0C2B: 12 0B 04 0C FF FF 15 00 01 00 0A 14              // ............

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                Zero, 
                0x15
            }, 


    0C37: 12 0C 04 0C FF FF 15 00 0A 02 00 0A 15           // .............

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                Zero, 
                0x15
            }, 


    0C44: 12 0C 04 0C FF FF 15 00 0A 03 00 0A 15           // .............

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x16
            }, 


    0C51: 12 0B 04 0C FF FF 17 00 00 00 0A 16              // ............

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x17
            }, 


    0C5D: 12 0B 04 0C FF FF 1D 00 00 00 0A 17              // ............

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    0C69: 12 0B 04 0C FF FF 1A 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x17
            }, 


    0C75: 12 0B 04 0C FF FF 13 00 00 00 0A 17              // ............

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x16
            }, 


    0C81: 12 0B 04 0C FF FF 1B 00 00 00 0A 16              // ............

            Package (0x04)
            {
                0x0018FFFF, 
                Zero, 
                Zero, 
                0x14
            }, 


    0C8D: 12 0B 04 0C FF FF 18 00 00 00 0A 14              // ............

            Package (0x04)
            {
                0x0019FFFF, 
                Zero, 
                Zero, 
                0x14
            }, 


    0C99: 12 0B 04 0C FF FF 19 00 00 00 0A 14              // ............

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    0CA5: 12 0B 04 0C FF FF 16 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                Zero, 
                0x11
            }, 


    0CB1: 12 0B 04 0C FF FF 16 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    0CBD: 12 0C 04 0C FF FF 16 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


    0CCA: 12 0C 04 0C FF FF 16 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    0CD7: 12 0B 04 0C FF FF 1C 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    0CE3: 12 0B 04 0C FF FF 1C 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    0CEF: 12 0C 04 0C FF FF 1C 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


    0CFC: 12 0C 04 0C FF FF 1C 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    0D09: 12 0B 04 0C FF FF 01 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                Zero, 
                0x11
            }, 


    0D15: 12 0B 04 0C FF FF 01 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    0D21: 12 0C 04 0C FF FF 01 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


    0D2E: 12 0C 04 0C FF FF 01 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    0D3B: 12 0B 04 0C FF FF 02 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    0D47: 12 0B 04 0C FF FF 03 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x10
            }
        })

    0D53: 12 0B 04 0C FF FF 04 00 00 00 0A 10              // ............

        Name (PR04, 
    0D5F: 08 50 52 30 34                                   // .PR04

Package (0x04)
        {

    0D64: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    0D67: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    0D73: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    0D7F: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

    0D8C: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR04, 
    0D99: 08 41 52 30 34                                   // .AR04

Package (0x04)
        {

    0D9E: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    0DA1: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    0DAB: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    0DB5: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

    0DC0: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR05, 
    0DCB: 08 50 52 30 35                                   // .PR05

Package (0x04)
        {

    0DD0: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


    0DD3: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


    0DDF: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


    0DEB: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

    0DF8: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR05, 
    0E05: 08 41 52 30 35                                   // .AR05

Package (0x04)
        {

    0E0A: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


    0E0D: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


    0E17: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


    0E21: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

    0E2C: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR06, 
    0E37: 08 50 52 30 36                                   // .PR06

Package (0x04)
        {

    0E3C: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


    0E3F: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


    0E4B: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


    0E57: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

    0E64: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR06, 
    0E71: 08 41 52 30 36                                   // .AR06

Package (0x04)
        {

    0E76: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


    0E79: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


    0E83: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


    0E8D: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

    0E98: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR07, 
    0EA3: 08 50 52 30 37                                   // .PR07

Package (0x04)
        {

    0EA8: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


    0EAB: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


    0EB7: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


    0EC3: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

    0ED0: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR07, 
    0EDD: 08 41 52 30 37                                   // .AR07

Package (0x04)
        {

    0EE2: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


    0EE5: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


    0EEF: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


    0EF9: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

    0F04: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR08, 
    0F0F: 08 50 52 30 38                                   // .PR08

Package (0x04)
        {

    0F14: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    0F17: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    0F23: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    0F2F: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

    0F3C: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR08, 
    0F49: 08 41 52 30 38                                   // .AR08

Package (0x04)
        {

    0F4E: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    0F51: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    0F5B: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    0F65: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

    0F70: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR09, 
    0F7B: 08 50 52 30 39                                   // .PR09

Package (0x04)
        {

    0F80: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    0F83: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    0F8F: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    0F9B: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

    0FA8: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR09, 
    0FB5: 08 41 52 30 39                                   // .AR09

Package (0x04)
        {

    0FBA: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    0FBD: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    0FC7: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    0FD1: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

    0FDC: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR0E, 
    0FE7: 08 50 52 30 45                                   // .PR0E

Package (0x04)
        {

    0FEC: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


    0FEF: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


    0FFB: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


    1007: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

    1014: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR0E, 
    1021: 08 41 52 30 45                                   // .AR0E

Package (0x04)
        {

    1026: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


    1029: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


    1033: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


    103D: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

    1048: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR0F, 
    1053: 08 50 52 30 46                                   // .PR0F

Package (0x04)
        {

    1058: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


    105B: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


    1067: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


    1073: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

    1080: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR0F, 
    108D: 08 41 52 30 46                                   // .AR0F

Package (0x04)
        {

    1092: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


    1095: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


    109F: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


    10A9: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

    10B4: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR02, 
    10BF: 08 50 52 30 32                                   // .PR02

Package (0x04)
        {

    10C4: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


    10C7: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


    10D3: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


    10DF: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

    10EC: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR02, 
    10F9: 08 41 52 30 32                                   // .AR02

Package (0x04)
        {

    10FE: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


    1101: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


    110B: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


    1115: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

    1120: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR0A, 
    112B: 08 50 52 30 41                                   // .PR0A

Package (0x04)
        {

    1130: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


    1133: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


    113F: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


    114B: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

    1158: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR0A, 
    1165: 08 41 52 30 41                                   // .AR0A

Package (0x04)
        {

    116A: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


    116D: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


    1177: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


    1181: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

    118C: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR0B, 
    1197: 08 50 52 30 42                                   // .PR0B

Package (0x04)
        {

    119C: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


    119F: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


    11AB: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


    11B7: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

    11C4: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR0B, 
    11D1: 08 41 52 30 42                                   // .AR0B

Package (0x04)
        {

    11D6: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


    11D9: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


    11E3: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


    11ED: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

    11F8: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PRSA, 
    1203: 08 50 52 53 41                                   // .PRSA

ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {3,4,5,6,10,11,12,14,15}
        })

    1208: 11 09 0A 06 23 78 DC 18 79 00                    // ....#x..y.

        Alias (PRSA, PRSB)

    1212: 06 50 52 53 41 50 52 53 42                       // .PRSAPRSB

        Alias (PRSA, PRSC)

    121B: 06 50 52 53 41 50 52 53 43                       // .PRSAPRSC

        Alias (PRSA, PRSD)

    1224: 06 50 52 53 41 50 52 53 44                       // .PRSAPRSD

        Alias (PRSA, PRSE)

    122D: 06 50 52 53 41 50 52 53 45                       // .PRSAPRSE

        Alias (PRSA, PRSF)

    1236: 06 50 52 53 41 50 52 53 46                       // .PRSAPRSF

        Alias (PRSA, PRSG)

    123F: 06 50 52 53 41 50 52 53 47                       // .PRSAPRSG

        Alias (PRSA, PRSH)

    1248: 06 50 52 53 41 50 52 53 48                       // .PRSAPRSH

        Device (PCI0)
        {

    1251: 5B 82 41 A7 50 43 49 30                          // [.A.PCI0

            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID

    1259: 08 5F 48 49 44 0C 41 D0 0A 08                    // ._HID.A...

            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID

    1263: 08 5F 43 49 44 0C 41 D0 0A 03                    // ._CID.A...

            Name (_ADR, Zero)  // _ADR: Address

    126D: 08 5F 41 44 52 00                                // ._ADR.

            Method (^BN00, 0, NotSerialized)
            {

    1273: 14 09 5E 42 4E 30 30 00                          // ..^BN00.

                Return (Zero)
            }


    127B: A4 00                                            // ..

            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
            {

    127D: 14 0B 5F 42 42 4E 00                             // .._BBN.

                Return (BN00 ())
            }


    1284: A4 42 4E 30 30                                   // .BN00

            Name (_UID, Zero)  // _UID: Unique ID

    1289: 08 5F 55 49 44 00                                // ._UID.

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

    128F: 14 16 5F 50 52 54 00                             // .._PRT.

                If (PICM)
                {

    1296: A0 0A 50 49 43 4D                                // ..PICM

                    Return (AR00 ())
                }


    129C: A4 41 52 30 30                                   // .AR00

                Return (PR00 ())
            }


    12A1: A4 50 52 30 30                                   // .PR00

            OperationRegion (HBUS, PCI_Config, Zero, 0x0100)

    12A6: 5B 80 48 42 55 53 02 00 0B 00 01                 // [.HBUS.....

            Field (HBUS, DWordAcc, NoLock, Preserve)
            {
                Offset (0x40), 
                EPEN,   1, 
                    ,   11, 
                EPBR,   20, 
                Offset (0x48), 
                MHEN,   1, 
                    ,   14, 
                MHBR,   17, 
                Offset (0x50), 
                GCLK,   1, 
                Offset (0x54), 
                D0EN,   1, 
                D1F2,   1, 
                D1F1,   1, 
                D1F0,   1, 
                Offset (0x60), 
                PXEN,   1, 
                PXSZ,   2, 
                    ,   23, 
                PXBR,   6, 
                Offset (0x68), 
                DIEN,   1, 
                    ,   11, 
                DIBR,   20, 
                Offset (0x70), 
                    ,   20, 
                MEBR,   12, 
                Offset (0x80), 
                    ,   4, 
                PM0H,   2, 
                Offset (0x81), 
                PM1L,   2, 
                    ,   2, 
                PM1H,   2, 
                Offset (0x82), 
                PM2L,   2, 
                    ,   2, 
                PM2H,   2, 
                Offset (0x83), 
                PM3L,   2, 
                    ,   2, 
                PM3H,   2, 
                Offset (0x84), 
                PM4L,   2, 
                    ,   2, 
                PM4H,   2, 
                Offset (0x85), 
                PM5L,   2, 
                    ,   2, 
                PM5H,   2, 
                Offset (0x86), 
                PM6L,   2, 
                    ,   2, 
                PM6H,   2, 
                Offset (0x87), 
                Offset (0xA8), 
                    ,   20, 
                TUUD,   19, 
                Offset (0xBC), 
                    ,   20, 
                TLUD,   12, 
                Offset (0xC8), 
                    ,   7, 
                HTSE,   1
            }


    12B1: 5B 81 4A 0E 48 42 55 53 03 00 40 20 45 50 45 4E  // [.J.HBUS..@ EPEN
    12C1: 01 00 0B 45 50 42 52 14 00 20 4D 48 45 4E 01 00  // ...EPBR.. MHEN..
    12D1: 0E 4D 48 42 52 11 00 20 47 43 4C 4B 01 00 1F 44  // .MHBR.. GCLK...D
    12E1: 30 45 4E 01 44 31 46 32 01 44 31 46 31 01 44 31  // 0EN.D1F2.D1F1.D1
    12F1: 46 30 01 00 4C 05 50 58 45 4E 01 50 58 53 5A 02  // F0..L.PXEN.PXSZ.
    1301: 00 17 50 58 42 52 06 00 20 44 49 45 4E 01 00 0B  // ..PXBR.. DIEN...
    1311: 44 49 42 52 14 00 20 00 14 4D 45 42 52 0C 00 40  // DIBR.. ..MEBR..@
    1321: 06 00 04 50 4D 30 48 02 00 02 50 4D 31 4C 02 00  // ...PM0H...PM1L..
    1331: 02 50 4D 31 48 02 00 02 50 4D 32 4C 02 00 02 50  // .PM1H...PM2L...P
    1341: 4D 32 48 02 00 02 50 4D 33 4C 02 00 02 50 4D 33  // M2H...PM3L...PM3
    1351: 48 02 00 02 50 4D 34 4C 02 00 02 50 4D 34 48 02  // H...PM4L...PM4H.
    1361: 00 02 50 4D 35 4C 02 00 02 50 4D 35 48 02 00 02  // ..PM5L...PM5H...
    1371: 50 4D 36 4C 02 00 02 50 4D 36 48 02 00 02 00 48  // PM6L...PM6H....H
    1381: 10 00 14 54 55 55 44 13 00 49 07 00 14 54 4C 55  // ...TUUD..I...TLU
    1391: 44 0C 00 40 04 00 07 48 54 53 45 01              // D..@...HTSE.

            Name (BUF0, 
    139D: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    ,, _Y00)
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000CF7,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000CF8,         // Length
                    ,, , TypeStatic, DenseTranslation)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000D00,         // Range Minimum
                    0x0000FFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x0000F300,         // Length
                    ,, , TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y01, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y02, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y03, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y04, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y05, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y06, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y07, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y08, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y09, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0A, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0B, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0C, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000F0000,         // Range Minimum
                    0x000FFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00010000,         // Length
                    ,, _Y0D, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0xDFFFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0xE0000000,         // Length
                    ,, _Y0E, AddressRangeMemory, TypeStatic)
                QWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x0000000000000000, // Granularity
                    0x0000000000010000, // Range Minimum
                    0x000000000001FFFF, // Range Maximum
                    0x0000000000000000, // Translation Offset
                    0x0000000000010000, // Length
                    ,, _Y0F, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, NonCacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0xFE101000,         // Range Minimum
                    0xFE113FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00013000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
            })

    13A2: 11 41 22 0B 1C 02 88 0D 00 02 0C 00 00 00 00 00  // .A".............
    13B2: FF 00 00 00 00 01 87 17 00 01 0C 03 00 00 00 00  // ................
    13C2: 00 00 00 00 F7 0C 00 00 00 00 00 00 F8 0C 00 00  // ................
    13D2: 47 01 F8 0C F8 0C 01 08 87 17 00 01 0C 03 00 00  // G...............
    13E2: 00 00 00 0D 00 00 FF FF 00 00 00 00 00 00 00 F3  // ................
    13F2: 00 00 87 17 00 00 0C 03 00 00 00 00 00 00 0A 00  // ................
    1402: FF FF 0B 00 00 00 00 00 00 00 02 00 87 17 00 00  // ................
    1412: 0C 03 00 00 00 00 00 00 0C 00 FF 3F 0C 00 00 00  // ...........?....
    1422: 00 00 00 40 00 00 87 17 00 00 0C 03 00 00 00 00  // ...@............
    1432: 00 40 0C 00 FF 7F 0C 00 00 00 00 00 00 40 00 00  // .@...........@..
    1442: 87 17 00 00 0C 03 00 00 00 00 00 80 0C 00 FF BF  // ................
    1452: 0C 00 00 00 00 00 00 40 00 00 87 17 00 00 0C 03  // .......@........
    1462: 00 00 00 00 00 C0 0C 00 FF FF 0C 00 00 00 00 00  // ................
    1472: 00 40 00 00 87 17 00 00 0C 03 00 00 00 00 00 00  // .@..............
    1482: 0D 00 FF 3F 0D 00 00 00 00 00 00 40 00 00 87 17  // ...?.......@....
    1492: 00 00 0C 03 00 00 00 00 00 40 0D 00 FF 7F 0D 00  // .........@......
    14A2: 00 00 00 00 00 40 00 00 87 17 00 00 0C 03 00 00  // .....@..........
    14B2: 00 00 00 80 0D 00 FF BF 0D 00 00 00 00 00 00 40  // ...............@
    14C2: 00 00 87 17 00 00 0C 03 00 00 00 00 00 C0 0D 00  // ................
    14D2: FF FF 0D 00 00 00 00 00 00 40 00 00 87 17 00 00  // .........@......
    14E2: 0C 03 00 00 00 00 00 00 0E 00 FF 3F 0E 00 00 00  // ...........?....
    14F2: 00 00 00 40 00 00 87 17 00 00 0C 03 00 00 00 00  // ...@............
    1502: 00 40 0E 00 FF 7F 0E 00 00 00 00 00 00 40 00 00  // .@...........@..
    1512: 87 17 00 00 0C 03 00 00 00 00 00 80 0E 00 FF BF  // ................
    1522: 0E 00 00 00 00 00 00 40 00 00 87 17 00 00 0C 03  // .......@........
    1532: 00 00 00 00 00 C0 0E 00 FF FF 0E 00 00 00 00 00  // ................
    1542: 00 40 00 00 87 17 00 00 0C 03 00 00 00 00 00 00  // .@..............
    1552: 0F 00 FF FF 0F 00 00 00 00 00 00 00 01 00 87 17  // ................
    1562: 00 00 0C 01 00 00 00 00 00 00 00 00 FF FF FF DF  // ................
    1572: 00 00 00 00 00 00 00 E0 8A 2B 00 00 0C 01 00 00  // .........+......
    1582: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 FF FF  // ................
    1592: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    15A2: 01 00 00 00 00 00 87 17 00 00 0C 01 00 00 00 00  // ................
    15B2: 00 10 10 FE FF 3F 11 FE 00 00 00 00 00 30 01 00  // .....?.......0..
    15C2: 79 00                                            // y.

            Name (EP_B, Zero)

    15C4: 08 45 50 5F 42 00                                // .EP_B.

            Name (MH_B, Zero)

    15CA: 08 4D 48 5F 42 00                                // .MH_B.

            Name (PC_B, Zero)

    15D0: 08 50 43 5F 42 00                                // .PC_B.

            Name (PC_L, Zero)

    15D6: 08 50 43 5F 4C 00                                // .PC_L.

            Name (DM_B, Zero)

    15DC: 08 44 4D 5F 42 00                                // .DM_B.

            Method (GEPB, 0, Serialized)
            {

    15E2: 14 1E 47 45 50 42 08                             // ..GEPB.

                If (LEqual (EP_B, Zero))
                {

    15E9: A0 12 93 45 50 5F 42 00                          // ...EP_B.

                    ShiftLeft (EPBR, 0x0C, EP_B) /* \_SB_.PCI0.EP_B */
                }


    15F1: 79 45 50 42 52 0A 0C 45 50 5F 42                 // yEPBR..EP_B

                Return (EP_B) /* \_SB_.PCI0.EP_B */
            }


    15FC: A4 45 50 5F 42                                   // .EP_B

            Method (GMHB, 0, Serialized)
            {

    1601: 14 1E 47 4D 48 42 08                             // ..GMHB.

                If (LEqual (MH_B, Zero))
                {

    1608: A0 12 93 4D 48 5F 42 00                          // ...MH_B.

                    ShiftLeft (MHBR, 0x0F, MH_B) /* \_SB_.PCI0.MH_B */
                }


    1610: 79 4D 48 42 52 0A 0F 4D 48 5F 42                 // yMHBR..MH_B

                Return (MH_B) /* \_SB_.PCI0.MH_B */
            }


    161B: A4 4D 48 5F 42                                   // .MH_B

            Method (GPCB, 0, Serialized)
            {

    1620: 14 1E 47 50 43 42 08                             // ..GPCB.

                If (LEqual (PC_B, Zero))
                {

    1627: A0 12 93 50 43 5F 42 00                          // ...PC_B.

                    ShiftLeft (PXBR, 0x1A, PC_B) /* \_SB_.PCI0.PC_B */
                }


    162F: 79 50 58 42 52 0A 1A 50 43 5F 42                 // yPXBR..PC_B

                Return (PC_B) /* \_SB_.PCI0.PC_B */
            }


    163A: A4 50 43 5F 42                                   // .PC_B

            Method (GPCL, 0, Serialized)
            {

    163F: 14 21 47 50 43 4C 08                             // .!GPCL.

                If (LEqual (PC_L, Zero))
                {

    1646: A0 15 93 50 43 5F 4C 00                          // ...PC_L.

                    ShiftRight (0x10000000, PXSZ, PC_L) /* \_SB_.PCI0.PC_L */
                }


    164E: 7A 0C 00 00 00 10 50 58 53 5A 50 43 5F 4C        // z.....PXSZPC_L

                Return (PC_L) /* \_SB_.PCI0.PC_L */
            }


    165C: A4 50 43 5F 4C                                   // .PC_L

            Method (GDMB, 0, Serialized)
            {

    1661: 14 1E 47 44 4D 42 08                             // ..GDMB.

                If (LEqual (DM_B, Zero))
                {

    1668: A0 12 93 44 4D 5F 42 00                          // ...DM_B.

                    ShiftLeft (DIBR, 0x0C, DM_B) /* \_SB_.PCI0.DM_B */
                }


    1670: 79 44 49 42 52 0A 0C 44 4D 5F 42                 // yDIBR..DM_B

                Return (DM_B) /* \_SB_.PCI0.DM_B */
            }


    167B: A4 44 4D 5F 42                                   // .DM_B

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (GPCL (), Local0)

    1680: 14 49 36 5F 43 52 53 08 70 47 50 43 4C 60        // .I6_CRS.pGPCL`

                CreateWordField (BUF0, \_SB.PCI0._Y00._MAX, PBMX)  // _MAX: Maximum Base Address
                Store (Subtract (ShiftRight (Local0, 0x14), 0x02), PBMX) /* \_SB_.PCI0._CRS.PBMX */

    168E: 8B 42 55 46 30 0A 0A 50 42 4D 58 70 74 7A 60 0A  // .BUF0..PBMXptz`.
    169E: 14 00 0A 02 00 50 42 4D 58                       // .....PBMX

                CreateWordField (BUF0, \_SB.PCI0._Y00._LEN, PBLN)  // _LEN: Length
                Store (Subtract (ShiftRight (Local0, 0x14), One), PBLN) /* \_SB_.PCI0._CRS.PBLN */

    16A7: 8B 42 55 46 30 0A 0E 50 42 4C 4E 70 74 7A 60 0A  // .BUF0..PBLNptz`.
    16B7: 14 00 01 00 50 42 4C 4E                          // ....PBLN

                If (PM1L)
                {

    16BF: A0 16 50 4D 31 4C                                // ..PM1L

                    CreateDWordField (BUF0, \_SB.PCI0._Y01._LEN, C0LN)  // _LEN: Length

    16C5: 8A 42 55 46 30 0A 7C 43 30 4C 4E                 // .BUF0.|C0LN

                    Store (Zero, C0LN) /* \_SB_.PCI0._CRS.C0LN */
                }


    16D0: 70 00 43 30 4C 4E                                // p.C0LN

                If (LEqual (PM1L, One))
                {

    16D6: A0 19 93 50 4D 31 4C 01                          // ...PM1L.

                    CreateBitField (BUF0, \_SB.PCI0._Y01._RW, C0RW)  // _RW_: Read-Write Status

    16DE: 8D 42 55 46 30 0B 58 03 43 30 52 57              // .BUF0.X.C0RW

                    Store (Zero, C0RW) /* \_SB_.PCI0._CRS.C0RW */
                }


    16EA: 70 00 43 30 52 57                                // p.C0RW

                If (PM1H)
                {

    16F0: A0 16 50 4D 31 48                                // ..PM1H

                    CreateDWordField (BUF0, \_SB.PCI0._Y02._LEN, C4LN)  // _LEN: Length

    16F6: 8A 42 55 46 30 0A 96 43 34 4C 4E                 // .BUF0..C4LN

                    Store (Zero, C4LN) /* \_SB_.PCI0._CRS.C4LN */
                }


    1701: 70 00 43 34 4C 4E                                // p.C4LN

                If (LEqual (PM1H, One))
                {

    1707: A0 19 93 50 4D 31 48 01                          // ...PM1H.

                    CreateBitField (BUF0, \_SB.PCI0._Y02._RW, C4RW)  // _RW_: Read-Write Status

    170F: 8D 42 55 46 30 0B 28 04 43 34 52 57              // .BUF0.(.C4RW

                    Store (Zero, C4RW) /* \_SB_.PCI0._CRS.C4RW */
                }


    171B: 70 00 43 34 52 57                                // p.C4RW

                If (PM2L)
                {

    1721: A0 16 50 4D 32 4C                                // ..PM2L

                    CreateDWordField (BUF0, \_SB.PCI0._Y03._LEN, C8LN)  // _LEN: Length

    1727: 8A 42 55 46 30 0A B0 43 38 4C 4E                 // .BUF0..C8LN

                    Store (Zero, C8LN) /* \_SB_.PCI0._CRS.C8LN */
                }


    1732: 70 00 43 38 4C 4E                                // p.C8LN

                If (LEqual (PM2L, One))
                {

    1738: A0 19 93 50 4D 32 4C 01                          // ...PM2L.

                    CreateBitField (BUF0, \_SB.PCI0._Y03._RW, C8RW)  // _RW_: Read-Write Status

    1740: 8D 42 55 46 30 0B F8 04 43 38 52 57              // .BUF0...C8RW

                    Store (Zero, C8RW) /* \_SB_.PCI0._CRS.C8RW */
                }


    174C: 70 00 43 38 52 57                                // p.C8RW

                If (PM2H)
                {

    1752: A0 16 50 4D 32 48                                // ..PM2H

                    CreateDWordField (BUF0, \_SB.PCI0._Y04._LEN, CCLN)  // _LEN: Length

    1758: 8A 42 55 46 30 0A CA 43 43 4C 4E                 // .BUF0..CCLN

                    Store (Zero, CCLN) /* \_SB_.PCI0._CRS.CCLN */
                }


    1763: 70 00 43 43 4C 4E                                // p.CCLN

                If (LEqual (PM2H, One))
                {

    1769: A0 19 93 50 4D 32 48 01                          // ...PM2H.

                    CreateBitField (BUF0, \_SB.PCI0._Y04._RW, CCRW)  // _RW_: Read-Write Status

    1771: 8D 42 55 46 30 0B C8 05 43 43 52 57              // .BUF0...CCRW

                    Store (Zero, CCRW) /* \_SB_.PCI0._CRS.CCRW */
                }


    177D: 70 00 43 43 52 57                                // p.CCRW

                If (PM3L)
                {

    1783: A0 16 50 4D 33 4C                                // ..PM3L

                    CreateDWordField (BUF0, \_SB.PCI0._Y05._LEN, D0LN)  // _LEN: Length

    1789: 8A 42 55 46 30 0A E4 44 30 4C 4E                 // .BUF0..D0LN

                    Store (Zero, D0LN) /* \_SB_.PCI0._CRS.D0LN */
                }


    1794: 70 00 44 30 4C 4E                                // p.D0LN

                If (LEqual (PM3L, One))
                {

    179A: A0 19 93 50 4D 33 4C 01                          // ...PM3L.

                    CreateBitField (BUF0, \_SB.PCI0._Y05._RW, D0RW)  // _RW_: Read-Write Status

    17A2: 8D 42 55 46 30 0B 98 06 44 30 52 57              // .BUF0...D0RW

                    Store (Zero, D0RW) /* \_SB_.PCI0._CRS.D0RW */
                }


    17AE: 70 00 44 30 52 57                                // p.D0RW

                If (PM3H)
                {

    17B4: A0 16 50 4D 33 48                                // ..PM3H

                    CreateDWordField (BUF0, \_SB.PCI0._Y06._LEN, D4LN)  // _LEN: Length

    17BA: 8A 42 55 46 30 0A FE 44 34 4C 4E                 // .BUF0..D4LN

                    Store (Zero, D4LN) /* \_SB_.PCI0._CRS.D4LN */
                }


    17C5: 70 00 44 34 4C 4E                                // p.D4LN

                If (LEqual (PM3H, One))
                {

    17CB: A0 19 93 50 4D 33 48 01                          // ...PM3H.

                    CreateBitField (BUF0, \_SB.PCI0._Y06._RW, D4RW)  // _RW_: Read-Write Status

    17D3: 8D 42 55 46 30 0B 68 07 44 34 52 57              // .BUF0.h.D4RW

                    Store (Zero, D4RW) /* \_SB_.PCI0._CRS.D4RW */
                }


    17DF: 70 00 44 34 52 57                                // p.D4RW

                If (PM4L)
                {

    17E5: A0 17 50 4D 34 4C                                // ..PM4L

                    CreateDWordField (BUF0, \_SB.PCI0._Y07._LEN, D8LN)  // _LEN: Length

    17EB: 8A 42 55 46 30 0B 18 01 44 38 4C 4E              // .BUF0...D8LN

                    Store (Zero, D8LN) /* \_SB_.PCI0._CRS.D8LN */
                }


    17F7: 70 00 44 38 4C 4E                                // p.D8LN

                If (LEqual (PM4L, One))
                {

    17FD: A0 19 93 50 4D 34 4C 01                          // ...PM4L.

                    CreateBitField (BUF0, \_SB.PCI0._Y07._RW, D8RW)  // _RW_: Read-Write Status

    1805: 8D 42 55 46 30 0B 38 08 44 38 52 57              // .BUF0.8.D8RW

                    Store (Zero, D8RW) /* \_SB_.PCI0._CRS.D8RW */
                }


    1811: 70 00 44 38 52 57                                // p.D8RW

                If (PM4H)
                {

    1817: A0 17 50 4D 34 48                                // ..PM4H

                    CreateDWordField (BUF0, \_SB.PCI0._Y08._LEN, DCLN)  // _LEN: Length

    181D: 8A 42 55 46 30 0B 32 01 44 43 4C 4E              // .BUF0.2.DCLN

                    Store (Zero, DCLN) /* \_SB_.PCI0._CRS.DCLN */
                }


    1829: 70 00 44 43 4C 4E                                // p.DCLN

                If (LEqual (PM4H, One))
                {

    182F: A0 19 93 50 4D 34 48 01                          // ...PM4H.

                    CreateBitField (BUF0, \_SB.PCI0._Y08._RW, DCRW)  // _RW_: Read-Write Status

    1837: 8D 42 55 46 30 0B 08 09 44 43 52 57              // .BUF0...DCRW

                    Store (Zero, DCRW) /* \_SB_.PCI0._CRS.DCRW */
                }


    1843: 70 00 44 43 52 57                                // p.DCRW

                If (PM5L)
                {

    1849: A0 17 50 4D 35 4C                                // ..PM5L

                    CreateDWordField (BUF0, \_SB.PCI0._Y09._LEN, E0LN)  // _LEN: Length

    184F: 8A 42 55 46 30 0B 4C 01 45 30 4C 4E              // .BUF0.L.E0LN

                    Store (Zero, E0LN) /* \_SB_.PCI0._CRS.E0LN */
                }


    185B: 70 00 45 30 4C 4E                                // p.E0LN

                If (LEqual (PM5L, One))
                {

    1861: A0 19 93 50 4D 35 4C 01                          // ...PM5L.

                    CreateBitField (BUF0, \_SB.PCI0._Y09._RW, E0RW)  // _RW_: Read-Write Status

    1869: 8D 42 55 46 30 0B D8 09 45 30 52 57              // .BUF0...E0RW

                    Store (Zero, E0RW) /* \_SB_.PCI0._CRS.E0RW */
                }


    1875: 70 00 45 30 52 57                                // p.E0RW

                If (PM5H)
                {

    187B: A0 17 50 4D 35 48                                // ..PM5H

                    CreateDWordField (BUF0, \_SB.PCI0._Y0A._LEN, E4LN)  // _LEN: Length

    1881: 8A 42 55 46 30 0B 66 01 45 34 4C 4E              // .BUF0.f.E4LN

                    Store (Zero, E4LN) /* \_SB_.PCI0._CRS.E4LN */
                }


    188D: 70 00 45 34 4C 4E                                // p.E4LN

                If (LEqual (PM5H, One))
                {

    1893: A0 19 93 50 4D 35 48 01                          // ...PM5H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0A._RW, E4RW)  // _RW_: Read-Write Status

    189B: 8D 42 55 46 30 0B A8 0A 45 34 52 57              // .BUF0...E4RW

                    Store (Zero, E4RW) /* \_SB_.PCI0._CRS.E4RW */
                }


    18A7: 70 00 45 34 52 57                                // p.E4RW

                If (PM6L)
                {

    18AD: A0 17 50 4D 36 4C                                // ..PM6L

                    CreateDWordField (BUF0, \_SB.PCI0._Y0B._LEN, E8LN)  // _LEN: Length

    18B3: 8A 42 55 46 30 0B 80 01 45 38 4C 4E              // .BUF0...E8LN

                    Store (Zero, E8LN) /* \_SB_.PCI0._CRS.E8LN */
                }


    18BF: 70 00 45 38 4C 4E                                // p.E8LN

                If (LEqual (PM6L, One))
                {

    18C5: A0 19 93 50 4D 36 4C 01                          // ...PM6L.

                    CreateBitField (BUF0, \_SB.PCI0._Y0B._RW, E8RW)  // _RW_: Read-Write Status

    18CD: 8D 42 55 46 30 0B 78 0B 45 38 52 57              // .BUF0.x.E8RW

                    Store (Zero, E8RW) /* \_SB_.PCI0._CRS.E8RW */
                }


    18D9: 70 00 45 38 52 57                                // p.E8RW

                If (PM6H)
                {

    18DF: A0 17 50 4D 36 48                                // ..PM6H

                    CreateDWordField (BUF0, \_SB.PCI0._Y0C._LEN, ECLN)  // _LEN: Length

    18E5: 8A 42 55 46 30 0B 9A 01 45 43 4C 4E              // .BUF0...ECLN

                    Store (Zero, ECLN) /* \_SB_.PCI0._CRS.ECLN */
                }


    18F1: 70 00 45 43 4C 4E                                // p.ECLN

                If (LEqual (PM6H, One))
                {

    18F7: A0 19 93 50 4D 36 48 01                          // ...PM6H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0C._RW, ECRW)  // _RW_: Read-Write Status

    18FF: 8D 42 55 46 30 0B 48 0C 45 43 52 57              // .BUF0.H.ECRW

                    Store (Zero, ECRW) /* \_SB_.PCI0._CRS.ECRW */
                }


    190B: 70 00 45 43 52 57                                // p.ECRW

                If (PM0H)
                {

    1911: A0 17 50 4D 30 48                                // ..PM0H

                    CreateDWordField (BUF0, \_SB.PCI0._Y0D._LEN, F0LN)  // _LEN: Length

    1917: 8A 42 55 46 30 0B B4 01 46 30 4C 4E              // .BUF0...F0LN

                    Store (Zero, F0LN) /* \_SB_.PCI0._CRS.F0LN */
                }


    1923: 70 00 46 30 4C 4E                                // p.F0LN

                If (LEqual (PM0H, One))
                {

    1929: A0 19 93 50 4D 30 48 01                          // ...PM0H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0D._RW, F0RW)  // _RW_: Read-Write Status

    1931: 8D 42 55 46 30 0B 18 0D 46 30 52 57              // .BUF0...F0RW

                    Store (Zero, F0RW) /* \_SB_.PCI0._CRS.F0RW */
                }


    193D: 70 00 46 30 52 57                                // p.F0RW

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MIN, M1MN)  // _MIN: Minimum Base Address

    1943: 8A 42 55 46 30 0B C2 01 4D 31 4D 4E              // .BUF0...M1MN

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MAX, M1MX)  // _MAX: Maximum Base Address

    194F: 8A 42 55 46 30 0B C6 01 4D 31 4D 58              // .BUF0...M1MX

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._LEN, M1LN)  // _LEN: Length
                ShiftLeft (TLUD, 0x14, M1MN) /* \_SB_.PCI0._CRS.M1MN */
                Add (Subtract (M1MX, M1MN), One, M1LN) /* \_SB_.PCI0._CRS.M1LN */

    195B: 8A 42 55 46 30 0B CE 01 4D 31 4C 4E 79 54 4C 55  // .BUF0...M1LNyTLU
    196B: 44 0A 14 4D 31 4D 4E 72 74 4D 31 4D 58 4D 31 4D  // D..M1MNrtM1MXM1M
    197B: 4E 00 01 4D 31 4C 4E                             // N..M1LN

                If (LEqual (M64L, Zero))
                {

    1982: A0 19 93 4D 36 34 4C 00                          // ...M64L.

                    CreateDWordField (BUF0, \_SB.PCI0._Y0F._LEN, MSLN)  // _LEN: Length

    198A: 8A 42 55 46 30 0B F8 01 4D 53 4C 4E              // .BUF0...MSLN

                    Store (Zero, MSLN) /* \_SB_.PCI0._CRS.MSLN */
                }

    1996: 70 00 4D 53 4C 4E                                // p.MSLN

                Else
                {

    199C: A1 48 04                                         // .H.

                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._LEN, M2LN)  // _LEN: Length

    199F: 8F 42 55 46 30 0B F8 01 4D 32 4C 4E              // .BUF0...M2LN

                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._MIN, M2MN)  // _MIN: Minimum Base Address

    19AB: 8F 42 55 46 30 0B E0 01 4D 32 4D 4E              // .BUF0...M2MN

                    CreateQWordField (BUF0, \_SB.PCI0._Y0F._MAX, M2MX)  // _MAX: Maximum Base Address
                    Store (M64L, M2LN) /* \_SB_.PCI0._CRS.M2LN */
                    Store (M64B, M2MN) /* \_SB_.PCI0._CRS.M2MN */

    19B7: 8F 42 55 46 30 0B E8 01 4D 32 4D 58 70 4D 36 34  // .BUF0...M2MXpM64
    19C7: 4C 4D 32 4C 4E 70 4D 36 34 42 4D 32 4D 4E        // LM2LNpM64BM2MN

                    Subtract (Add (M2MN, M2LN), One, M2MX) /* \_SB_.PCI0._CRS.M2MX */
                }


    19D5: 74 72 4D 32 4D 4E 4D 32 4C 4E 00 01 4D 32 4D 58  // trM2MNM2LN..M2MX

                Return (BUF0) /* \_SB_.PCI0.BUF0 */
            }


    19E5: A4 42 55 46 30                                   // .BUF0

            Name (GUID, 
    19EA: 08 47 55 49 44                                   // .GUID

ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */)

    19EF: 11 13 0A 10 5B 4D DB 33 F7 1F 1C 40 96 57 74 41  // ....[M.3...@.WtA
    19FF: C0 3D D7 66                                      // .=.f

            Name (SUPP, Zero)

    1A03: 08 53 55 50 50 00                                // .SUPP.

            Name (CTRL, Zero)

    1A09: 08 43 54 52 4C 00                                // .CTRL.

            Name (XCNT, Zero)

    1A0F: 08 58 43 4E 54 00                                // .XCNT.

            Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
            {
                Store (Arg3, Local0)

    1A15: 14 41 0F 5F 4F 53 43 0C 70 6B 60                 // .A._OSC.pk`

                CreateDWordField (Local0, Zero, CDW1)

    1A20: 8A 60 00 43 44 57 31                             // .`.CDW1

                CreateDWordField (Local0, 0x04, CDW2)

    1A27: 8A 60 0A 04 43 44 57 32                          // .`..CDW2

                CreateDWordField (Local0, 0x08, CDW3)

    1A2F: 8A 60 0A 08 43 44 57 33                          // .`..CDW3

                If (^XHC.CUID (Arg0))
                {

    1A37: A0 1A 5E 2E 58 48 43 5F 43 55 49 44 68           // ..^.XHC_CUIDh

                    Return (^XHC.POSC (Arg1, Arg2, Arg3))
                }

    1A44: A4 5E 2E 58 48 43 5F 50 4F 53 43 69 6A 6B        // .^.XHC_POSCijk

                ElseIf
    1A52: A1 23                                            // .#

 (
    1A54: A0 21 92                                         // .!.

LGreaterEqual (OSYS, 0x07DC))
                {

    1A57: 95 4F 53 59 53 0B DC 07                          // .OSYS...

                    If (LEqual (XCNT, Zero))
                    {
                        ^XHC.XSEL ()

    1A5F: A0 16 93 58 43 4E 54 00 5E 2E 58 48 43 5F 58 53  // ...XCNT.^.XHC_XS
    1A6F: 45 4C                                            // EL

                        Increment (XCNT)
                    }
                }


    1A71: 75 58 43 4E 54                                   // uXCNT

                If (LAnd (LEqual (Arg0, GUID), NEXP))
                {
                    Store (CDW2, SUPP) /* \_SB_.PCI0.SUPP */
                    Store (CDW3, CTRL) /* \_SB_.PCI0.CTRL */

    1A76: A0 41 08 90 93 68 47 55 49 44 4E 45 58 50 70 43  // .A...hGUIDNEXPpC
    1A86: 44 57 32 53 55 50 50 70 43 44 57 33 43 54 52 4C  // DW2SUPPpCDW3CTRL

                    If (Not (And (CDW1, One)))
                    {

    1A96: A0 25 80 7B 43 44 57 31 01 00 00                 // .%.{CDW1...

                        If (And (CTRL, One))
                        {
                            NHPG ()
                        }


    1AA1: A0 0C 7B 43 54 52 4C 01 00 4E 48 50 47           // ..{CTRL..NHPG

                        If (And (CTRL, 0x04))
                        {
                            NPME ()
                        }
                    }


    1AAE: A0 0D 7B 43 54 52 4C 0A 04 00 4E 50 4D 45        // ..{CTRL...NPME

                    If (
    1ABC: A0 10 92                                         // ...

LNotEqual (Arg1, One))
                    {

    1ABF: 93 69 01                                         // .i.

                        Or (CDW1, 0x08, CDW1) /* \_SB_.PCI0._OSC.CDW1 */
                    }


    1AC2: 7D 43 44 57 31 0A 08 43 44 57 31                 // }CDW1..CDW1

                    If (
    1ACD: A0 16 92                                         // ...

LNotEqual (CDW3, CTRL))
                    {

    1AD0: 93 43 44 57 33 43 54 52 4C                       // .CDW3CTRL

                        Or (CDW1, 0x10, CDW1) /* \_SB_.PCI0._OSC.CDW1 */
                    }

                    Store (CTRL, CDW3) /* \_SB_.PCI0._OSC.CDW3 */
                    Store (CTRL, OSCC) /* \OSCC */

    1AD9: 7D 43 44 57 31 0A 10 43 44 57 31 70 43 54 52 4C  // }CDW1..CDW1pCTRL
    1AE9: 43 44 57 33 70 43 54 52 4C 4F 53 43 43           // CDW3pCTRLOSCC

                    Return (Local0)
                }

    1AF6: A4 60                                            // .`

                Else
                {
                    Or (CDW1, 0x04, CDW1) /* \_SB_.PCI0._OSC.CDW1 */

    1AF8: A1 0E 7D 43 44 57 31 0A 04 43 44 57 31           // ..}CDW1..CDW1

                    Return (Local0)
                }
            }


    1B05: A4 60                                            // .`

            Scope (\_SB.PCI0)
            {

    1B07: 10 4C 1B 5C 2E 5F 53 42 5F 50 43 49 30           // .L.\._SB_PCI0

                Method (AR00, 0, NotSerialized)
                {

    1B14: 14 0D 41 52 30 30 00                             // ..AR00.

                    Return (^^AR00) /* \_SB_.AR00 */
                }


    1B1B: A4 5E 5E 41 52 30 30                             // .^^AR00

                Method (PR00, 0, NotSerialized)
                {

    1B22: 14 0D 50 52 30 30 00                             // ..PR00.

                    Return (^^PR00) /* \_SB_.PR00 */
                }


    1B29: A4 5E 5E 50 52 30 30                             // .^^PR00

                Method (AR02, 0, NotSerialized)
                {

    1B30: 14 0D 41 52 30 32 00                             // ..AR02.

                    Return (^^AR02) /* \_SB_.AR02 */
                }


    1B37: A4 5E 5E 41 52 30 32                             // .^^AR02

                Method (PR02, 0, NotSerialized)
                {

    1B3E: 14 0D 50 52 30 32 00                             // ..PR02.

                    Return (^^PR02) /* \_SB_.PR02 */
                }


    1B45: A4 5E 5E 50 52 30 32                             // .^^PR02

                Method (AR04, 0, NotSerialized)
                {

    1B4C: 14 0D 41 52 30 34 00                             // ..AR04.

                    Return (^^AR04) /* \_SB_.AR04 */
                }


    1B53: A4 5E 5E 41 52 30 34                             // .^^AR04

                Method (PR04, 0, NotSerialized)
                {

    1B5A: 14 0D 50 52 30 34 00                             // ..PR04.

                    Return (^^PR04) /* \_SB_.PR04 */
                }


    1B61: A4 5E 5E 50 52 30 34                             // .^^PR04

                Method (AR05, 0, NotSerialized)
                {

    1B68: 14 0D 41 52 30 35 00                             // ..AR05.

                    Return (^^AR05) /* \_SB_.AR05 */
                }


    1B6F: A4 5E 5E 41 52 30 35                             // .^^AR05

                Method (PR05, 0, NotSerialized)
                {

    1B76: 14 0D 50 52 30 35 00                             // ..PR05.

                    Return (^^PR05) /* \_SB_.PR05 */
                }


    1B7D: A4 5E 5E 50 52 30 35                             // .^^PR05

                Method (AR06, 0, NotSerialized)
                {

    1B84: 14 0D 41 52 30 36 00                             // ..AR06.

                    Return (^^AR06) /* \_SB_.AR06 */
                }


    1B8B: A4 5E 5E 41 52 30 36                             // .^^AR06

                Method (PR06, 0, NotSerialized)
                {

    1B92: 14 0D 50 52 30 36 00                             // ..PR06.

                    Return (^^PR06) /* \_SB_.PR06 */
                }


    1B99: A4 5E 5E 50 52 30 36                             // .^^PR06

                Method (AR07, 0, NotSerialized)
                {

    1BA0: 14 0D 41 52 30 37 00                             // ..AR07.

                    Return (^^AR07) /* \_SB_.AR07 */
                }


    1BA7: A4 5E 5E 41 52 30 37                             // .^^AR07

                Method (PR07, 0, NotSerialized)
                {

    1BAE: 14 0D 50 52 30 37 00                             // ..PR07.

                    Return (^^PR07) /* \_SB_.PR07 */
                }


    1BB5: A4 5E 5E 50 52 30 37                             // .^^PR07

                Method (AR08, 0, NotSerialized)
                {

    1BBC: 14 0D 41 52 30 38 00                             // ..AR08.

                    Return (^^AR08) /* \_SB_.AR08 */
                }


    1BC3: A4 5E 5E 41 52 30 38                             // .^^AR08

                Method (PR08, 0, NotSerialized)
                {

    1BCA: 14 0D 50 52 30 38 00                             // ..PR08.

                    Return (^^PR08) /* \_SB_.PR08 */
                }


    1BD1: A4 5E 5E 50 52 30 38                             // .^^PR08

                Method (AR09, 0, NotSerialized)
                {

    1BD8: 14 0D 41 52 30 39 00                             // ..AR09.

                    Return (^^AR09) /* \_SB_.AR09 */
                }


    1BDF: A4 5E 5E 41 52 30 39                             // .^^AR09

                Method (PR09, 0, NotSerialized)
                {

    1BE6: 14 0D 50 52 30 39 00                             // ..PR09.

                    Return (^^PR09) /* \_SB_.PR09 */
                }


    1BED: A4 5E 5E 50 52 30 39                             // .^^PR09

                Method (AR0A, 0, NotSerialized)
                {

    1BF4: 14 0D 41 52 30 41 00                             // ..AR0A.

                    Return (^^AR0A) /* \_SB_.AR0A */
                }


    1BFB: A4 5E 5E 41 52 30 41                             // .^^AR0A

                Method (PR0A, 0, NotSerialized)
                {

    1C02: 14 0D 50 52 30 41 00                             // ..PR0A.

                    Return (^^PR0A) /* \_SB_.PR0A */
                }


    1C09: A4 5E 5E 50 52 30 41                             // .^^PR0A

                Method (AR0B, 0, NotSerialized)
                {

    1C10: 14 0D 41 52 30 42 00                             // ..AR0B.

                    Return (^^AR0B) /* \_SB_.AR0B */
                }


    1C17: A4 5E 5E 41 52 30 42                             // .^^AR0B

                Method (PR0B, 0, NotSerialized)
                {

    1C1E: 14 0D 50 52 30 42 00                             // ..PR0B.

                    Return (^^PR0B) /* \_SB_.PR0B */
                }


    1C25: A4 5E 5E 50 52 30 42                             // .^^PR0B

                Device (PEG0)
                {

    1C2C: 5B 82 1C 50 45 47 30                             // [..PEG0

                    Name (_ADR, 0x00010000)  // _ADR: Address

    1C33: 08 5F 41 44 52 0C 00 00 01 00                    // ._ADR.....

                    Device (PEGP)
                    {

    1C3D: 5B 82 0B 50 45 47 50                             // [..PEGP

                        Name (_ADR, Zero)  // _ADR: Address
                    }
                }


    1C44: 08 5F 41 44 52 00                                // ._ADR.

                Device (PEG1)
                {

    1C4A: 5B 82 1C 50 45 47 31                             // [..PEG1

                    Name (_ADR, 0x00010001)  // _ADR: Address

    1C51: 08 5F 41 44 52 0C 01 00 01 00                    // ._ADR.....

                    Device (PEGP)
                    {

    1C5B: 5B 82 0B 50 45 47 50                             // [..PEGP

                        Name (_ADR, Zero)  // _ADR: Address
                    }
                }


    1C62: 08 5F 41 44 52 00                                // ._ADR.

                Device (PEG2)
                {

    1C68: 5B 82 1C 50 45 47 32                             // [..PEG2

                    Name (_ADR, 0x00010002)  // _ADR: Address

    1C6F: 08 5F 41 44 52 0C 02 00 01 00                    // ._ADR.....

                    Device (PEGP)
                    {

    1C79: 5B 82 0B 50 45 47 50                             // [..PEGP

                        Name (_ADR, Zero)  // _ADR: Address
                    }
                }


    1C80: 08 5F 41 44 52 00                                // ._ADR.

                Device (B0D3)
                {

    1C86: 5B 82 0F 42 30 44 33                             // [..B0D3

                    Name (_ADR, 0x00030000)  // _ADR: Address
                }


    1C8D: 08 5F 41 44 52 0C 00 00 03 00                    // ._ADR.....

                Device (GFX0)
                {

    1C97: 5B 82 1A 47 46 58 30                             // [..GFX0

                    Name (_ADR, 0x00020000)  // _ADR: Address

    1C9E: 08 5F 41 44 52 0C 00 00 02 00                    // ._ADR.....

                    Method (_INI, 0, NotSerialized)  // _INI: Initialize
                    {
                        CRBL ()
                    }
                }


    1CA8: 14 0A 5F 49 4E 49 00 43 52 42 4C                 // .._INI.CRBL

                Device (B0D4)
                {

    1CB3: 5B 82 0F 42 30 44 34                             // [..B0D4

                    Name (_ADR, 0x00040000)  // _ADR: Address
                }
            }
        }
    }


    1CBA: 08 5F 41 44 52 0C 00 00 04 00                    // ._ADR.....

    If (LEqual (ECR1, One))
    {

    1CC4: A0 48 06 93 45 43 52 31 01                       // .H..ECR1.

        Scope (_SB.PCI0)
        {

    1CCD: 10 4F 05 2E 5F 53 42 5F 50 43 49 30              // .O.._SB_PCI0

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    1CD9: 14 43 05 5F 44 53 4D 0C                          // .C._DSM.

                If (LEqual (Arg0, 
    1CE1: A0 46 04 93 68                                   // .F..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {

    1CE6: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    1CF6: 19 C3 43 4D                                      // ..CM

                    If (
    1CFA: A0 2D 92                                         // .-.

LGreaterEqual (Arg1, 0x03))
                    {

    1CFD: 95 69 0A 03                                      // .i..

                        If (LEqual (Arg2, Zero))
                        {

    1D01: A0 0B 93 6A 00                                   // ...j.

                            Return (
    1D06: A4                                               // .

Buffer (0x02)
                            {
                                 0x01, 0x03                                       // ..
                            })
                        }


    1D07: 11 05 0A 02 01 03                                // ......

                        If (LEqual (Arg2, 0x08))
                        {

    1D0D: A0 07 93 6A 0A 08                                // ...j..

                            Return (One)
                        }


    1D13: A4 01                                            // ..

                        If (LEqual (Arg2, 0x09))
                        {

    1D15: A0 12 93 6A 0A 09                                // ...j..

                            Return (
    1D1B: A4                                               // .

Package (0x05)
                            {
                                0xC350, 
                                Ones, 
                                Ones, 
                                0xC350, 
                                Ones
                            })
                        }
                    }
                }


    1D1C: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                Return (
    1D28: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }
        }
    }


    1D29: 11 03 01 00                                      // ....

    Name (PNVB, 0x96FBCD98)

    1D2D: 08 50 4E 56 42 0C 98 CD FB 96                    // .PNVB.....

    Name (PNVL, 0x00E4)

    1D37: 08 50 4E 56 4C 0B E4 00                          // .PNVL...

    OperationRegion (PNVA, SystemMemory, PNVB, PNVL)

    1D3F: 5B 80 50 4E 56 41 00 50 4E 56 42 50 4E 56 4C     // [.PNVA.PNVBPNVL

    Field (PNVA, AnyAcc, Lock, Preserve)
    {
        RCRV,   32, 
        PCHS,   16, 
        PCHG,   16, 
        RPA0,   32, 
        RPA1,   32, 
        RPA2,   32, 
        RPA3,   32, 
        RPA4,   32, 
        RPA5,   32, 
        RPA6,   32, 
        RPA7,   32, 
        SRMB,   32, 
        ADB0,   32, 
        ADB1,   32, 
        ADI0,   32, 
        GPMN,   32, 
        GPMX,   32, 
        PML1,   16, 
        PML2,   16, 
        PML3,   16, 
        PML4,   16, 
        PML5,   16, 
        PML6,   16, 
        PML7,   16, 
        PML8,   16, 
        PNL1,   16, 
        PNL2,   16, 
        PNL3,   16, 
        PNL4,   16, 
        PNL5,   16, 
        PNL6,   16, 
        PNL7,   16, 
        PNL8,   16, 
        U0C0,   32, 
        U1C0,   32, 
        ADFM,   32, 
        ADBT,   8, 
        XHPC,   8, 
        XRPC,   8, 
        XSPC,   8, 
        XSPA,   8, 
        SMD0,   8, 
        SMD1,   8, 
        SMD2,   8, 
        SMD3,   8, 
        SMD4,   8, 
        SMD5,   8, 
        SMD6,   8, 
        SMD7,   8, 
        SIR0,   8, 
        SIR1,   8, 
        SIR2,   8, 
        SIR3,   8, 
        SIR4,   8, 
        SIR5,   8, 
        SIR6,   8, 
        SIR7,   8, 
        SB00,   32, 
        SB01,   32, 
        SB02,   32, 
        SB03,   32, 
        SB04,   32, 
        SB05,   32, 
        SB06,   32, 
        SB07,   32, 
        SB10,   32, 
        SB11,   32, 
        SB12,   32, 
        SB13,   32, 
        SB14,   32, 
        SB15,   32, 
        SB16,   32, 
        SB17,   32, 
        SMGP,   8, 
        GBEP,   8, 
        PMSI,   8, 
        PMCP,   8, 
        PCLP,   8, 
        PL1P,   16, 
        PL1A,   32, 
        PL1B,   8, 
        PEPL,   16, 
        PRPL,   16, 
        PCIT,   8, 
        PLTP,   16, 
        PLTD,   32, 
        PED2,   16, 
        PRDC,   16, 
        PED1,   16, 
        PCHP,   16, 
        XWMB,   32
    }


    1D4E: 5B 81 4E 1C 50 4E 56 41 10 52 43 52 56 20 50 43  // [.N.PNVA.RCRV PC
    1D5E: 48 53 10 50 43 48 47 10 52 50 41 30 20 52 50 41  // HS.PCHG.RPA0 RPA
    1D6E: 31 20 52 50 41 32 20 52 50 41 33 20 52 50 41 34  // 1 RPA2 RPA3 RPA4
    1D7E: 20 52 50 41 35 20 52 50 41 36 20 52 50 41 37 20  //  RPA5 RPA6 RPA7 
    1D8E: 53 52 4D 42 20 41 44 42 30 20 41 44 42 31 20 41  // SRMB ADB0 ADB1 A
    1D9E: 44 49 30 20 47 50 4D 4E 20 47 50 4D 58 20 50 4D  // DI0 GPMN GPMX PM
    1DAE: 4C 31 10 50 4D 4C 32 10 50 4D 4C 33 10 50 4D 4C  // L1.PML2.PML3.PML
    1DBE: 34 10 50 4D 4C 35 10 50 4D 4C 36 10 50 4D 4C 37  // 4.PML5.PML6.PML7
    1DCE: 10 50 4D 4C 38 10 50 4E 4C 31 10 50 4E 4C 32 10  // .PML8.PNL1.PNL2.
    1DDE: 50 4E 4C 33 10 50 4E 4C 34 10 50 4E 4C 35 10 50  // PNL3.PNL4.PNL5.P
    1DEE: 4E 4C 36 10 50 4E 4C 37 10 50 4E 4C 38 10 55 30  // NL6.PNL7.PNL8.U0
    1DFE: 43 30 20 55 31 43 30 20 41 44 46 4D 20 41 44 42  // C0 U1C0 ADFM ADB
    1E0E: 54 08 58 48 50 43 08 58 52 50 43 08 58 53 50 43  // T.XHPC.XRPC.XSPC
    1E1E: 08 58 53 50 41 08 53 4D 44 30 08 53 4D 44 31 08  // .XSPA.SMD0.SMD1.
    1E2E: 53 4D 44 32 08 53 4D 44 33 08 53 4D 44 34 08 53  // SMD2.SMD3.SMD4.S
    1E3E: 4D 44 35 08 53 4D 44 36 08 53 4D 44 37 08 53 49  // MD5.SMD6.SMD7.SI
    1E4E: 52 30 08 53 49 52 31 08 53 49 52 32 08 53 49 52  // R0.SIR1.SIR2.SIR
    1E5E: 33 08 53 49 52 34 08 53 49 52 35 08 53 49 52 36  // 3.SIR4.SIR5.SIR6
    1E6E: 08 53 49 52 37 08 53 42 30 30 20 53 42 30 31 20  // .SIR7.SB00 SB01 
    1E7E: 53 42 30 32 20 53 42 30 33 20 53 42 30 34 20 53  // SB02 SB03 SB04 S
    1E8E: 42 30 35 20 53 42 30 36 20 53 42 30 37 20 53 42  // B05 SB06 SB07 SB
    1E9E: 31 30 20 53 42 31 31 20 53 42 31 32 20 53 42 31  // 10 SB11 SB12 SB1
    1EAE: 33 20 53 42 31 34 20 53 42 31 35 20 53 42 31 36  // 3 SB14 SB15 SB16
    1EBE: 20 53 42 31 37 20 53 4D 47 50 08 47 42 45 50 08  //  SB17 SMGP.GBEP.
    1ECE: 50 4D 53 49 08 50 4D 43 50 08 50 43 4C 50 08 50  // PMSI.PMCP.PCLP.P
    1EDE: 4C 31 50 10 50 4C 31 41 20 50 4C 31 42 08 50 45  // L1P.PL1A PL1B.PE
    1EEE: 50 4C 10 50 52 50 4C 10 50 43 49 54 08 50 4C 54  // PL.PRPL.PCIT.PLT
    1EFE: 50 10 50 4C 54 44 20 50 45 44 32 10 50 52 44 43  // P.PLTD PED2.PRDC
    1F0E: 10 50 45 44 31 10 50 43 48 50 10 58 57 4D 42 20  // .PED1.PCHP.XWMB 

    Name (LPTH, One)

    1F1E: 08 4C 50 54 48 01                                // .LPTH.

    Name (LPTL, 0x02)

    1F24: 08 4C 50 54 4C 0A 02                             // .LPTL..

    Name (WPTL, 0x03)

    1F2B: 08 57 50 54 4C 0A 03                             // .WPTL..

    Method (PCHV, 0, NotSerialized)
    {

    1F32: 14 48 04 50 43 48 56 00                          // .H.PCHV.

        If (LAnd (LEqual (PCHG, One), 
    1F3A: A0 13 90 93 50 43 48 47 01                       // ....PCHG.

LEqual (PCHS, One)))
        {

    1F43: 93 50 43 48 53 01                                // .PCHS.

            Return (LPTH) /* \LPTH */
        }


    1F49: A4 4C 50 54 48                                   // .LPTH

        If (LAnd (LEqual (PCHG, One), 
    1F4E: A0 14 90 93 50 43 48 47 01                       // ....PCHG.

LEqual (PCHS, 0x02)))
        {

    1F57: 93 50 43 48 53 0A 02                             // .PCHS..

            Return (LPTL) /* \LPTL */
        }


    1F5E: A4 4C 50 54 4C                                   // .LPTL

        If (LAnd (LEqual (PCHG, 0x02), 
    1F63: A0 15 90 93 50 43 48 47 0A 02                    // ....PCHG..

LEqual (PCHS, 0x02)))
        {

    1F6D: 93 50 43 48 53 0A 02                             // .PCHS..

            Return (WPTL) /* \WPTL */
        }


    1F74: A4 57 50 54 4C                                   // .WPTL

        Return (Zero)
    }


    1F79: A4 00                                            // ..

    Method (LXDH, 0, NotSerialized)
    {
        \_SB.PCI0.XHC.GPEH ()
        \_SB.PCI0.EHC1.GPEH ()
        \_SB.PCI0.EHC2.GPEH ()
        \_SB.PCI0.HDEF.GPEH ()
    }


    1F7B: 14 43 05 4C 58 44 48 00 5C 2F 04 5F 53 42 5F 50  // .C.LXDH.\/._SB_P
    1F8B: 43 49 30 58 48 43 5F 47 50 45 48 5C 2F 04 5F 53  // CI0XHC_GPEH\/._S
    1F9B: 42 5F 50 43 49 30 45 48 43 31 47 50 45 48 5C 2F  // B_PCI0EHC1GPEH\/
    1FAB: 04 5F 53 42 5F 50 43 49 30 45 48 43 32 47 50 45  // ._SB_PCI0EHC2GPE
    1FBB: 48 5C 2F 04 5F 53 42 5F 50 43 49 30 48 44 45 46  // H\/._SB_PCI0HDEF
    1FCB: 47 50 45 48                                      // GPEH

    If (LEqual (PCHS, 0x02))
    {

    1FCF: A0 19 93 50 43 48 53 0A 02                       // ...PCHS..

        Scope (_GPE)
        {

    1FD8: 10 10 5F 47 50 45                                // .._GPE

            Method (_L6D, 0, Serialized)  // _Lxx: Level-Triggered GPE
            {
                LXDH ()
            }
        }
    }

    1FDE: 14 0A 5F 4C 36 44 08 4C 58 44 48                 // .._L6D.LXDH

    Else
    {

    1FE9: A1 12                                            // ..

        Scope (_GPE)
        {

    1FEB: 10 10 5F 47 50 45                                // .._GPE

            Method (_L0D, 0, Serialized)  // _Lxx: Level-Triggered GPE
            {
                LXDH ()
            }
        }
    }


    1FF1: 14 0A 5F 4C 30 44 08 4C 58 44 48                 // .._L0D.LXDH

    Scope (_SB.PCI0)
    {

    1FFC: 10 4C 0D 2E 5F 53 42 5F 50 43 49 30              // .L.._SB_PCI0

        Device (LPCB)
        {

    2008: 5B 82 4F 0C 4C 50 43 42                          // [.O.LPCB

            Name (_ADR, 0x001F0000)  // _ADR: Address

    2010: 08 5F 41 44 52 0C 00 00 1F 00                    // ._ADR.....

            OperationRegion (LPC, PCI_Config, Zero, 0x0100)

    201A: 5B 80 4C 50 43 5F 02 00 0B 00 01                 // [.LPC_.....

            Field (LPC, AnyAcc, NoLock, Preserve)
            {
                Offset (0x02), 
                CDID,   16, 
                Offset (0x08), 
                CRID,   8, 
                Offset (0x40), 
                    ,   7, 
                ACBA,   9, 
                Offset (0x48), 
                    ,   7, 
                GPBA,   9, 
                Offset (0x60), 
                PARC,   8, 
                PBRC,   8, 
                PCRC,   8, 
                PDRC,   8, 
                Offset (0x68), 
                PERC,   8, 
                PFRC,   8, 
                PGRC,   8, 
                PHRC,   8, 
                Offset (0x80), 
                IOD0,   8, 
                IOD1,   8, 
                Offset (0xA0), 
                    ,   9, 
                PRBL,   1, 
                Offset (0xAC), 
                Offset (0xAD), 
                Offset (0xAE), 
                XUSB,   1, 
                Offset (0xB8), 
                    ,   6, 
                GR03,   2, 
                Offset (0xBA), 
                GR08,   2, 
                GR09,   2, 
                GR0A,   2, 
                GR0B,   2, 
                Offset (0xBC), 
                    ,   2, 
                GR19,   2, 
                Offset (0xC0), 
                Offset (0xF0), 
                RAEN,   1, 
                    ,   13, 
                RCBA,   18
            }
        }
    }


    2025: 5B 81 42 0B 4C 50 43 5F 00 00 10 43 44 49 44 10  // [.B.LPC_...CDID.
    2035: 00 20 43 52 49 44 08 00 48 1B 00 07 41 43 42 41  // . CRID..H...ACBA
    2045: 09 00 30 00 07 47 50 42 41 09 00 40 0B 50 41 52  // ..0..GPBA..@.PAR
    2055: 43 08 50 42 52 43 08 50 43 52 43 08 50 44 52 43  // C.PBRC.PCRC.PDRC
    2065: 08 00 20 50 45 52 43 08 50 46 52 43 08 50 47 52  // .. PERC.PFRC.PGR
    2075: 43 08 50 48 52 43 08 00 40 0A 49 4F 44 30 08 49  // C.PHRC..@.IOD0.I
    2085: 4F 44 31 08 00 40 0F 00 09 50 52 42 4C 01 00 46  // OD1..@...PRBL..F
    2095: 05 00 08 00 08 58 55 53 42 01 00 4F 04 00 06 47  // .....XUSB..O...G
    20A5: 52 30 33 02 00 08 47 52 30 38 02 47 52 30 39 02  // R03...GR08.GR09.
    20B5: 47 52 30 41 02 47 52 30 42 02 00 08 00 02 47 52  // GR0A.GR0B.....GR
    20C5: 31 39 02 00 1C 00 40 18 52 41 45 4E 01 00 0D 52  // 19....@.RAEN...R
    20D5: 43 42 41 12                                      // CBA.

    Scope (_SB)
    {

    20D9: 10 45 71 5F 53 42 5F                             // .Eq_SB_

        Device (LNKA)
        {

    20E0: 5B 82 4F 0D 4C 4E 4B 41                          // [.O.LNKA

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    20E8: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, One)  // _UID: Unique ID

    20F2: 08 5F 55 49 44 01                                // ._UID.

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    20F8: 14 29 5F 44 49 53 08                             // .)_DIS.

                Or (^^PCI0.LPCB.PARC, 0x80, ^^PCI0.LPCB.PARC) /* \_SB_.PCI0.LPCB.PARC */
            }


    20FF: 7D 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 41 52  // }^^/.PCI0LPCBPAR
    210F: 43 0A 80 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // C..^^/.PCI0LPCBP
    211F: 41 52 43                                         // ARC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    2122: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSA) /* \_SB_.PRSA */
            }


    2129: A4 50 52 53 41                                   // .PRSA

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    212E: 14 45 04 5F 43 52 53 08                          // .E._CRS.

                Name (RTLA, 
    2136: 08 52 54 4C 41                                   // .RTLA

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    213B: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLA, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKA._CRS.IRQ0 */
                ShiftLeft (One, And (^^PCI0.LPCB.PARC, 0x0F), IRQ0) /* \_SB_.LNKA._CRS.IRQ0 */

    2145: 8B 52 54 4C 41 01 49 52 51 30 70 00 49 52 51 30  // .RTLA.IRQ0p.IRQ0
    2155: 79 01 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // y.{^^/.PCI0LPCBP
    2165: 41 52 43 0A 0F 00 49 52 51 30                    // ARC...IRQ0

                Return (RTLA) /* \_SB_.LNKA._CRS.RTLA */
            }


    216F: A4 52 54 4C 41                                   // .RTLA

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    2174: 14 27 5F 53 52 53 09                             // .'_SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    217B: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, ^^PCI0.LPCB.PARC) /* \_SB_.PCI0.LPCB.PARC */
            }


    218A: 70 60 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 41  // p`^^/.PCI0LPCBPA
    219A: 52 43                                            // RC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    219C: 14 24 5F 53 54 41 08                             // .$_STA.

                If (And (^^PCI0.LPCB.PARC, 0x80))
                {

    21A3: A0 18 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // ..{^^/.PCI0LPCBP
    21B3: 41 52 43 0A 80 00                                // ARC...

                    Return (0x09)
                }

    21B9: A4 0A 09                                         // ...

                Else
                {

    21BC: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    21BE: A4 0A 0B                                         // ...

        Device (LNKB)
        {

    21C1: 5B 82 40 0E 4C 4E 4B 42                          // [.@.LNKB

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    21C9: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x02)  // _UID: Unique ID

    21D3: 08 5F 55 49 44 0A 02                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    21DA: 14 29 5F 44 49 53 08                             // .)_DIS.

                Or (^^PCI0.LPCB.PBRC, 0x80, ^^PCI0.LPCB.PBRC) /* \_SB_.PCI0.LPCB.PBRC */
            }


    21E1: 7D 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 42 52  // }^^/.PCI0LPCBPBR
    21F1: 43 0A 80 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // C..^^/.PCI0LPCBP
    2201: 42 52 43                                         // BRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    2204: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSB) /* \_SB_.PRSB */
            }


    220B: A4 50 52 53 42                                   // .PRSB

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    2210: 14 45 04 5F 43 52 53 08                          // .E._CRS.

                Name (RTLB, 
    2218: 08 52 54 4C 42                                   // .RTLB

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    221D: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLB, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKB._CRS.IRQ0 */
                ShiftLeft (One, And (^^PCI0.LPCB.PBRC, 0x0F), IRQ0) /* \_SB_.LNKB._CRS.IRQ0 */

    2227: 8B 52 54 4C 42 01 49 52 51 30 70 00 49 52 51 30  // .RTLB.IRQ0p.IRQ0
    2237: 79 01 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // y.{^^/.PCI0LPCBP
    2247: 42 52 43 0A 0F 00 49 52 51 30                    // BRC...IRQ0

                Return (RTLB) /* \_SB_.LNKB._CRS.RTLB */
            }


    2251: A4 52 54 4C 42                                   // .RTLB

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    2256: 14 27 5F 53 52 53 09                             // .'_SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    225D: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, ^^PCI0.LPCB.PBRC) /* \_SB_.PCI0.LPCB.PBRC */
            }


    226C: 70 60 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 42  // p`^^/.PCI0LPCBPB
    227C: 52 43                                            // RC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    227E: 14 24 5F 53 54 41 08                             // .$_STA.

                If (And (^^PCI0.LPCB.PBRC, 0x80))
                {

    2285: A0 18 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // ..{^^/.PCI0LPCBP
    2295: 42 52 43 0A 80 00                                // BRC...

                    Return (0x09)
                }

    229B: A4 0A 09                                         // ...

                Else
                {

    229E: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    22A0: A4 0A 0B                                         // ...

        Device (LNKC)
        {

    22A3: 5B 82 40 0E 4C 4E 4B 43                          // [.@.LNKC

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    22AB: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x03)  // _UID: Unique ID

    22B5: 08 5F 55 49 44 0A 03                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    22BC: 14 29 5F 44 49 53 08                             // .)_DIS.

                Or (^^PCI0.LPCB.PCRC, 0x80, ^^PCI0.LPCB.PCRC) /* \_SB_.PCI0.LPCB.PCRC */
            }


    22C3: 7D 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 43 52  // }^^/.PCI0LPCBPCR
    22D3: 43 0A 80 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // C..^^/.PCI0LPCBP
    22E3: 43 52 43                                         // CRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    22E6: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSC) /* \_SB_.PRSC */
            }


    22ED: A4 50 52 53 43                                   // .PRSC

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    22F2: 14 45 04 5F 43 52 53 08                          // .E._CRS.

                Name (RTLC, 
    22FA: 08 52 54 4C 43                                   // .RTLC

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    22FF: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLC, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKC._CRS.IRQ0 */
                ShiftLeft (One, And (^^PCI0.LPCB.PCRC, 0x0F), IRQ0) /* \_SB_.LNKC._CRS.IRQ0 */

    2309: 8B 52 54 4C 43 01 49 52 51 30 70 00 49 52 51 30  // .RTLC.IRQ0p.IRQ0
    2319: 79 01 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // y.{^^/.PCI0LPCBP
    2329: 43 52 43 0A 0F 00 49 52 51 30                    // CRC...IRQ0

                Return (RTLC) /* \_SB_.LNKC._CRS.RTLC */
            }


    2333: A4 52 54 4C 43                                   // .RTLC

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    2338: 14 27 5F 53 52 53 09                             // .'_SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    233F: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, ^^PCI0.LPCB.PCRC) /* \_SB_.PCI0.LPCB.PCRC */
            }


    234E: 70 60 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 43  // p`^^/.PCI0LPCBPC
    235E: 52 43                                            // RC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    2360: 14 24 5F 53 54 41 08                             // .$_STA.

                If (And (^^PCI0.LPCB.PCRC, 0x80))
                {

    2367: A0 18 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // ..{^^/.PCI0LPCBP
    2377: 43 52 43 0A 80 00                                // CRC...

                    Return (0x09)
                }

    237D: A4 0A 09                                         // ...

                Else
                {

    2380: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    2382: A4 0A 0B                                         // ...

        Device (LNKD)
        {

    2385: 5B 82 40 0E 4C 4E 4B 44                          // [.@.LNKD

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    238D: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x04)  // _UID: Unique ID

    2397: 08 5F 55 49 44 0A 04                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    239E: 14 29 5F 44 49 53 08                             // .)_DIS.

                Or (^^PCI0.LPCB.PDRC, 0x80, ^^PCI0.LPCB.PDRC) /* \_SB_.PCI0.LPCB.PDRC */
            }


    23A5: 7D 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 44 52  // }^^/.PCI0LPCBPDR
    23B5: 43 0A 80 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // C..^^/.PCI0LPCBP
    23C5: 44 52 43                                         // DRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    23C8: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSD) /* \_SB_.PRSD */
            }


    23CF: A4 50 52 53 44                                   // .PRSD

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    23D4: 14 45 04 5F 43 52 53 08                          // .E._CRS.

                Name (RTLD, 
    23DC: 08 52 54 4C 44                                   // .RTLD

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    23E1: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLD, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKD._CRS.IRQ0 */
                ShiftLeft (One, And (^^PCI0.LPCB.PDRC, 0x0F), IRQ0) /* \_SB_.LNKD._CRS.IRQ0 */

    23EB: 8B 52 54 4C 44 01 49 52 51 30 70 00 49 52 51 30  // .RTLD.IRQ0p.IRQ0
    23FB: 79 01 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // y.{^^/.PCI0LPCBP
    240B: 44 52 43 0A 0F 00 49 52 51 30                    // DRC...IRQ0

                Return (RTLD) /* \_SB_.LNKD._CRS.RTLD */
            }


    2415: A4 52 54 4C 44                                   // .RTLD

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    241A: 14 27 5F 53 52 53 09                             // .'_SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    2421: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, ^^PCI0.LPCB.PDRC) /* \_SB_.PCI0.LPCB.PDRC */
            }


    2430: 70 60 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 44  // p`^^/.PCI0LPCBPD
    2440: 52 43                                            // RC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    2442: 14 24 5F 53 54 41 08                             // .$_STA.

                If (And (^^PCI0.LPCB.PDRC, 0x80))
                {

    2449: A0 18 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // ..{^^/.PCI0LPCBP
    2459: 44 52 43 0A 80 00                                // DRC...

                    Return (0x09)
                }

    245F: A4 0A 09                                         // ...

                Else
                {

    2462: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    2464: A4 0A 0B                                         // ...

        Device (LNKE)
        {

    2467: 5B 82 40 0E 4C 4E 4B 45                          // [.@.LNKE

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    246F: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x05)  // _UID: Unique ID

    2479: 08 5F 55 49 44 0A 05                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    2480: 14 29 5F 44 49 53 08                             // .)_DIS.

                Or (^^PCI0.LPCB.PERC, 0x80, ^^PCI0.LPCB.PERC) /* \_SB_.PCI0.LPCB.PERC */
            }


    2487: 7D 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 45 52  // }^^/.PCI0LPCBPER
    2497: 43 0A 80 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // C..^^/.PCI0LPCBP
    24A7: 45 52 43                                         // ERC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    24AA: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSE) /* \_SB_.PRSE */
            }


    24B1: A4 50 52 53 45                                   // .PRSE

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    24B6: 14 45 04 5F 43 52 53 08                          // .E._CRS.

                Name (RTLE, 
    24BE: 08 52 54 4C 45                                   // .RTLE

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    24C3: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLE, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKE._CRS.IRQ0 */
                ShiftLeft (One, And (^^PCI0.LPCB.PERC, 0x0F), IRQ0) /* \_SB_.LNKE._CRS.IRQ0 */

    24CD: 8B 52 54 4C 45 01 49 52 51 30 70 00 49 52 51 30  // .RTLE.IRQ0p.IRQ0
    24DD: 79 01 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // y.{^^/.PCI0LPCBP
    24ED: 45 52 43 0A 0F 00 49 52 51 30                    // ERC...IRQ0

                Return (RTLE) /* \_SB_.LNKE._CRS.RTLE */
            }


    24F7: A4 52 54 4C 45                                   // .RTLE

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    24FC: 14 27 5F 53 52 53 09                             // .'_SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    2503: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, ^^PCI0.LPCB.PERC) /* \_SB_.PCI0.LPCB.PERC */
            }


    2512: 70 60 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 45  // p`^^/.PCI0LPCBPE
    2522: 52 43                                            // RC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    2524: 14 24 5F 53 54 41 08                             // .$_STA.

                If (And (^^PCI0.LPCB.PERC, 0x80))
                {

    252B: A0 18 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // ..{^^/.PCI0LPCBP
    253B: 45 52 43 0A 80 00                                // ERC...

                    Return (0x09)
                }

    2541: A4 0A 09                                         // ...

                Else
                {

    2544: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    2546: A4 0A 0B                                         // ...

        Device (LNKF)
        {

    2549: 5B 82 40 0E 4C 4E 4B 46                          // [.@.LNKF

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    2551: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x06)  // _UID: Unique ID

    255B: 08 5F 55 49 44 0A 06                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    2562: 14 29 5F 44 49 53 08                             // .)_DIS.

                Or (^^PCI0.LPCB.PFRC, 0x80, ^^PCI0.LPCB.PFRC) /* \_SB_.PCI0.LPCB.PFRC */
            }


    2569: 7D 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 46 52  // }^^/.PCI0LPCBPFR
    2579: 43 0A 80 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // C..^^/.PCI0LPCBP
    2589: 46 52 43                                         // FRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    258C: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSF) /* \_SB_.PRSF */
            }


    2593: A4 50 52 53 46                                   // .PRSF

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    2598: 14 45 04 5F 43 52 53 08                          // .E._CRS.

                Name (RTLF, 
    25A0: 08 52 54 4C 46                                   // .RTLF

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    25A5: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLF, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKF._CRS.IRQ0 */
                ShiftLeft (One, And (^^PCI0.LPCB.PFRC, 0x0F), IRQ0) /* \_SB_.LNKF._CRS.IRQ0 */

    25AF: 8B 52 54 4C 46 01 49 52 51 30 70 00 49 52 51 30  // .RTLF.IRQ0p.IRQ0
    25BF: 79 01 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // y.{^^/.PCI0LPCBP
    25CF: 46 52 43 0A 0F 00 49 52 51 30                    // FRC...IRQ0

                Return (RTLF) /* \_SB_.LNKF._CRS.RTLF */
            }


    25D9: A4 52 54 4C 46                                   // .RTLF

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    25DE: 14 27 5F 53 52 53 09                             // .'_SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    25E5: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, ^^PCI0.LPCB.PFRC) /* \_SB_.PCI0.LPCB.PFRC */
            }


    25F4: 70 60 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 46  // p`^^/.PCI0LPCBPF
    2604: 52 43                                            // RC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    2606: 14 24 5F 53 54 41 08                             // .$_STA.

                If (And (^^PCI0.LPCB.PFRC, 0x80))
                {

    260D: A0 18 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // ..{^^/.PCI0LPCBP
    261D: 46 52 43 0A 80 00                                // FRC...

                    Return (0x09)
                }

    2623: A4 0A 09                                         // ...

                Else
                {

    2626: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    2628: A4 0A 0B                                         // ...

        Device (LNKG)
        {

    262B: 5B 82 40 0E 4C 4E 4B 47                          // [.@.LNKG

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    2633: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x07)  // _UID: Unique ID

    263D: 08 5F 55 49 44 0A 07                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    2644: 14 29 5F 44 49 53 08                             // .)_DIS.

                Or (^^PCI0.LPCB.PGRC, 0x80, ^^PCI0.LPCB.PGRC) /* \_SB_.PCI0.LPCB.PGRC */
            }


    264B: 7D 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 47 52  // }^^/.PCI0LPCBPGR
    265B: 43 0A 80 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // C..^^/.PCI0LPCBP
    266B: 47 52 43                                         // GRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    266E: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSG) /* \_SB_.PRSG */
            }


    2675: A4 50 52 53 47                                   // .PRSG

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    267A: 14 45 04 5F 43 52 53 08                          // .E._CRS.

                Name (RTLG, 
    2682: 08 52 54 4C 47                                   // .RTLG

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    2687: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLG, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKG._CRS.IRQ0 */
                ShiftLeft (One, And (^^PCI0.LPCB.PGRC, 0x0F), IRQ0) /* \_SB_.LNKG._CRS.IRQ0 */

    2691: 8B 52 54 4C 47 01 49 52 51 30 70 00 49 52 51 30  // .RTLG.IRQ0p.IRQ0
    26A1: 79 01 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // y.{^^/.PCI0LPCBP
    26B1: 47 52 43 0A 0F 00 49 52 51 30                    // GRC...IRQ0

                Return (RTLG) /* \_SB_.LNKG._CRS.RTLG */
            }


    26BB: A4 52 54 4C 47                                   // .RTLG

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    26C0: 14 27 5F 53 52 53 09                             // .'_SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    26C7: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, ^^PCI0.LPCB.PGRC) /* \_SB_.PCI0.LPCB.PGRC */
            }


    26D6: 70 60 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 47  // p`^^/.PCI0LPCBPG
    26E6: 52 43                                            // RC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    26E8: 14 24 5F 53 54 41 08                             // .$_STA.

                If (And (^^PCI0.LPCB.PGRC, 0x80))
                {

    26EF: A0 18 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // ..{^^/.PCI0LPCBP
    26FF: 47 52 43 0A 80 00                                // GRC...

                    Return (0x09)
                }

    2705: A4 0A 09                                         // ...

                Else
                {

    2708: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }


    270A: A4 0A 0B                                         // ...

        Device (LNKH)
        {

    270D: 5B 82 40 0E 4C 4E 4B 48                          // [.@.LNKH

            Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID

    2715: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

            Name (_UID, 0x08)  // _UID: Unique ID

    271F: 08 5F 55 49 44 0A 08                             // ._UID..

            Method (_DIS, 0, Serialized)  // _DIS: Disable Device
            {

    2726: 14 29 5F 44 49 53 08                             // .)_DIS.

                Or (^^PCI0.LPCB.PHRC, 0x80, ^^PCI0.LPCB.PHRC) /* \_SB_.PCI0.LPCB.PHRC */
            }


    272D: 7D 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 48 52  // }^^/.PCI0LPCBPHR
    273D: 43 0A 80 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // C..^^/.PCI0LPCBP
    274D: 48 52 43                                         // HRC

            Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
            {

    2750: 14 0B 5F 50 52 53 08                             // .._PRS.

                Return (PRSH) /* \_SB_.PRSH */
            }


    2757: A4 50 52 53 48                                   // .PRSH

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    275C: 14 45 04 5F 43 52 53 08                          // .E._CRS.

                Name (RTLH, 
    2764: 08 52 54 4C 48                                   // .RTLH

ResourceTemplate ()
                {
                    IRQ (Level, ActiveLow, Shared, )
                        {}
                })

    2769: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                CreateWordField (RTLH, One, IRQ0)
                Store (Zero, IRQ0) /* \_SB_.LNKH._CRS.IRQ0 */
                ShiftLeft (One, And (^^PCI0.LPCB.PHRC, 0x0F), IRQ0) /* \_SB_.LNKH._CRS.IRQ0 */

    2773: 8B 52 54 4C 48 01 49 52 51 30 70 00 49 52 51 30  // .RTLH.IRQ0p.IRQ0
    2783: 79 01 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // y.{^^/.PCI0LPCBP
    2793: 48 52 43 0A 0F 00 49 52 51 30                    // HRC...IRQ0

                Return (RTLH) /* \_SB_.LNKH._CRS.RTLH */
            }


    279D: A4 52 54 4C 48                                   // .RTLH

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

    27A2: 14 27 5F 53 52 53 09                             // .'_SRS.

                CreateWordField (Arg0, One, IRQ0)
                FindSetRightBit (IRQ0, Local0)
                Decrement (Local0)

    27A9: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                Store (Local0, ^^PCI0.LPCB.PHRC) /* \_SB_.PCI0.LPCB.PHRC */
            }


    27B8: 70 60 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50 48  // p`^^/.PCI0LPCBPH
    27C8: 52 43                                            // RC

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    27CA: 14 24 5F 53 54 41 08                             // .$_STA.

                If (And (^^PCI0.LPCB.PHRC, 0x80))
                {

    27D1: A0 18 7B 5E 5E 2F 03 50 43 49 30 4C 50 43 42 50  // ..{^^/.PCI0LPCBP
    27E1: 48 52 43 0A 80 00                                // HRC...

                    Return (0x09)
                }

    27E7: A4 0A 09                                         // ...

                Else
                {

    27EA: A1 04                                            // ..

                    Return (0x0B)
                }
            }
        }
    }


    27EC: A4 0A 0B                                         // ...

    Scope (\)
    {

    27EF: 10 47 42 5C 00                                   // .GB\.

        Name (PMBV, Zero)

    27F4: 08 50 4D 42 56 00                                // .PMBV.

        Method (PMBS, 0, NotSerialized)
        {

    27FA: 14 2F 50 4D 42 53 00                             // ./PMBS.

            If (LEqual (PMBV, Zero))
            {

    2801: A0 23 93 50 4D 42 56 00                          // .#.PMBV.

                Store (ShiftLeft (\_SB.PCI0.LPCB.ACBA, 0x07), PMBV) /* \PMBV */
            }


    2809: 70 79 5C 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43  // py\/._SB_PCI0LPC
    2819: 42 41 43 42 41 0A 07 00 50 4D 42 56              // BACBA...PMBV

            Return (PMBV) /* \PMBV */
        }


    2825: A4 50 4D 42 56                                   // .PMBV

        Name (GPBV, Zero)

    282A: 08 47 50 42 56 00                                // .GPBV.

        Method (GPBS, 0, NotSerialized)
        {

    2830: 14 2F 47 50 42 53 00                             // ./GPBS.

            If (LEqual (GPBV, Zero))
            {

    2837: A0 23 93 47 50 42 56 00                          // .#.GPBV.

                Store (ShiftLeft (\_SB.PCI0.LPCB.GPBA, 0x07), GPBV) /* \GPBV */
            }


    283F: 70 79 5C 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43  // py\/._SB_PCI0LPC
    284F: 42 47 50 42 41 0A 07 00 47 50 42 56              // BGPBA...GPBV

            Return (GPBV) /* \GPBV */
        }


    285B: A4 47 50 42 56                                   // .GPBV

        Name (RCBV, Zero)

    2860: 08 52 43 42 56 00                                // .RCBV.

        Method (RCBS, 0, NotSerialized)
        {

    2866: 14 2F 52 43 42 53 00                             // ./RCBS.

            If (LEqual (RCBV, Zero))
            {

    286D: A0 23 93 52 43 42 56 00                          // .#.RCBV.

                Store (ShiftLeft (\_SB.PCI0.LPCB.RCBA, 0x0E), RCBV) /* \RCBV */
            }


    2875: 70 79 5C 2F 04 5F 53 42 5F 50 43 49 30 4C 50 43  // py\/._SB_PCI0LPC
    2885: 42 52 43 42 41 0A 0E 00 52 43 42 56              // BRCBA...RCBV

            Return (RCBV) /* \RCBV */
        }


    2891: A4 52 43 42 56                                   // .RCBV

        OperationRegion (PMIO, SystemIO, PMBS (), 0x80)

    2896: 5B 80 50 4D 49 4F 01 50 4D 42 53 0A 80           // [.PMIO.PMBS..

        Field (PMIO, ByteAcc, NoLock, Preserve)
        {
            Offset (0x08), 
            PBSS,   1, 
            Offset (0x28), 
            Offset (0x2A), 
                ,   3, 
            GPE3,   1, 
            Offset (0x3C), 
                ,   1, 
            UPRW,   1, 
            Offset (0x42), 
                ,   1, 
            GPEC,   1
        }


    28A3: 5B 81 2D 50 4D 49 4F 01 00 40 04 50 42 53 53 01  // [.-PMIO..@.PBSS.
    28B3: 00 4F 0F 00 10 00 03 47 50 45 33 01 00 4C 08 00  // .O.....GPE3..L..
    28C3: 01 55 50 52 57 01 00 2E 00 01 47 50 45 43 01     // .UPRW.....GPEC.

        Field (PMIO, ByteAcc, NoLock, WriteAsZeros)
        {
            Offset (0x20), 
            Offset (0x22), 
                ,   3, 
            GPS3,   1, 
            Offset (0x64), 
                ,   9, 
            SCIS,   1, 
            Offset (0x66)
        }


    28D2: 5B 81 1E 50 4D 49 4F 41 00 40 10 00 10 00 03 47  // [..PMIOA.@.....G
    28E2: 50 53 33 01 00 4C 20 00 09 53 43 49 53 01 00 06  // PS3..L ..SCIS...

        OperationRegion (LGPE, SystemIO, Add (PMBS (), 0x80), 0x20)

    28F2: 5B 80 4C 47 50 45 01 72 50 4D 42 53 0A 80 00 0A  // [.LGPE.rPMBS....
    2902: 20                                               //  

        Field (LGPE, ByteAcc, NoLock, Preserve)
        {
            Offset (0x10), 
            Offset (0x11), 
            GE08,   1, 
                ,   8, 
            GE17,   1, 
                ,   17, 
            GE35,   1, 
                ,   9, 
            GE45,   1, 
            Offset (0x16), 
            GE48,   1, 
                ,   2, 
            GE51,   1, 
            Offset (0x20)
        }


    2903: 5B 81 36 4C 47 50 45 01 00 40 08 00 08 47 45 30  // [.6LGPE..@...GE0
    2913: 38 01 00 08 47 45 31 37 01 00 11 47 45 33 35 01  // 8...GE17...GE35.
    2923: 00 09 47 45 34 35 01 00 02 47 45 34 38 01 00 02  // ..GE45...GE48...
    2933: 47 45 35 31 01 00 4C 04                          // GE51..L.

        Field (LGPE, ByteAcc, NoLock, WriteAsZeros)
        {
            Offset (0x01), 
            GS08,   1, 
                ,   8, 
            GS17,   1, 
                ,   17, 
            GS35,   1, 
                ,   9, 
            GS45,   1, 
            Offset (0x06), 
            GS48,   1, 
                ,   2, 
            GS51,   1, 
                ,   2, 
            GS54,   1, 
            GS55,   1, 
            Offset (0x10)
        }


    293B: 5B 81 3F 4C 47 50 45 41 00 08 47 53 30 38 01 00  // [.?LGPEA..GS08..
    294B: 08 47 53 31 37 01 00 11 47 53 33 35 01 00 09 47  // .GS17...GS35...G
    295B: 53 34 35 01 00 02 47 53 34 38 01 00 02 47 53 35  // S45...GS48...GS5
    296B: 31 01 00 02 47 53 35 34 01 47 53 35 35 01 00 48  // 1...GS54.GS55..H
    297B: 04                                               // .

        OperationRegion (GPR, SystemIO, GPBS (), 0x0400)

    297C: 5B 80 47 50 52 5F 01 47 50 42 53 0B 00 04        // [.GPR_.GPBS...

        Field (GPR, ByteAcc, NoLock, Preserve)
        {
            GU00,   8, 
            GU01,   8, 
            GU02,   8, 
            GU03,   8, 
            GIO0,   8, 
            GIO1,   8, 
            GIO2,   8, 
            GIO3,   8, 
            Offset (0x0C), 
            GL00,   8, 
            GL01,   8, 
            GL02,   8, 
            GP24,   1, 
                ,   2, 
            GP27,   1, 
            GP28,   1, 
            Offset (0x10), 
            Offset (0x18), 
            GB00,   8, 
            GB01,   8, 
            GB02,   8, 
            GB03,   8, 
            Offset (0x2C), 
            GIV0,   8, 
            GIV1,   8, 
            GIV2,   8, 
            GIV3,   8, 
            GU04,   8, 
            GU05,   8, 
            GU06,   8, 
            GU07,   8, 
            GIO4,   8, 
            GIO5,   8, 
            GIO6,   8, 
            GIO7,   8, 
            GL04,   8, 
            GL05,   8, 
            GL06,   8, 
            GL07,   8, 
            Offset (0x40), 
            GU08,   8, 
            GU09,   8, 
            GU0A,   8, 
            GU0B,   8, 
            GIO8,   8, 
            GIO9,   8, 
            GIOA,   8, 
            GIOB,   8, 
            GL08,   8, 
            GL09,   8, 
            GL0A,   8, 
            GL0B,   8, 
            Offset (0x288), 
                ,   31, 
            GO49,   1
        }


    298A: 5B 81 46 10 47 50 52 5F 01 47 55 30 30 08 47 55  // [.F.GPR_.GU00.GU
    299A: 30 31 08 47 55 30 32 08 47 55 30 33 08 47 49 4F  // 01.GU02.GU03.GIO
    29AA: 30 08 47 49 4F 31 08 47 49 4F 32 08 47 49 4F 33  // 0.GIO1.GIO2.GIO3
    29BA: 08 00 20 47 4C 30 30 08 47 4C 30 31 08 47 4C 30  // .. GL00.GL01.GL0
    29CA: 32 08 47 50 32 34 01 00 02 47 50 32 37 01 47 50  // 2.GP24...GP27.GP
    29DA: 32 38 01 00 03 00 40 04 47 42 30 30 08 47 42 30  // 28....@.GB00.GB0
    29EA: 31 08 47 42 30 32 08 47 42 30 33 08 00 40 08 47  // 1.GB02.GB03..@.G
    29FA: 49 56 30 08 47 49 56 31 08 47 49 56 32 08 47 49  // IV0.GIV1.GIV2.GI
    2A0A: 56 33 08 47 55 30 34 08 47 55 30 35 08 47 55 30  // V3.GU04.GU05.GU0
    2A1A: 36 08 47 55 30 37 08 47 49 4F 34 08 47 49 4F 35  // 6.GU07.GIO4.GIO5
    2A2A: 08 47 49 4F 36 08 47 49 4F 37 08 47 4C 30 34 08  // .GIO6.GIO7.GL04.
    2A3A: 47 4C 30 35 08 47 4C 30 36 08 47 4C 30 37 08 00  // GL05.GL06.GL07..
    2A4A: 20 47 55 30 38 08 47 55 30 39 08 47 55 30 41 08  //  GU08.GU09.GU0A.
    2A5A: 47 55 30 42 08 47 49 4F 38 08 47 49 4F 39 08 47  // GU0B.GIO8.GIO9.G
    2A6A: 49 4F 41 08 47 49 4F 42 08 47 4C 30 38 08 47 4C  // IOA.GIOB.GL08.GL
    2A7A: 30 39 08 47 4C 30 41 08 47 4C 30 42 08 00 80 1E  // 09.GL0A.GL0B....
    2A8A: 01 00 1F 47 4F 34 39 01                          // ...GO49.

        OperationRegion (GPRL, SystemIO, GPBS (), 0x40)

    2A92: 5B 80 47 50 52 4C 01 47 50 42 53 0A 40           // [.GPRL.GPBS.@

        Field (GPRL, ByteAcc, NoLock, Preserve)
        {
            Offset (0x01), 
            GO08,   1, 
            GO09,   1, 
            GO10,   1, 
                ,   2, 
            GO13,   1, 
            GO14,   1, 
                ,   2, 
            GO17,   1, 
                ,   27, 
            GO45,   1, 
            Offset (0x06), 
            GO48,   1, 
                ,   2, 
            GO51,   1, 
                ,   2, 
            GO54,   1, 
            GO55,   1, 
            GO56,   1, 
            Offset (0x10), 
            Offset (0x30), 
            GR00,   32, 
            GR01,   32, 
            GR02,   32
        }


    2A9F: 5B 81 46 06 47 50 52 4C 01 00 08 47 4F 30 38 01  // [.F.GPRL...GO08.
    2AAF: 47 4F 30 39 01 47 4F 31 30 01 00 02 47 4F 31 33  // GO09.GO10...GO13
    2ABF: 01 47 4F 31 34 01 00 02 47 4F 31 37 01 00 1B 47  // .GO14...GO17...G
    2ACF: 4F 34 35 01 00 02 47 4F 34 38 01 00 02 47 4F 35  // O45...GO48...GO5
    2ADF: 31 01 00 02 47 4F 35 34 01 47 4F 35 35 01 47 4F  // 1...GO54.GO55.GO
    2AEF: 35 36 01 00 47 04 00 40 10 47 52 30 30 20 47 52  // 56..G..@.GR00 GR
    2AFF: 30 31 20 47 52 30 32 20                          // 01 GR02 

        OperationRegion (RCRB, SystemMemory, RCBS (), 0x4000)

    2B07: 5B 80 52 43 52 42 00 52 43 42 53 0B 00 40        // [.RCRB.RCBS..@

        Field (RCRB, DWordAcc, Lock, Preserve)
        {
            Offset (0x1000), 
            Offset (0x2330), 
            AFEA,   32, 
            AFED,   32, 
            AFES,   16, 
            AFER,   16, 
            Offset (0x3000), 
            Offset (0x3310), 
                ,   4, 
            PWST,   1, 
            Offset (0x3318), 
                ,   4, 
            WLPE,   1, 
            Offset (0x331C), 
            Offset (0x331F), 
            PMFS,   1, 
            Offset (0x3320), 
            CKEN,   32, 
            Offset (0x33E0), 
            Offset (0x33E2), 
            WLP2,   2, 
            Offset (0x3404), 
            HPAS,   2, 
                ,   5, 
            HPAE,   1, 
            Offset (0x3418), 
                ,   1, 
            ADSD,   1, 
            SATD,   1, 
            SMBD,   1, 
            HDAD,   1, 
                ,   10, 
            EHCD,   1, 
            RP1D,   1, 
            RP2D,   1, 
            RP3D,   1, 
            RP4D,   1, 
            RP5D,   1, 
            RP6D,   1, 
            RP7D,   1, 
            RP8D,   1, 
                ,   3, 
            XHCD,   1, 
            Offset (0x359C), 
            UP0D,   1, 
            UP1D,   1, 
            UP2D,   1, 
            UP3D,   1, 
            UP4D,   1, 
            UP5D,   1, 
            UP6D,   1, 
            UP7D,   1, 
            UP8D,   1, 
            UP9D,   1, 
            UPAD,   1, 
            UPBD,   1, 
            UPCD,   1, 
            UPDD,   1, 
                ,   1, 
            Offset (0x359E)
        }
    }


    2B15: 5B 81 40 10 52 43 52 42 13 00 80 00 08 00 80 98  // [.@.RCRB........
    2B25: 09 41 46 45 41 20 41 46 45 44 20 41 46 45 53 10  // .AFEA AFED AFES.
    2B35: 41 46 45 52 10 00 80 62 06 00 80 88 01 00 04 50  // AFER...b.......P
    2B45: 57 53 54 01 00 3B 00 04 57 4C 50 45 01 00 1B 00  // WST..;..WLPE....
    2B55: 18 50 4D 46 53 01 00 07 43 4B 45 4E 20 00 40 5E  // .PMFS...CKEN .@^
    2B65: 00 10 57 4C 50 32 02 00 4E 10 48 50 41 53 02 00  // ..WLP2..N.HPAS..
    2B75: 05 48 50 41 45 01 00 48 09 00 01 41 44 53 44 01  // .HPAE..H...ADSD.
    2B85: 53 41 54 44 01 53 4D 42 44 01 48 44 41 44 01 00  // SATD.SMBD.HDAD..
    2B95: 0A 45 48 43 44 01 52 50 31 44 01 52 50 32 44 01  // .EHCD.RP1D.RP2D.
    2BA5: 52 50 33 44 01 52 50 34 44 01 52 50 35 44 01 52  // RP3D.RP4D.RP5D.R
    2BB5: 50 36 44 01 52 50 37 44 01 52 50 38 44 01 00 03  // P6D.RP7D.RP8D...
    2BC5: 58 48 43 44 01 00 44 C0 55 50 30 44 01 55 50 31  // XHCD..D.UP0D.UP1
    2BD5: 44 01 55 50 32 44 01 55 50 33 44 01 55 50 34 44  // D.UP2D.UP3D.UP4D
    2BE5: 01 55 50 35 44 01 55 50 36 44 01 55 50 37 44 01  // .UP5D.UP6D.UP7D.
    2BF5: 55 50 38 44 01 55 50 39 44 01 55 50 41 44 01 55  // UP8D.UP9D.UPAD.U
    2C05: 50 42 44 01 55 50 43 44 01 55 50 44 44 01 00 01  // PBD.UPCD.UPDD...
    2C15: 00 01                                            // ..

    Scope (_SB)
    {

    2C17: 10 4E 2A 5F 53 42 5F                             // .N*_SB_

        Method (RDGI, 1, Serialized)
        {

    2C1E: 14 3D 52 44 47 49 09                             // .=RDGI.

            If (
    2C25: A0 36 92                                         // .6.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS (), 0x0100), Multiply (Arg0, 0x08)), Local0)

    2C28: 94 68 0A 5E 70 72 72 47 50 42 53 0B 00 01 00 77  // .h.^prrGPBS....w
    2C38: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

    2C3E: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                        ,   30, 
                    TEMP,   1
                }


    2C48: 5B 81 0D 4C 47 50 49 00 00 1E 54 45 4D 50 01     // [..LGPI...TEMP.

                Return (TEMP) /* \_SB_.RDGI.TEMP */
            }
        }


    2C57: A4 54 45 4D 50                                   // .TEMP

        Method (RDGP, 1, Serialized)
        {

    2C5C: 14 3D 52 44 47 50 09                             // .=RDGP.

            If (
    2C63: A0 36 92                                         // .6.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS (), 0x0100), Multiply (Arg0, 0x08)), Local0)

    2C66: 94 68 0A 5E 70 72 72 47 50 42 53 0B 00 01 00 77  // .h.^prrGPBS....w
    2C76: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

    2C7C: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                        ,   31, 
                    TEMP,   1
                }


    2C86: 5B 81 0D 4C 47 50 49 00 00 1F 54 45 4D 50 01     // [..LGPI...TEMP.

                Return (TEMP) /* \_SB_.RDGP.TEMP */
            }
        }


    2C95: A4 54 45 4D 50                                   // .TEMP

        Method (WTGP, 2, Serialized)
        {

    2C9A: 14 3E 57 54 47 50 0A                             // .>WTGP.

            If (
    2CA1: A0 37 92                                         // .7.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS (), 0x0100), Multiply (Arg0, 0x08)), Local0)

    2CA4: 94 68 0A 5E 70 72 72 47 50 42 53 0B 00 01 00 77  // .h.^prrGPBS....w
    2CB4: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

    2CBA: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                        ,   31, 
                    TEMP,   1
                }


    2CC4: 5B 81 0D 4C 47 50 49 00 00 1F 54 45 4D 50 01     // [..LGPI...TEMP.

                Store (Arg1, TEMP) /* \_SB_.WTGP.TEMP */
            }
        }


    2CD3: 70 69 54 45 4D 50                                // piTEMP

        Method (WTIN, 2, Serialized)
        {

    2CD9: 14 3E 57 54 49 4E 0A                             // .>WTIN.

            If (
    2CE0: A0 37 92                                         // .7.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS (), 0x0100), Multiply (Arg0, 0x08)), Local0)

    2CE3: 94 68 0A 5E 70 72 72 47 50 42 53 0B 00 01 00 77  // .h.^prrGPBS....w
    2CF3: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

    2CF9: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, ByteAcc, NoLock, Preserve)
                {
                        ,   3, 
                    TEMP,   1
                }


    2D03: 5B 81 0D 4C 47 50 49 01 00 03 54 45 4D 50 01     // [..LGPI...TEMP.

                Store (Arg1, TEMP) /* \_SB_.WTIN.TEMP */
            }
        }


    2D12: 70 69 54 45 4D 50                                // piTEMP

        Method (WPGP, 2, Serialized)
        {

    2D18: 14 3C 57 50 47 50 0A                             // .<WPGP.

            If (
    2D1F: A0 35 92                                         // .5.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS (), 0x0104), Multiply (Arg0, 0x08)), Local0)

    2D22: 94 68 0A 5E 70 72 72 47 50 42 53 0B 04 01 00 77  // .h.^prrGPBS....w
    2D32: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

    2D38: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                    TEMP,   2
                }


    2D42: 5B 81 0B 4C 47 50 49 00 54 45 4D 50 02           // [..LGPI.TEMP.

                Store (Arg1, TEMP) /* \_SB_.WPGP.TEMP */
            }
        }


    2D4F: 70 69 54 45 4D 50                                // piTEMP

        Method (GP2N, 2, Serialized)
        {

    2D55: 14 3C 47 50 32 4E 0A                             // .<GP2N.

            If (
    2D5C: A0 35 92                                         // .5.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS (), 0x0100), Multiply (Arg0, 0x08)), Local0)

    2D5F: 94 68 0A 5E 70 72 72 47 50 42 53 0B 00 01 00 77  // .h.^prrGPBS....w
    2D6F: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

    2D75: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                    TEMP,   1
                }


    2D7F: 5B 81 0B 4C 47 50 49 00 54 45 4D 50 01           // [..LGPI.TEMP.

                Store (Arg1, TEMP) /* \_SB_.GP2N.TEMP */
            }
        }


    2D8C: 70 69 54 45 4D 50                                // piTEMP

        Method (GP2A, 2, Serialized)
        {

    2D92: 14 40 0C 47 50 32 41 0A                          // .@.GP2A.

            If (
    2D9A: A0 48 0B 92                                      // .H..

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS (), 0x0104), Multiply (Arg0, 0x08)), Local0)

    2D9E: 94 68 0A 5E 70 72 72 47 50 42 53 0B 04 01 00 77  // .h.^prrGPBS....w
    2DAE: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGP2, SystemIO, Local0, 0x04)

    2DB4: 5B 80 4C 47 50 32 01 60 0A 04                    // [.LGP2.`..

                Field (LGP2, AnyAcc, NoLock, Preserve)
                {
                    GPWP,   2, 
                    GPIS,   1
                }


    2DBE: 5B 81 10 4C 47 50 32 00 47 50 57 50 02 47 50 49  // [..LGP2.GPWP.GPI
    2DCE: 53 01                                            // S.

                If (LEqual (Arg1, One))
                {
                    Store (Zero, GPIS) /* \_SB_.GP2A.GPIS */

    2DD0: A0 10 93 69 01 70 00 47 50 49 53                 // ...i.p.GPIS

                    Store (Zero, GPWP) /* \_SB_.GP2A.GPWP */
                }

    2DDB: 70 00 47 50 57 50                                // p.GPWP

                Else
                {
                    Store (0x02, GPWP) /* \_SB_.GP2A.GPWP */

    2DE1: A1 0E 70 0A 02 47 50 57 50                       // ..p..GPWP

                    Store (One, GPIS) /* \_SB_.GP2A.GPIS */
                }

                Store (Add (GPBS (), 0x10), Local0)

    2DEA: 70 01 47 50 49 53 70 72 47 50 42 53 0A 10 00 60  // p.GPISprGPBS...`

                OperationRegion (LGPI, SystemIO, Local0, 0x02)

    2DFA: 5B 80 4C 47 50 49 01 60 0A 02                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                    TEMP,   16
                }


    2E04: 5B 81 0B 4C 47 50 49 00 54 45 4D 50 10           // [..LGPI.TEMP.

                If (
    2E11: A0 0B 92                                         // ...

LGreaterEqual (Arg0, 0x2D))
                {

    2E14: 95 68 0A 2D                                      // .h.-

                    Subtract (Arg0, 0x28, Local1)
                }

    2E18: 74 68 0A 28 61                                   // th.(a

                ElseIf
    2E1D: A1 14                                            // ..

 (
    2E1F: A0 0B 92                                         // ...

LLessEqual (Arg0, 0x0A))
                {

    2E22: 94 68 0A 0A                                      // .h..

                    Subtract (Arg0, 0x08, Local1)
                }

    2E26: 74 68 0A 08 61                                   // th..a

                Else
                {

    2E2B: A1 06                                            // ..

                    Subtract (Arg0, 0x0A, Local1)
                }

                Store (ShiftLeft (One, Local1), Local2)

    2E2D: 74 68 0A 0A 61 70 79 01 61 00 62                 // th..apy.a.b

                If (Arg1)
                {

    2E38: A0 0C 69                                         // ..i

                    Or (TEMP, Local2, TEMP) /* \_SB_.GP2A.TEMP */
                }

    2E3B: 7D 54 45 4D 50 62 54 45 4D 50                    // }TEMPbTEMP

                Else
                {

    2E45: A1 0D                                            // ..

                    And (TEMP, Not (Local2), TEMP) /* \_SB_.GP2A.TEMP */
                }
            }
        }


    2E47: 7B 54 45 4D 50 80 62 00 54 45 4D 50              // {TEMP.b.TEMP

        Method (GP2B, 2, Serialized)
        {

    2E53: 14 42 07 47 50 32 42 0A                          // .B.GP2B.

            If (
    2E5B: A0 4A 06 92                                      // .J..

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (GPBS (), 0x10), Local0)

    2E5F: 94 68 0A 5E 70 72 47 50 42 53 0A 10 00 60        // .h.^prGPBS...`

                OperationRegion (LGPI, SystemIO, Local0, 0x02)

    2E6D: 5B 80 4C 47 50 49 01 60 0A 02                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                    TEMP,   16
                }


    2E77: 5B 81 0B 4C 47 50 49 00 54 45 4D 50 10           // [..LGPI.TEMP.

                If (
    2E84: A0 0B 92                                         // ...

LGreaterEqual (Arg0, 0x2D))
                {

    2E87: 95 68 0A 2D                                      // .h.-

                    Subtract (Arg0, 0x28, Local1)
                }

    2E8B: 74 68 0A 28 61                                   // th.(a

                ElseIf
    2E90: A1 14                                            // ..

 (
    2E92: A0 0B 92                                         // ...

LLessEqual (Arg0, 0x0A))
                {

    2E95: 94 68 0A 0A                                      // .h..

                    Subtract (Arg0, 0x08, Local1)
                }

    2E99: 74 68 0A 08 61                                   // th..a

                Else
                {

    2E9E: A1 06                                            // ..

                    Subtract (Arg0, 0x0A, Local1)
                }

                Store (ShiftLeft (One, Local1), Local2)

    2EA0: 74 68 0A 0A 61 70 79 01 61 00 62                 // th..apy.a.b

                If (Arg1)
                {

    2EAB: A0 0C 69                                         // ..i

                    Or (TEMP, Local2, TEMP) /* \_SB_.GP2B.TEMP */
                }

    2EAE: 7D 54 45 4D 50 62 54 45 4D 50                    // }TEMPbTEMP

                Else
                {

    2EB8: A1 0D                                            // ..

                    And (TEMP, Not (Local2), TEMP) /* \_SB_.GP2B.TEMP */
                }
            }
        }
    }


    2EBA: 7B 54 45 4D 50 80 62 00 54 45 4D 50              // {TEMP.b.TEMP

    Scope (_SB.PCI0)
    {

    2EC6: 10 41 3D 2E 5F 53 42 5F 50 43 49 30              // .A=._SB_PCI0

        Name (LTRE, Zero)

    2ED2: 08 4C 54 52 45 00                                // .LTRE.

        Name (OBFF, Zero)

    2ED8: 08 4F 42 46 46 00                                // .OBFF.

        Name (LMSL, Zero)

    2EDE: 08 4C 4D 53 4C 00                                // .LMSL.

        Name (LNSL, Zero)

    2EE4: 08 4C 4E 53 4C 00                                // .LNSL.

        Device (EHC1)
        {

    2EEA: 5B 82 41 16 45 48 43 31                          // [.A.EHC1

            Name (_ADR, 0x001D0000)  // _ADR: Address

    2EF2: 08 5F 41 44 52 0C 00 00 1D 00                    // ._ADR.....

            OperationRegion (PWKE, PCI_Config, Zero, 0x0100)

    2EFC: 5B 80 50 57 4B 45 02 00 0B 00 01                 // [.PWKE.....

            Field (PWKE, AnyAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x54), 
                Offset (0x55), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }


    2F07: 5B 81 1C 50 57 4B 45 00 44 56 49 44 10 00 40 29  // [..PWKE.DVID..@)
    2F17: 00 08 50 4D 45 45 01 00 06 50 4D 45 53 01        // ..PMEE...PMES.

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {

    2F25: 14 0C 5F 44 53 57 03                             // .._DSW.

                Store (Arg0, PMEE) /* \_SB_.PCI0.EHC1.PMEE */
            }


    2F2C: 70 68 50 4D 45 45                                // phPMEE

            Method (GPEH, 0, NotSerialized)
            {

    2F32: 14 2A 47 50 45 48 00                             // .*GPEH.

                If (LEqual (DVID, 0xFFFF))
                {

    2F39: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }


    2F43: A4 00                                            // ..

                If (LAnd (PMEE, PMES))
                {
                    Store (One, PMES) /* \_SB_.PCI0.EHC1.PMES */

    2F45: A0 17 90 50 4D 45 45 50 4D 45 53 70 01 50 4D 45  // ...PMEEPMESp.PME
    2F55: 53                                               // S

                    Notify (EHC1, 0x02) // Device Wake
                }
            }


    2F56: 86 45 48 43 31 0A 02                             // .EHC1..

            Method (_S3D, 0, NotSerialized)  // _S3D: S3 Device State
            {

    2F5D: 14 09 5F 53 33 44 00                             // .._S3D.

                Return (0x02)
            }


    2F64: A4 0A 02                                         // ...

            Method (_S4D, 0, NotSerialized)  // _S4D: S4 Device State
            {

    2F67: 14 09 5F 53 34 44 00                             // .._S4D.

                Return (0x02)
            }


    2F6E: A4 0A 02                                         // ...

            Device (HUBN)
            {

    2F71: 5B 82 4A 0C 48 55 42 4E                          // [.J.HUBN

                Name (_ADR, Zero)  // _ADR: Address

    2F79: 08 5F 41 44 52 00                                // ._ADR.

                Device (PR01)
                {

    2F7F: 5B 82 4C 0B 50 52 30 31                          // [.L.PR01

                    Name (_ADR, One)  // _ADR: Address

    2F87: 08 5F 41 44 52 01                                // ._ADR.

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

    2F8D: 14 18 5F 55 50 43 08                             // .._UPC.

                        Name (UPCA, 
    2F94: 08 55 50 43 41                                   // .UPCA

Package (0x04)
                        {
                            Zero, 
                            0xFF, 
                            Zero, 
                            Zero
                        })

    2F99: 12 07 04 00 0A FF 00 00                          // ........

                        Return (UPCA) /* \_SB_.PCI0.EHC1.HUBN.PR01._UPC.UPCA */
                    }


    2FA1: A4 55 50 43 41                                   // .UPCA

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

    2FA6: 14 27 5F 50 4C 44 08                             // .'_PLD.

                        Name (PLDP, 
    2FAD: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

    2FB2: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // 0.......
                            }
                        })

    2FB5: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 00 00  // ............0...
    2FC5: 00 00 00 00                                      // ....

                        Return (PLDP) /* \_SB_.PCI0.EHC1.HUBN.PR01._PLD.PLDP */
                    }


    2FC9: A4 50 4C 44 50                                   // .PLDP

                    Device (PR11)
                    {

    2FCE: 5B 82 0B 50 52 31 31                             // [..PR11

                        Name (_ADR, One)  // _ADR: Address
                    }


    2FD5: 08 5F 41 44 52 01                                // ._ADR.

                    Device (PR12)
                    {

    2FDB: 5B 82 0C 50 52 31 32                             // [..PR12

                        Name (_ADR, 0x02)  // _ADR: Address
                    }


    2FE2: 08 5F 41 44 52 0A 02                             // ._ADR..

                    Device (PR13)
                    {

    2FE9: 5B 82 0C 50 52 31 33                             // [..PR13

                        Name (_ADR, 0x03)  // _ADR: Address
                    }


    2FF0: 08 5F 41 44 52 0A 03                             // ._ADR..

                    Device (PR14)
                    {

    2FF7: 5B 82 0C 50 52 31 34                             // [..PR14

                        Name (_ADR, 0x04)  // _ADR: Address
                    }


    2FFE: 08 5F 41 44 52 0A 04                             // ._ADR..

                    Device (PR15)
                    {

    3005: 5B 82 0C 50 52 31 35                             // [..PR15

                        Name (_ADR, 0x05)  // _ADR: Address
                    }


    300C: 08 5F 41 44 52 0A 05                             // ._ADR..

                    Device (PR16)
                    {

    3013: 5B 82 0C 50 52 31 36                             // [..PR16

                        Name (_ADR, 0x06)  // _ADR: Address
                    }


    301A: 08 5F 41 44 52 0A 06                             // ._ADR..

                    Device (PR17)
                    {

    3021: 5B 82 0C 50 52 31 37                             // [..PR17

                        Name (_ADR, 0x07)  // _ADR: Address
                    }


    3028: 08 5F 41 44 52 0A 07                             // ._ADR..

                    Device (PR18)
                    {

    302F: 5B 82 0C 50 52 31 38                             // [..PR18

                        Name (_ADR, 0x08)  // _ADR: Address
                    }
                }
            }


    3036: 08 5F 41 44 52 0A 08                             // ._ADR..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    303D: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x6D, 0x03))
            }
        }


    3044: A4 47 50 52 57 0A 6D 0A 03                       // .GPRW.m..

        Device (EHC2)
        {

    304D: 5B 82 49 24 45 48 43 32                          // [.I$EHC2

            Name (_ADR, 0x001A0000)  // _ADR: Address

    3055: 08 5F 41 44 52 0C 00 00 1A 00                    // ._ADR.....

            OperationRegion (PWKE, PCI_Config, Zero, 0x0100)

    305F: 5B 80 50 57 4B 45 02 00 0B 00 01                 // [.PWKE.....

            Field (PWKE, AnyAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x54), 
                Offset (0x55), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }


    306A: 5B 81 1C 50 57 4B 45 00 44 56 49 44 10 00 40 29  // [..PWKE.DVID..@)
    307A: 00 08 50 4D 45 45 01 00 06 50 4D 45 53 01        // ..PMEE...PMES.

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {

    3088: 14 0C 5F 44 53 57 03                             // .._DSW.

                Store (Arg0, PMEE) /* \_SB_.PCI0.EHC2.PMEE */
            }


    308F: 70 68 50 4D 45 45                                // phPMEE

            Method (GPEH, 0, NotSerialized)
            {

    3095: 14 2A 47 50 45 48 00                             // .*GPEH.

                If (LEqual (DVID, 0xFFFF))
                {

    309C: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }


    30A6: A4 00                                            // ..

                If (LAnd (PMEE, PMES))
                {
                    Store (One, PMES) /* \_SB_.PCI0.EHC2.PMES */

    30A8: A0 17 90 50 4D 45 45 50 4D 45 53 70 01 50 4D 45  // ...PMEEPMESp.PME
    30B8: 53                                               // S

                    Notify (EHC2, 0x02) // Device Wake
                }
            }


    30B9: 86 45 48 43 32 0A 02                             // .EHC2..

            Method (_S3D, 0, NotSerialized)  // _S3D: S3 Device State
            {

    30C0: 14 09 5F 53 33 44 00                             // .._S3D.

                Return (0x02)
            }


    30C7: A4 0A 02                                         // ...

            Method (_S4D, 0, NotSerialized)  // _S4D: S4 Device State
            {

    30CA: 14 09 5F 53 34 44 00                             // .._S4D.

                Return (0x02)
            }


    30D1: A4 0A 02                                         // ...

            Device (HUBN)
            {

    30D4: 5B 82 42 1B 48 55 42 4E                          // [.B.HUBN

                Name (_ADR, Zero)  // _ADR: Address

    30DC: 08 5F 41 44 52 00                                // ._ADR.

                Device (PR01)
                {

    30E2: 5B 82 44 1A 50 52 30 31                          // [.D.PR01

                    Name (_ADR, One)  // _ADR: Address

    30EA: 08 5F 41 44 52 01                                // ._ADR.

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

    30F0: 14 18 5F 55 50 43 08                             // .._UPC.

                        Name (UPCA, 
    30F7: 08 55 50 43 41                                   // .UPCA

Package (0x04)
                        {
                            0xFF, 
                            Zero, 
                            Zero, 
                            Zero
                        })

    30FC: 12 07 04 0A FF 00 00 00                          // ........

                        Return (UPCA) /* \_SB_.PCI0.EHC2.HUBN.PR01._UPC.UPCA */
                    }


    3104: A4 55 50 43 41                                   // .UPCA

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

    3109: 14 27 5F 50 4C 44 08                             // .'_PLD.

                        Name (PLDP, 
    3110: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

    3115: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // 0.......
                            }
                        })

    3118: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 00 00  // ............0...
    3128: 00 00 00 00                                      // ....

                        Return (PLDP) /* \_SB_.PCI0.EHC2.HUBN.PR01._PLD.PLDP */
                    }


    312C: A4 50 4C 44 50                                   // .PLDP

                    Device (PR11)
                    {

    3131: 5B 82 0B 50 52 31 31                             // [..PR11

                        Name (_ADR, One)  // _ADR: Address
                    }


    3138: 08 5F 41 44 52 01                                // ._ADR.

                    Device (PR12)
                    {

    313E: 5B 82 4E 08 50 52 31 32                          // [.N.PR12

                        Name (_ADR, 0x02)  // _ADR: Address

    3146: 08 5F 41 44 52 0A 02                             // ._ADR..

                        Alias (SBV1, SDGV)

    314D: 06 53 42 56 31 53 44 47 56                       // .SBV1SDGV

                        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                        {

    3156: 14 47 07 5F 44 53 4D 0C                          // .G._DSM.


    315E: 08 5F 54 5F 30 00                                // ._T_0.

                            If (LEqual (Arg0, 
    3164: A0 47 06 93 68                                   // .G..h

ToUUID ("a5fc708f-8775-4ba6-bd0c-ba90a1ec72f8")))
                            {

    3169: 11 13 0A 10 8F 70 FC A5 75 87 A6 4B BD 0C BA 90  // .....p..u..K....
    3179: A1 EC 72 F8                                      // ..r.

                                Switch (ToInteger (Arg2))
                                {

    317D: A2 4E 04 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                                    Case (Zero)
                                    {

    3189: A0 18 93 5F 54 5F 30 00                          // ..._T_0.

                                        If (LEqual (Arg1, One))
                                        {

    3191: A0 09 93 69 01                                   // ...i.

                                            Return (
    3196: A4                                               // .

Buffer (One)
                                            {
                                                 0x07                                             // .
                                            })
                                        }

    3197: 11 03 01 07                                      // ....

                                        Else
                                        {

    319B: A1 06                                            // ..

                                            Return (
    319D: A4                                               // .

Buffer (One)
                                            {
                                                 0x00                                             // .
                                            })
                                        }
                                    }

    319E: 11 03 01 00                                      // ....

                                    Case
    31A2: A1 28                                            // .(

 (One)
                                    {

    31A4: A0 16 93 5F 54 5F 30 01                          // ..._T_0.

                                        If (LEqual (SDGV, 0xFF))
                                        {

    31AC: A0 0A 93 53 44 47 56 0A FF                       // ...SDGV..

                                            Return (Zero)
                                        }

    31B5: A4 00                                            // ..

                                        Else
                                        {

    31B7: A1 03                                            // ..

                                            Return (One)
                                        }
                                    }

    31B9: A4 01                                            // ..

                                    Case
    31BB: A1 0F                                            // ..

 (0x02)
                                    {

    31BD: A0 0D 93 5F 54 5F 30 0A 02                       // ..._T_0..

                                        Return (SDGV) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR12.SDGV */
                                    }


    31C6: A4 53 44 47 56                                   // .SDGV

                                }
                            }


    31CB: A5                                               // .

                            Return (Zero)
                        }
                    }


    31CC: A4 00                                            // ..

                    Device (PR13)
                    {

    31CE: 5B 82 4E 08 50 52 31 33                          // [.N.PR13

                        Name (_ADR, 0x03)  // _ADR: Address

    31D6: 08 5F 41 44 52 0A 03                             // ._ADR..

                        Alias (SBV2, SDGV)

    31DD: 06 53 42 56 32 53 44 47 56                       // .SBV2SDGV

                        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                        {

    31E6: 14 47 07 5F 44 53 4D 0C                          // .G._DSM.


    31EE: 08 5F 54 5F 30 00                                // ._T_0.

                            If (LEqual (Arg0, 
    31F4: A0 47 06 93 68                                   // .G..h

ToUUID ("a5fc708f-8775-4ba6-bd0c-ba90a1ec72f8")))
                            {

    31F9: 11 13 0A 10 8F 70 FC A5 75 87 A6 4B BD 0C BA 90  // .....p..u..K....
    3209: A1 EC 72 F8                                      // ..r.

                                Switch (ToInteger (Arg2))
                                {

    320D: A2 4E 04 01 70 99 6A 00 5F 54 5F 30              // .N..p.j._T_0

                                    Case (Zero)
                                    {

    3219: A0 18 93 5F 54 5F 30 00                          // ..._T_0.

                                        If (LEqual (Arg1, One))
                                        {

    3221: A0 09 93 69 01                                   // ...i.

                                            Return (
    3226: A4                                               // .

Buffer (One)
                                            {
                                                 0x07                                             // .
                                            })
                                        }

    3227: 11 03 01 07                                      // ....

                                        Else
                                        {

    322B: A1 06                                            // ..

                                            Return (
    322D: A4                                               // .

Buffer (One)
                                            {
                                                 0x00                                             // .
                                            })
                                        }
                                    }

    322E: 11 03 01 00                                      // ....

                                    Case
    3232: A1 28                                            // .(

 (One)
                                    {

    3234: A0 16 93 5F 54 5F 30 01                          // ..._T_0.

                                        If (LEqual (SDGV, 0xFF))
                                        {

    323C: A0 0A 93 53 44 47 56 0A FF                       // ...SDGV..

                                            Return (Zero)
                                        }

    3245: A4 00                                            // ..

                                        Else
                                        {

    3247: A1 03                                            // ..

                                            Return (One)
                                        }
                                    }

    3249: A4 01                                            // ..

                                    Case
    324B: A1 0F                                            // ..

 (0x02)
                                    {

    324D: A0 0D 93 5F 54 5F 30 0A 02                       // ..._T_0..

                                        Return (SDGV) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR13.SDGV */
                                    }


    3256: A4 53 44 47 56                                   // .SDGV

                                }
                            }


    325B: A5                                               // .

                            Return (Zero)
                        }
                    }


    325C: A4 00                                            // ..

                    Device (PR14)
                    {

    325E: 5B 82 0C 50 52 31 34                             // [..PR14

                        Name (_ADR, 0x04)  // _ADR: Address
                    }


    3265: 08 5F 41 44 52 0A 04                             // ._ADR..

                    Device (PR15)
                    {

    326C: 5B 82 0C 50 52 31 35                             // [..PR15

                        Name (_ADR, 0x05)  // _ADR: Address
                    }


    3273: 08 5F 41 44 52 0A 05                             // ._ADR..

                    Device (PR16)
                    {

    327A: 5B 82 0C 50 52 31 36                             // [..PR16

                        Name (_ADR, 0x06)  // _ADR: Address
                    }
                }
            }


    3281: 08 5F 41 44 52 0A 06                             // ._ADR..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    3288: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x6D, 0x03))
            }
        }
    }


    328F: A4 47 50 52 57 0A 6D 0A 03                       // .GPRW.m..

    Scope (_SB.PCI0)
    {

    3298: 10 48 B2 2E 5F 53 42 5F 50 43 49 30              // .H.._SB_PCI0

        Device (XHC)
        {

    32A4: 5B 82 4B B1 58 48 43 5F                          // [.K.XHC_

            Name (_ADR, 0x00140000)  // _ADR: Address

    32AC: 08 5F 41 44 52 0C 00 00 14 00                    // ._ADR.....

            OperationRegion (XPRT, PCI_Config, Zero, 0x0100)

    32B6: 5B 80 58 50 52 54 02 00 0B 00 01                 // [.XPRT.....

            Field (XPRT, AnyAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x40), 
                    ,   11, 
                SWAI,   1, 
                Offset (0x44), 
                    ,   12, 
                SAIP,   2, 
                Offset (0x48), 
                Offset (0x74), 
                D0D3,   2, 
                Offset (0x75), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1, 
                Offset (0xA8), 
                    ,   13, 
                MW13,   1, 
                MW14,   1, 
                Offset (0xAC), 
                Offset (0xB0), 
                    ,   13, 
                MB13,   1, 
                MB14,   1, 
                Offset (0xB4), 
                Offset (0xD0), 
                PR2,    32, 
                PR2M,   32, 
                PR3,    32, 
                PR3M,   32
            }


    32C1: 5B 81 4F 06 58 50 52 54 00 44 56 49 44 10 00 40  // [.O.XPRT.DVID..@
    32D1: 1F 00 0B 53 57 41 49 01 00 14 00 0C 53 41 49 50  // ...SWAI.....SAIP
    32E1: 02 00 12 00 40 16 44 30 44 33 02 00 06 50 4D 45  // ....@.D0D3...PME
    32F1: 45 01 00 06 50 4D 45 53 01 00 40 19 00 0D 4D 57  // E...PMES..@...MW
    3301: 31 33 01 4D 57 31 34 01 00 11 00 20 00 0D 4D 42  // 13.MW14.... ..MB
    3311: 31 33 01 4D 42 31 34 01 00 11 00 40 0E 50 52 32  // 13.MB14....@.PR2
    3321: 5F 20 50 52 32 4D 20 50 52 33 5F 20 50 52 33 4D  // _ PR2M PR3_ PR3M
    3331: 20                                               //  

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    3332: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x6D, 0x03))
            }


    3339: A4 47 50 52 57 0A 6D 0A 03                       // .GPRW.m..

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {

    3342: 14 0C 5F 44 53 57 03                             // .._DSW.

                Store (Arg0, PMEE) /* \_SB_.PCI0.XHC_.PMEE */
            }


    3349: 70 68 50 4D 45 45                                // phPMEE

            Method (GPEH, 0, NotSerialized)
            {

    334F: 14 2D 47 50 45 48 00                             // .-GPEH.

                If (LEqual (DVID, 0xFFFF))
                {

    3356: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (PMES, Local0)
                Store (One, PMES) /* \_SB_.PCI0.XHC_.PMES */

    3360: A4 00 70 50 4D 45 53 60 70 01 50 4D 45 53        // ..pPMES`p.PMES

                If (LAnd (PMEE, Local0))
                {

    336E: A0 0E 90 50 4D 45 45 60                          // ...PMEE`

                    Notify (XHC, 0x02) // Device Wake
                }
            }


    3376: 86 58 48 43 5F 0A 02                             // .XHC_..

            OperationRegion (XHCP, SystemMemory, Add (GPCB (), 0x000A0000), 0x0100)

    337D: 5B 80 58 48 43 50 00 72 47 50 43 42 0C 00 00 0A  // [.XHCP.rGPCB....
    338D: 00 00 0B 00 01                                   // .....

            Field (XHCP, AnyAcc, Lock, Preserve)
            {
                Offset (0x04), 
                PDBM,   16, 
                Offset (0x10), 
                MEMB,   64
            }


    3392: 5B 81 16 58 48 43 50 10 00 20 50 44 42 4D 10 00  // [..XHCP.. PDBM..
    33A2: 40 05 4D 45 4D 42 40 04                          // @.MEMB@.

            Method (PRTE, 1, Serialized)
            {

    33AA: 14 4B 32 50 52 54 45 09                          // .K2PRTE.


    33B2: 08 5F 54 5F 32 00                                // ._T_2.


    33B8: 08 5F 54 5F 31 00                                // ._T_1.


    33BE: 08 5F 54 5F 30 00                                // ._T_0.

                If (
    33C4: A0 48 22 92                                      // .H".

LLessEqual (Arg0, XHPC))
                {

    33C8: 94 68 58 48 50 43                                // .hXHPC

                    If (LEqual (PCHV (), LPTH))
                    {

    33CE: A0 4F 13 93 50 43 48 56 4C 50 54 48              // .O..PCHVLPTH

                        Switch (Arg0)
                        {

    33DA: A2 43 13 01 70 68 5F 54 5F 30                    // .C..ph_T_0

                            Case (One)
                            {

    33E4: A0 0F 93 5F 54 5F 30 01                          // ..._T_0.

                                Return (
    33EC: A4                                               // .

And (PR2, One))
                            }

    33ED: 7B 50 52 32 5F 01 00                             // {PR2_..

                            Case
    33F4: A1 48 11                                         // .H.

 (0x02)
                            {

    33F7: A0 11 93 5F 54 5F 30 0A 02                       // ..._T_0..

                                Return (
    3400: A4                                               // .

And (PR2, 0x02))
                            }

    3401: 7B 50 52 32 5F 0A 02 00                          // {PR2_...

                            Case
    3409: A1 43 10                                         // .C.

 (0x03)
                            {

    340C: A0 11 93 5F 54 5F 30 0A 03                       // ..._T_0..

                                Return (
    3415: A4                                               // .

And (PR2, 0x04))
                            }

    3416: 7B 50 52 32 5F 0A 04 00                          // {PR2_...

                            Case
    341E: A1 4E 0E                                         // .N.

 (0x04)
                            {

    3421: A0 11 93 5F 54 5F 30 0A 04                       // ..._T_0..

                                Return (
    342A: A4                                               // .

And (PR2, 0x08))
                            }

    342B: 7B 50 52 32 5F 0A 08 00                          // {PR2_...

                            Case
    3433: A1 49 0D                                         // .I.

 (0x05)
                            {

    3436: A0 12 93 5F 54 5F 30 0A 05                       // ..._T_0..

                                Return (
    343F: A4                                               // .

And (PR2, 0x0100))
                            }

    3440: 7B 50 52 32 5F 0B 00 01 00                       // {PR2_....

                            Case
    3449: A1 43 0C                                         // .C.

 (0x06)
                            {

    344C: A0 12 93 5F 54 5F 30 0A 06                       // ..._T_0..

                                Return (
    3455: A4                                               // .

And (PR2, 0x0200))
                            }

    3456: 7B 50 52 32 5F 0B 00 02 00                       // {PR2_....

                            Case
    345F: A1 4D 0A                                         // .M.

 (0x07)
                            {

    3462: A0 12 93 5F 54 5F 30 0A 07                       // ..._T_0..

                                Return (
    346B: A4                                               // .

And (PR2, 0x0400))
                            }

    346C: 7B 50 52 32 5F 0B 00 04 00                       // {PR2_....

                            Case
    3475: A1 47 09                                         // .G.

 (0x08)
                            {

    3478: A0 12 93 5F 54 5F 30 0A 08                       // ..._T_0..

                                Return (
    3481: A4                                               // .

And (PR2, 0x0800))
                            }

    3482: 7B 50 52 32 5F 0B 00 08 00                       // {PR2_....

                            Case
    348B: A1 41 08                                         // .A.

 (0x09)
                            {

    348E: A0 11 93 5F 54 5F 30 0A 09                       // ..._T_0..

                                Return (
    3497: A4                                               // .

And (PR2, 0x10))
                            }

    3498: 7B 50 52 32 5F 0A 10 00                          // {PR2_...

                            Case
    34A0: A1 4C 06                                         // .L.

 (0x0A)
                            {

    34A3: A0 11 93 5F 54 5F 30 0A 0A                       // ..._T_0..

                                Return (
    34AC: A4                                               // .

And (PR2, 0x20))
                            }

    34AD: 7B 50 52 32 5F 0A 20 00                          // {PR2_. .

                            Case
    34B5: A1 47 05                                         // .G.

 (0x0B)
                            {

    34B8: A0 12 93 5F 54 5F 30 0A 0B                       // ..._T_0..

                                Return (
    34C1: A4                                               // .

And (PR2, 0x1000))
                            }

    34C2: 7B 50 52 32 5F 0B 00 10 00                       // {PR2_....

                            Case
    34CB: A1 41 04                                         // .A.

 (0x0C)
                            {

    34CE: A0 12 93 5F 54 5F 30 0A 0C                       // ..._T_0..

                                Return (
    34D7: A4                                               // .

And (PR2, 0x2000))
                            }

    34D8: 7B 50 52 32 5F 0B 00 20 00                       // {PR2_.. .

                            Case
    34E1: A1 2B                                            // .+

 (0x0D)
                            {

    34E3: A0 11 93 5F 54 5F 30 0A 0D                       // ..._T_0..

                                Return (
    34EC: A4                                               // .

And (PR2, 0x40))
                            }

    34ED: 7B 50 52 32 5F 0A 40 00                          // {PR2_.@.

                            Case
    34F5: A1 17                                            // ..

 (0x0E)
                            {

    34F7: A0 11 93 5F 54 5F 30 0A 0E                       // ..._T_0..

                                Return (
    3500: A4                                               // .

And (PR2, 0x80))
                            }

    3501: 7B 50 52 32 5F 0A 80 00                          // {PR2_...

                            Default
                            {

    3509: A1 03                                            // ..

                                Return (Zero)
                            }


    350B: A4 00                                            // ..

                        }
                    }

    350D: A5                                               // .

                    Else
                    {

    350E: A1 4E 0D                                         // .N.

                        Switch (Arg0)
                        {

    3511: A2 4B 0D 01 70 68 5F 54 5F 31                    // .K..ph_T_1

                            Case (One)
                            {

    351B: A0 0F 93 5F 54 5F 31 01                          // ..._T_1.

                                Return (
    3523: A4                                               // .

And (PR2, One))
                            }

    3524: 7B 50 52 32 5F 01 00                             // {PR2_..

                            Case
    352B: A1 40 0C                                         // .@.

 (0x02)
                            {

    352E: A0 11 93 5F 54 5F 31 0A 02                       // ..._T_1..

                                Return (
    3537: A4                                               // .

And (PR2, 0x02))
                            }

    3538: 7B 50 52 32 5F 0A 02 00                          // {PR2_...

                            Case
    3540: A1 4B 0A                                         // .K.

 (0x03)
                            {

    3543: A0 11 93 5F 54 5F 31 0A 03                       // ..._T_1..

                                Return (
    354C: A4                                               // .

And (PR2, 0x04))
                            }

    354D: 7B 50 52 32 5F 0A 04 00                          // {PR2_...

                            Case
    3555: A1 46 09                                         // .F.

 (0x04)
                            {

    3558: A0 11 93 5F 54 5F 31 0A 04                       // ..._T_1..

                                Return (
    3561: A4                                               // .

And (PR2, 0x08))
                            }

    3562: 7B 50 52 32 5F 0A 08 00                          // {PR2_...

                            Case
    356A: A1 41 08                                         // .A.

 (0x05)
                            {

    356D: A0 11 93 5F 54 5F 31 0A 05                       // ..._T_1..

                                Return (
    3576: A4                                               // .

And (PR2, 0x10))
                            }

    3577: 7B 50 52 32 5F 0A 10 00                          // {PR2_...

                            Case
    357F: A1 4C 06                                         // .L.

 (0x06)
                            {

    3582: A0 11 93 5F 54 5F 31 0A 06                       // ..._T_1..

                                Return (
    358B: A4                                               // .

And (PR2, 0x20))
                            }

    358C: 7B 50 52 32 5F 0A 20 00                          // {PR2_. .

                            Case
    3594: A1 47 05                                         // .G.

 (0x07)
                            {

    3597: A0 11 93 5F 54 5F 31 0A 07                       // ..._T_1..

                                Return (
    35A0: A4                                               // .

And (PR2, 0x40))
                            }

    35A1: 7B 50 52 32 5F 0A 40 00                          // {PR2_.@.

                            Case
    35A9: A1 42 04                                         // .B.

 (0x08)
                            {

    35AC: A0 11 93 5F 54 5F 31 0A 08                       // ..._T_1..

                                Return (
    35B5: A4                                               // .

And (PR2, 0x80))
                            }

    35B6: 7B 50 52 32 5F 0A 80 00                          // {PR2_...

                            Case
    35BE: A1 2D                                            // .-

 (0x09)
                            {

    35C0: A0 12 93 5F 54 5F 31 0A 09                       // ..._T_1..

                                Return (
    35C9: A4                                               // .

And (PR2, 0x0100))
                            }

    35CA: 7B 50 52 32 5F 0B 00 01 00                       // {PR2_....

                            Case
    35D3: A1 18                                            // ..

 (0x0A)
                            {

    35D5: A0 12 93 5F 54 5F 31 0A 0A                       // ..._T_1..

                                Return (
    35DE: A4                                               // .

And (PR2, 0x0200))
                            }

    35DF: 7B 50 52 32 5F 0B 00 02 00                       // {PR2_....

                            Default
                            {

    35E8: A1 03                                            // ..

                                Return (Zero)
                            }


    35EA: A4 00                                            // ..

                        }
                    }
                }


    35EC: A5                                               // .

                If (LAnd (LEqual (Arg0, 
    35ED: A0 41 05 90 93 68                                // .A...h

Add (XHPC, One)), 
    35F3: 72 58 48 50 43 01 00                             // rXHPC..

LEqual (XRPC, One)))
                {

    35FA: 93 58 52 50 43 01                                // .XRPC.

                    If (LEqual (PCHV (), LPTH))
                    {

    3600: A0 14 93 50 43 48 56 4C 50 54 48                 // ...PCHVLPTH

                        Return (
    360B: A4                                               // .

And (PR2, 0x4000))
                    }


    360C: 7B 50 52 32 5F 0B 00 40 00                       // {PR2_..@.

                    If (LEqual (PCHV (), LPTL))
                    {

    3615: A0 14 93 50 43 48 56 4C 50 54 4C                 // ...PCHVLPTL

                        Return (
    3620: A4                                               // .

And (PR2, 0x0100))
                    }


    3621: 7B 50 52 32 5F 0B 00 01 00                       // {PR2_....

                    If (LEqual (PCHV (), WPTL))
                    {

    362A: A0 14 93 50 43 48 56 57 50 54 4C                 // ...PCHVWPTL

                        Return (
    3635: A4                                               // .

And (PR2, 0x0400))
                    }
                }


    3636: 7B 50 52 32 5F 0B 00 04 00                       // {PR2_....

                If (
    363F: A0 44 09 92                                      // .D..

LGreaterEqual (Arg0, XSPA))
                {
                    Subtract (Arg0, XSPA, Local0)

    3643: 95 68 58 53 50 41 74 68 58 53 50 41 60           // .hXSPAthXSPA`

                    Switch (Local0)
                    {

    3650: A2 43 08 01 70 60 5F 54 5F 32                    // .C..p`_T_2

                        Case (Zero)
                        {

    365A: A0 0F 93 5F 54 5F 32 00                          // ..._T_2.

                            Return (
    3662: A4                                               // .

And (PR3, One))
                        }

    3663: 7B 50 52 33 5F 01 00                             // {PR3_..

                        Case
    366A: A1 48 06                                         // .H.

 (One)
                        {

    366D: A0 10 93 5F 54 5F 32 01                          // ..._T_2.

                            Return (
    3675: A4                                               // .

And (PR3, 0x02))
                        }

    3676: 7B 50 52 33 5F 0A 02 00                          // {PR3_...

                        Case
    367E: A1 44 05                                         // .D.

 (0x02)
                        {

    3681: A0 11 93 5F 54 5F 32 0A 02                       // ..._T_2..

                            Return (
    368A: A4                                               // .

And (PR3, 0x04))
                        }

    368B: 7B 50 52 33 5F 0A 04 00                          // {PR3_...

                        Case
    3693: A1 3F                                            // .?

 (0x03)
                        {

    3695: A0 11 93 5F 54 5F 32 0A 03                       // ..._T_2..

                            Return (
    369E: A4                                               // .

And (PR3, 0x08))
                        }

    369F: 7B 50 52 33 5F 0A 08 00                          // {PR3_...

                        Case
    36A7: A1 2B                                            // .+

 (0x04)
                        {

    36A9: A0 11 93 5F 54 5F 32 0A 04                       // ..._T_2..

                            Return (
    36B2: A4                                               // .

And (PR3, 0x10))
                        }

    36B3: 7B 50 52 33 5F 0A 10 00                          // {PR3_...

                        Case
    36BB: A1 17                                            // ..

 (0x05)
                        {

    36BD: A0 11 93 5F 54 5F 32 0A 05                       // ..._T_2..

                            Return (
    36C6: A4                                               // .

And (PR3, 0x20))
                        }

    36C7: 7B 50 52 33 5F 0A 20 00                          // {PR3_. .

                        Default
                        {

    36CF: A1 03                                            // ..

                            Return (Zero)
                        }


    36D1: A4 00                                            // ..

                    }
                }


    36D3: A5                                               // .

                Return (Zero)
            }


    36D4: A4 00                                            // ..

            Name (XRST, Zero)

    36D6: 08 58 52 53 54 00                                // .XRST.

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {

    36DC: 14 4B 2E 5F 50 53 30 08                          // .K._PS0.

                If (LEqual (DVID, 0xFFFF))
                {

    36E4: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (MEMB, Local2)
                Store (PDBM, Local1)
                And (PDBM, 0xFFFFFFFFFFFFFFF9, PDBM) /* \_SB_.PCI0.XHC_.PDBM */
                Store (D0D3, Local3)
                Store (Zero, D0D3) /* \_SB_.PCI0.XHC_.D0D3 */
                Store (XWMB, MEMB) /* \_SB_.PCI0.XHC_.MEMB */
                Or (Local1, 0x02, PDBM) /* \_SB_.PCI0.XHC_.PDBM */

    36EE: A4 00 70 4D 45 4D 42 62 70 50 44 42 4D 61 7B 50  // ..pMEMBbpPDBMa{P
    36FE: 44 42 4D 0E F9 FF FF FF FF FF FF FF 50 44 42 4D  // DBM.........PDBM
    370E: 70 44 30 44 33 63 70 00 44 30 44 33 70 58 57 4D  // pD0D3cp.D0D3pXWM
    371E: 42 4D 45 4D 42 7D 61 0A 02 50 44 42 4D           // BMEMB}a..PDBM

                OperationRegion (MCA1, SystemMemory, XWMB, 0x9000)

    372B: 5B 80 4D 43 41 31 00 58 57 4D 42 0B 00 90        // [.MCA1.XWMB...

                Field (MCA1, DWordAcc, Lock, Preserve)
                {
                    Offset (0x80E0), 
                        ,   15, 
                    AX15,   1, 
                    Offset (0x8154), 
                        ,   31, 
                    CLK2,   1, 
                    Offset (0x816C), 
                        ,   2, 
                    CLK0,   1, 
                        ,   11, 
                    CLK1,   1
                }


    3739: 5B 81 2C 4D 43 41 31 13 00 80 70 40 00 0F 41 58  // [.,MCA1...p@..AX
    3749: 31 35 01 00 40 39 00 1F 43 4C 4B 32 01 00 40 0A  // 15..@9..CLK2..@.
    3759: 00 02 43 4C 4B 30 01 00 0B 43 4C 4B 31 01        // ..CLK0...CLK1.

                If (LEqual (PCHV (), LPTL))
                {
                    Store (Zero, MB13) /* \_SB_.PCI0.XHC_.MB13 */
                    Store (Zero, MB14) /* \_SB_.PCI0.XHC_.MB14 */
                    Store (Zero, CLK0) /* \_SB_.PCI0.XHC_._PS0.CLK0 */

    3767: A0 22 93 50 43 48 56 4C 50 54 4C 70 00 4D 42 31  // .".PCHVLPTLp.MB1
    3777: 33 70 00 4D 42 31 34 70 00 43 4C 4B 30           // 3p.MB14p.CLK0

                    Store (Zero, CLK1) /* \_SB_.PCI0.XHC_._PS0.CLK1 */
                }


    3784: 70 00 43 4C 4B 31                                // p.CLK1

                If (LEqual (PCHG, One))
                {

    378A: A0 0D 93 50 43 48 47 01                          // ...PCHG.

                    Store (One, CLK2) /* \_SB_.PCI0.XHC_._PS0.CLK2 */
                }


    3792: 70 01 43 4C 4B 32                                // p.CLK2

                If (LAnd (LEqual (PCHS, 0x02), 
    3798: A0 4F 1C 90 93 50 43 48 53 0A 02                 // .O...PCHS..

LEqual (PCHG, One)))
                {
                    Store (XWMB, Local3)
                    Add (Local3, 0x0510, Local3)

    37A3: 93 50 43 48 47 01 70 58 57 4D 42 63 72 63 0B 10  // .PCHG.pXWMBcrc..
    37B3: 05 63                                            // .c

                    OperationRegion (PSCA, SystemMemory, Local3, 0x40)

    37B5: 5B 80 50 53 43 41 00 63 0A 40                    // [.PSCA.c.@

                    Field (PSCA, DWordAcc, Lock, Preserve)
                    {
                        PSC1,   32, 
                        Offset (0x10), 
                        PSC2,   32, 
                        Offset (0x20), 
                        PSC3,   32, 
                        Offset (0x30), 
                        PSC4,   32
                    }


    37BF: 5B 81 23 50 53 43 41 13 50 53 43 31 20 00 40 06  // [.#PSCA.PSC1 .@.
    37CF: 50 53 43 32 20 00 40 06 50 53 43 33 20 00 40 06  // PSC2 .@.PSC3 .@.
    37DF: 50 53 43 34 20                                   // PSC4 

                    While (LOr (LOr (LEqual (And (PSC1, 0x03F8), 0x02E0), 
    37E4: A2 3C 91 91 93 7B 50 53 43 31 0B F8 03 00 0B E0  // .<...{PSC1......
    37F4: 02                                               // .

LEqual (And (PSC2, 
                        0x03F8), 0x02E0)), 
    37F5: 93 7B 50 53 43 32 0B F8 03 00 0B E0 02           // .{PSC2.......

LOr (LEqual (And (PSC3, 0x03F8), 0x02E0), 
    3802: 91 93 7B 50 53 43 33 0B F8 03 00 0B E0 02        // ..{PSC3.......

LEqual (And (PSC4, 
                        0x03F8), 0x02E0))))
                    {

    3810: 93 7B 50 53 43 34 0B F8 03 00 0B E0 02           // .{PSC4.......

                        Stall (0x0A)
                    }

                    Store (Zero, Local4)
                    And (PSC1, 0xFFFFFFFFFFFFFFFD, Local0)

    381D: 5B 21 0A 0A 70 00 64 7B 50 53 43 31 0E FD FF FF  // [!..p.d{PSC1....
    382D: FF FF FF FF FF 60                                // .....`

                    If (LEqual (And (Local0, 0x000203F9), 0x02A0))
                    {
                        Or (Local0, 0x80000000, PSC1) /* \_SB_.PCI0.XHC_._PS0.PSC1 */

    3833: A0 1C 93 7B 60 0C F9 03 02 00 00 0B A0 02 7D 60  // ...{`.........}`
    3843: 0C 00 00 00 80 50 53 43 31                       // .....PSC1

                        Or (Local4, One, Local4)
                    }

                    And (PSC2, 0xFFFFFFFFFFFFFFFD, Local0)

    384C: 7D 64 01 64 7B 50 53 43 32 0E FD FF FF FF FF FF  // }d.d{PSC2.......
    385C: FF FF 60                                         // ..`

                    If (LEqual (And (Local0, 0x000203F9), 0x02A0))
                    {
                        Or (Local0, 0x80000000, PSC2) /* \_SB_.PCI0.XHC_._PS0.PSC2 */

    385F: A0 1D 93 7B 60 0C F9 03 02 00 00 0B A0 02 7D 60  // ...{`.........}`
    386F: 0C 00 00 00 80 50 53 43 32                       // .....PSC2

                        Or (Local4, 0x02, Local4)
                    }

                    And (PSC3, 0xFFFFFFFFFFFFFFFD, Local0)

    3878: 7D 64 0A 02 64 7B 50 53 43 33 0E FD FF FF FF FF  // }d..d{PSC3......
    3888: FF FF FF 60                                      // ...`

                    If (LEqual (And (Local0, 0x000203F9), 0x02A0))
                    {
                        Or (Local0, 0x80000000, PSC3) /* \_SB_.PCI0.XHC_._PS0.PSC3 */

    388C: A0 1D 93 7B 60 0C F9 03 02 00 00 0B A0 02 7D 60  // ...{`.........}`
    389C: 0C 00 00 00 80 50 53 43 33                       // .....PSC3

                        Or (Local4, 0x04, Local4)
                    }

                    And (PSC4, 0xFFFFFFFFFFFFFFFD, Local0)

    38A5: 7D 64 0A 04 64 7B 50 53 43 34 0E FD FF FF FF FF  // }d..d{PSC4......
    38B5: FF FF FF 60                                      // ...`

                    If (LEqual (And (Local0, 0x000203F9), 0x02A0))
                    {
                        Or (Local0, 0x80000000, PSC4) /* \_SB_.PCI0.XHC_._PS0.PSC4 */

    38B9: A0 1D 93 7B 60 0C F9 03 02 00 00 0B A0 02 7D 60  // ...{`.........}`
    38C9: 0C 00 00 00 80 50 53 43 34                       // .....PSC4

                        Or (Local4, 0x08, Local4)
                    }


    38D2: 7D 64 0A 08 64                                   // }d..d

                    If (Local4)
                    {
                        Sleep (0x65)

    38D7: A0 4A 08 64 5B 22 0A 65                          // .J.d[".e

                        If (And (Local4, One))
                        {
                            And (PSC1, 0xFFFFFFFFFFFFFFFD, Local0)

    38DF: A0 1F 7B 64 01 00 7B 50 53 43 31 0E FD FF FF FF  // ..{d..{PSC1.....
    38EF: FF FF FF FF 60                                   // ....`

                            Or (Local0, 0x00FE0000, PSC1) /* \_SB_.PCI0.XHC_._PS0.PSC1 */
                        }


    38F4: 7D 60 0C 00 00 FE 00 50 53 43 31                 // }`.....PSC1

                        If (And (Local4, 0x02))
                        {
                            And (PSC2, 0xFFFFFFFFFFFFFFFD, Local0)

    38FF: A0 20 7B 64 0A 02 00 7B 50 53 43 32 0E FD FF FF  // . {d...{PSC2....
    390F: FF FF FF FF FF 60                                // .....`

                            Or (Local0, 0x00FE0000, PSC2) /* \_SB_.PCI0.XHC_._PS0.PSC2 */
                        }


    3915: 7D 60 0C 00 00 FE 00 50 53 43 32                 // }`.....PSC2

                        If (And (Local4, 0x04))
                        {
                            And (PSC3, 0xFFFFFFFFFFFFFFFD, Local0)

    3920: A0 20 7B 64 0A 04 00 7B 50 53 43 33 0E FD FF FF  // . {d...{PSC3....
    3930: FF FF FF FF FF 60                                // .....`

                            Or (Local0, 0x00FE0000, PSC3) /* \_SB_.PCI0.XHC_._PS0.PSC3 */
                        }


    3936: 7D 60 0C 00 00 FE 00 50 53 43 33                 // }`.....PSC3

                        If (And (Local4, 0x08))
                        {
                            And (PSC4, 0xFFFFFFFFFFFFFFFD, Local0)

    3941: A0 20 7B 64 0A 08 00 7B 50 53 43 34 0E FD FF FF  // . {d...{PSC4....
    3951: FF FF FF FF FF 60                                // .....`

                            Or (Local0, 0x00FE0000, PSC4) /* \_SB_.PCI0.XHC_._PS0.PSC4 */
                        }
                    }


    3957: 7D 60 0C 00 00 FE 00 50 53 43 34                 // }`.....PSC4

                    Store (One, AX15) /* \_SB_.PCI0.XHC_._PS0.AX15 */
                }


    3962: 70 01 41 58 31 35                                // p.AX15

                If (LOr (LEqual (PCHG, One), 
    3968: A0 25 91 93 50 43 48 47 01                       // .%..PCHG.

LAnd (LEqual (PCHV (), WPTL), 
    3971: 90 93 50 43 48 56 57 50 54 4C                    // ..PCHVWPTL

LEqual (PCHP, 0x41))))
                {
                    Store (Zero, SWAI) /* \_SB_.PCI0.XHC_.SWAI */

    397B: 93 50 43 48 50 0A 41 70 00 53 57 41 49           // .PCHP.Ap.SWAI

                    Store (Zero, SAIP) /* \_SB_.PCI0.XHC_.SAIP */
                }


    3988: 70 00 53 41 49 50                                // p.SAIP

                If (CondRefOf (\_SB.PCI0.XHC.PS0X))
                {
                    PS0X ()
                }

                And (PDBM, 0xFFFFFFFFFFFFFFFD, PDBM) /* \_SB_.PCI0.XHC_.PDBM */
                Store (Local2, MEMB) /* \_SB_.PCI0.XHC_.MEMB */

    398E: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
    399E: 48 43 5F 50 53 30 58 00 50 53 30 58 7B 50 44 42  // HC_PS0X.PS0X{PDB
    39AE: 4D 0E FD FF FF FF FF FF FF FF 50 44 42 4D 70 62  // M.........PDBMpb
    39BE: 4D 45 4D 42                                      // MEMB

                Store (Local1, PDBM) /* \_SB_.PCI0.XHC_.PDBM */
            }


    39C2: 70 61 50 44 42 4D                                // paPDBM

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                Store (PDBM, Local1)
                Store (MEMB, Local2)
                And (PDBM, 0xFFFFFFFFFFFFFFF9, PDBM) /* \_SB_.PCI0.XHC_.PDBM */
                Store (Zero, D0D3) /* \_SB_.PCI0.XHC_.D0D3 */
                Store (XWMB, MEMB) /* \_SB_.PCI0.XHC_.MEMB */
                Or (Local1, 0x02, PDBM) /* \_SB_.PCI0.XHC_.PDBM */
                Store (One, PMES) /* \_SB_.PCI0.XHC_.PMES */
                Store (One, PMEE) /* \_SB_.PCI0.XHC_.PMEE */

    39C8: 14 42 13 5F 50 53 33 08 70 50 44 42 4D 61 70 4D  // .B._PS3.pPDBMapM
    39D8: 45 4D 42 62 7B 50 44 42 4D 0E F9 FF FF FF FF FF  // EMBb{PDBM.......
    39E8: FF FF 50 44 42 4D 70 00 44 30 44 33 70 58 57 4D  // ..PDBMp.D0D3pXWM
    39F8: 42 4D 45 4D 42 7D 61 0A 02 50 44 42 4D 70 01 50  // BMEMB}a..PDBMp.P
    3A08: 4D 45 53 70 01 50 4D 45 45                       // MESp.PMEE

                OperationRegion (MCA1, SystemMemory, XWMB, 0x9000)

    3A11: 5B 80 4D 43 41 31 00 58 57 4D 42 0B 00 90        // [.MCA1.XWMB...

                Field (MCA1, DWordAcc, Lock, Preserve)
                {
                    Offset (0x80E0), 
                        ,   15, 
                    AX15,   1, 
                    Offset (0x8154), 
                        ,   31, 
                    CLK2,   1, 
                    Offset (0x816C), 
                        ,   2, 
                    CLK0,   1, 
                        ,   11, 
                    CLK1,   1
                }


    3A1F: 5B 81 2C 4D 43 41 31 13 00 80 70 40 00 0F 41 58  // [.,MCA1...p@..AX
    3A2F: 31 35 01 00 40 39 00 1F 43 4C 4B 32 01 00 40 0A  // 15..@9..CLK2..@.
    3A3F: 00 02 43 4C 4B 30 01 00 0B 43 4C 4B 31 01        // ..CLK0...CLK1.

                If (LEqual (PCHV (), LPTL))
                {
                    Store (One, MB13) /* \_SB_.PCI0.XHC_.MB13 */
                    Store (One, MB14) /* \_SB_.PCI0.XHC_.MB14 */
                    Store (One, CLK0) /* \_SB_.PCI0.XHC_._PS3.CLK0 */

    3A4D: A0 22 93 50 43 48 56 4C 50 54 4C 70 01 4D 42 31  // .".PCHVLPTLp.MB1
    3A5D: 33 70 01 4D 42 31 34 70 01 43 4C 4B 30           // 3p.MB14p.CLK0

                    Store (One, CLK1) /* \_SB_.PCI0.XHC_._PS3.CLK1 */
                }


    3A6A: 70 01 43 4C 4B 31                                // p.CLK1

                If (LEqual (PCHG, One))
                {

    3A70: A0 0D 93 50 43 48 47 01                          // ...PCHG.

                    Store (Zero, CLK2) /* \_SB_.PCI0.XHC_._PS3.CLK2 */
                }


    3A78: 70 00 43 4C 4B 32                                // p.CLK2

                If (LAnd (LEqual (PCHS, 0x02), 
    3A7E: A0 15 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (PCHG, One)))
                {

    3A88: 93 50 43 48 47 01                                // .PCHG.

                    Store (Zero, AX15) /* \_SB_.PCI0.XHC_._PS3.AX15 */
                }


    3A8E: 70 00 41 58 31 35                                // p.AX15

                If (LOr (LEqual (PCHG, One), 
    3A94: A0 25 91 93 50 43 48 47 01                       // .%..PCHG.

LAnd (LEqual (PCHV (), WPTL), 
    3A9D: 90 93 50 43 48 56 57 50 54 4C                    // ..PCHVWPTL

LEqual (PCHP, 0x41))))
                {
                    Store (One, SWAI) /* \_SB_.PCI0.XHC_.SWAI */

    3AA7: 93 50 43 48 50 0A 41 70 01 53 57 41 49           // .PCHP.Ap.SWAI

                    Store (One, SAIP) /* \_SB_.PCI0.XHC_.SAIP */
                }


    3AB4: 70 01 53 41 49 50                                // p.SAIP

                If (CondRefOf (\_SB.PCI0.XHC.PS3X))
                {
                    PS3X ()
                }

                And (PDBM, 0xFFFFFFFFFFFFFFFD, PDBM) /* \_SB_.PCI0.XHC_.PDBM */
                Store (0x03, D0D3) /* \_SB_.PCI0.XHC_.D0D3 */
                Store (Local2, MEMB) /* \_SB_.PCI0.XHC_.MEMB */

    3ABA: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
    3ACA: 48 43 5F 50 53 33 58 00 50 53 33 58 7B 50 44 42  // HC_PS3X.PS3X{PDB
    3ADA: 4D 0E FD FF FF FF FF FF FF FF 50 44 42 4D 70 0A  // M.........PDBMp.
    3AEA: 03 44 30 44 33 70 62 4D 45 4D 42                 // .D0D3pbMEMB

                Store (Local1, PDBM) /* \_SB_.PCI0.XHC_.PDBM */
            }


    3AF5: 70 61 50 44 42 4D                                // paPDBM

            Method (CUID, 1, Serialized)
            {

    3AFB: 14 22 43 55 49 44 09                             // ."CUID.

                If (LEqual (Arg0, 
    3B02: A0 19 93 68                                      // ...h

ToUUID ("7c9512a9-1705-4cb4-af7d-506a2423ab71")))
                {

    3B06: 11 13 0A 10 A9 12 95 7C 05 17 B4 4C AF 7D 50 6A  // .......|...L.}Pj
    3B16: 24 23 AB 71                                      // $#.q

                    Return (One)
                }


    3B1A: A4 01                                            // ..

                Return (Zero)
            }


    3B1C: A4 00                                            // ..

            Method (POSC, 3, Serialized)
            {

    3B1E: 14 4C 07 50 4F 53 43 0B                          // .L.POSC.

                CreateDWordField (Arg2, Zero, CDW1)

    3B26: 8A 6A 00 43 44 57 31                             // .j.CDW1

                CreateDWordField (Arg2, 0x08, CDW3)

    3B2D: 8A 6A 0A 08 43 44 57 33                          // .j..CDW3

                If (LEqual (XHCI, Zero))
                {

    3B35: A0 12 93 58 48 43 49 00                          // ...XHCI.

                    Or (CDW1, 0x02, CDW1) /* \_SB_.PCI0.XHC_.POSC.CDW1 */
                }


    3B3D: 7D 43 44 57 31 0A 02 43 44 57 31                 // }CDW1..CDW1

                If (LNot (
    3B48: A0 40 05 92                                      // .@..

And (CDW1, One)))
                {

    3B4C: 7B 43 44 57 31 01 00                             // {CDW1..

                    If (And (CDW3, One))
                    {
                        ESEL ()
                    }

    3B53: A0 0C 7B 43 44 57 33 01 00 45 53 45 4C           // ..{CDW3..ESEL

                    ElseIf
    3B60: A1 38                                            // .8

 (LEqual (PCHS, One))
                    {

    3B62: A0 1D 93 50 43 48 53 01                          // ...PCHS.

                        If (LGreater (Arg0, One))
                        {
                            XSEL ()
                        }

    3B6A: A0 08 94 68 01 58 53 45 4C                       // ...h.XSEL

                        Else
                        {

    3B73: A1 0C                                            // ..

                            Or (CDW1, 0x0A, CDW1) /* \_SB_.PCI0.XHC_.POSC.CDW1 */
                        }
                    }

    3B75: 7D 43 44 57 31 0A 0A 43 44 57 31                 // }CDW1..CDW1

                    ElseIf
    3B80: A1 18                                            // ..

 (LGreater (Arg0, 0x02))
                    {
                        XSEL ()
                    }

    3B82: A0 09 94 68 0A 02 58 53 45 4C                    // ...h..XSEL

                    Else
                    {

    3B8C: A1 0C                                            // ..

                        Or (CDW1, 0x0A, CDW1) /* \_SB_.PCI0.XHC_.POSC.CDW1 */
                    }
                }


    3B8E: 7D 43 44 57 31 0A 0A 43 44 57 31                 // }CDW1..CDW1

                Return (Arg2)
            }


    3B99: A4 6A                                            // .j

            Method (XSEL, 0, Serialized)
            {

    3B9B: 14 4A 06 58 53 45 4C 08                          // .J.XSEL.

                If (LOr (LEqual (XHCI, 0x02), 
    3BA3: A0 42 06 91 93 58 48 43 49 0A 02                 // .B...XHCI..

LEqual (XHCI, 0x03)))
                {
                    Store (One, ^^LPCB.XUSB) /* \_SB_.PCI0.LPCB.XUSB */
                    Store (One, XRST) /* \_SB_.PCI0.XHC_.XRST */
                    Store (Zero, Local0)
                    And (PR3, 0xFFFFFFC0, Local0)
                    Or (Local0, PR3M, PR3) /* \_SB_.PCI0.XHC_.PR3_ */
                    Store (Zero, Local0)
                    And (PR2, 0xFFFF8000, Local0)
                    Or (Local0, PR2M, PR2) /* \_SB_.PCI0.XHC_.PR2_ */

    3BAE: 93 58 48 43 49 0A 03 70 01 5E 5E 2E 4C 50 43 42  // .XHCI..p.^^.LPCB
    3BBE: 58 55 53 42 70 01 58 52 53 54 70 00 60 7B 50 52  // XUSBp.XRSTp.`{PR
    3BCE: 33 5F 0C C0 FF FF FF 60 7D 60 50 52 33 4D 50 52  // 3_.....`}`PR3MPR
    3BDE: 33 5F 70 00 60 7B 50 52 32 5F 0C 00 80 FF FF 60  // 3_p.`{PR2_.....`
    3BEE: 7D 60 50 52 32 4D 50 52 32 5F                    // }`PR2MPR2_

                    And (PR3, 0xFFFFFFF3, PR3) /* \_SB_.PCI0.XHC_.PR3_ */
                }
            }


    3BF8: 7B 50 52 33 5F 0C F3 FF FF FF 50 52 33 5F        // {PR3_.....PR3_

            Method (ESEL, 0, Serialized)
            {

    3C06: 14 47 04 45 53 45 4C 08                          // .G.ESEL.

                If (LOr (LEqual (XHCI, 0x02), 
    3C0E: A0 3F 91 93 58 48 43 49 0A 02                    // .?..XHCI..

LEqual (XHCI, 0x03)))
                {
                    And (PR3, 0xFFFFFFC0, PR3) /* \_SB_.PCI0.XHC_.PR3_ */
                    And (PR2, 0xFFFF8000, PR2) /* \_SB_.PCI0.XHC_.PR2_ */
                    Store (Zero, ^^LPCB.XUSB) /* \_SB_.PCI0.LPCB.XUSB */

    3C18: 93 58 48 43 49 0A 03 7B 50 52 33 5F 0C C0 FF FF  // .XHCI..{PR3_....
    3C28: FF 50 52 33 5F 7B 50 52 32 5F 0C 00 80 FF FF 50  // .PR3_{PR2_.....P
    3C38: 52 32 5F 70 00 5E 5E 2E 4C 50 43 42 58 55 53 42  // R2_p.^^.LPCBXUSB

                    Store (Zero, XRST) /* \_SB_.PCI0.XHC_.XRST */
                }
            }


    3C48: 70 00 58 52 53 54                                // p.XRST

            Method (XWAK, 0, Serialized)
            {

    3C4E: 14 20 58 57 41 4B 08                             // . XWAK.

                If (LOr (LEqual (^^LPCB.XUSB, One), 
    3C55: A0 19 91 93 5E 5E 2E 4C 50 43 42 58 55 53 42 01  // ....^^.LPCBXUSB.

LEqual (XRST, One)))
                {
                    XSEL ()
                }
            }


    3C65: 93 58 52 53 54 01 58 53 45 4C                    // .XRST.XSEL

            Device (RHUB)
            {

    3C6F: 5B 82 40 15 52 48 55 42                          // [.@.RHUB

                Name (_ADR, Zero)  // _ADR: Address

    3C77: 08 5F 41 44 52 00                                // ._ADR.

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {

    3C7D: 14 32 5F 50 53 30 08                             // .2_PS0.

                    If (LEqual (DVID, 0xFFFF))
                    {

    3C84: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                        Return (Zero)
                    }


    3C8E: A4 00                                            // ..

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS0X))
                    {
                        PS0X ()
                    }
                }


    3C90: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
    3CA0: 48 43 5F 52 48 55 42 50 53 30 58 00 50 53 30 58  // HC_RHUBPS0X.PS0X

                Method (_PS2, 0, Serialized)  // _PS2: Power State 2
                {

    3CB0: 14 26 5F 50 53 32 08                             // .&_PS2.

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS2X))
                    {
                        PS2X ()
                    }
                }


    3CB7: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
    3CC7: 48 43 5F 52 48 55 42 50 53 32 58 00 50 53 32 58  // HC_RHUBPS2X.PS2X

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {

    3CD7: 14 26 5F 50 53 33 08                             // .&_PS3.

                    If (CondRefOf (\_SB.PCI0.XHC.RHUB.PS3X))
                    {
                        PS3X ()
                    }
                }


    3CDE: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
    3CEE: 48 43 5F 52 48 55 42 50 53 33 58 00 50 53 33 58  // HC_RHUBPS3X.PS3X

                Device (HS01)
                {

    3CFE: 5B 82 1F 48 53 30 31                             // [..HS01

                    Name (_ADR, One)  // _ADR: Address

    3D05: 08 5F 41 44 52 01                                // ._ADR.

                    Method (_S3D, 0, NotSerialized)  // _S3D: S3 Device State
                    {

    3D0B: 14 09 5F 53 33 44 00                             // .._S3D.

                        Return (0x03)
                    }


    3D12: A4 0A 03                                         // ...

                    Method (_S4D, 0, NotSerialized)  // _S4D: S4 Device State
                    {

    3D15: 14 09 5F 53 34 44 00                             // .._S4D.

                        Return (0x03)
                    }
                }


    3D1C: A4 0A 03                                         // ...

                Device (HS02)
                {

    3D1F: 5B 82 0C 48 53 30 32                             // [..HS02

                    Name (_ADR, 0x02)  // _ADR: Address
                }


    3D26: 08 5F 41 44 52 0A 02                             // ._ADR..

                Device (HS03)
                {

    3D2D: 5B 82 0C 48 53 30 33                             // [..HS03

                    Name (_ADR, 0x03)  // _ADR: Address
                }


    3D34: 08 5F 41 44 52 0A 03                             // ._ADR..

                Device (HS04)
                {

    3D3B: 5B 82 0C 48 53 30 34                             // [..HS04

                    Name (_ADR, 0x04)  // _ADR: Address
                }


    3D42: 08 5F 41 44 52 0A 04                             // ._ADR..

                Device (HS05)
                {

    3D49: 5B 82 0C 48 53 30 35                             // [..HS05

                    Name (_ADR, 0x05)  // _ADR: Address
                }


    3D50: 08 5F 41 44 52 0A 05                             // ._ADR..

                Device (HS06)
                {

    3D57: 5B 82 0C 48 53 30 36                             // [..HS06

                    Name (_ADR, 0x06)  // _ADR: Address
                }


    3D5E: 08 5F 41 44 52 0A 06                             // ._ADR..

                Device (HS07)
                {

    3D65: 5B 82 0C 48 53 30 37                             // [..HS07

                    Name (_ADR, 0x07)  // _ADR: Address
                }


    3D6C: 08 5F 41 44 52 0A 07                             // ._ADR..

                Device (HS08)
                {

    3D73: 5B 82 0C 48 53 30 38                             // [..HS08

                    Name (_ADR, 0x08)  // _ADR: Address
                }


    3D7A: 08 5F 41 44 52 0A 08                             // ._ADR..

                Device (SSP1)
                {

    3D81: 5B 82 28 53 53 50 31                             // [.(SSP1

                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {

    3D88: 14 0E 5F 41 44 52 00                             // .._ADR.

                        Return (
    3D8F: A4                                               // .

Add (XSPA, Zero))
                    }


    3D90: 72 58 53 50 41 00 00                             // rXSPA..

                    Method (_S3D, 0, NotSerialized)  // _S3D: S3 Device State
                    {

    3D97: 14 09 5F 53 33 44 00                             // .._S3D.

                        Return (0x03)
                    }


    3D9E: A4 0A 03                                         // ...

                    Method (_S4D, 0, NotSerialized)  // _S4D: S4 Device State
                    {

    3DA1: 14 09 5F 53 34 44 00                             // .._S4D.

                        Return (0x03)
                    }
                }


    3DA8: A4 0A 03                                         // ...

                Device (SSP2)
                {

    3DAB: 5B 82 14 53 53 50 32                             // [..SSP2

                    Method (_ADR, 0, NotSerialized)  // _ADR: Address
                    {

    3DB2: 14 0E 5F 41 44 52 00                             // .._ADR.

                        Return (
    3DB9: A4                                               // .

Add (XSPA, One))
                    }
                }
            }
        }
    }


    3DBA: 72 58 53 50 41 01 00                             // rXSPA..

    If (
    3DC1: A0 39 92                                         // .9.

LGreaterEqual (XHPC, 0x0A))
    {

    3DC4: 95 58 48 50 43 0A 0A                             // .XHPC..

        Scope (_SB.PCI0.XHC.RHUB)
        {

    3DCB: 10 2F 2F 04 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    3DDB: 52 48 55 42                                      // RHUB

            Device (HS09)
            {

    3DDF: 5B 82 0C 48 53 30 39                             // [..HS09

                Name (_ADR, 0x09)  // _ADR: Address
            }


    3DE6: 08 5F 41 44 52 0A 09                             // ._ADR..

            Device (HS10)
            {

    3DED: 5B 82 0C 48 53 31 30                             // [..HS10

                Name (_ADR, 0x0A)  // _ADR: Address
            }
        }
    }


    3DF4: 08 5F 41 44 52 0A 0A                             // ._ADR..

    If (
    3DFB: A0 39 92                                         // .9.

LGreaterEqual (XHPC, 0x0C))
    {

    3DFE: 95 58 48 50 43 0A 0C                             // .XHPC..

        Scope (_SB.PCI0.XHC.RHUB)
        {

    3E05: 10 2F 2F 04 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    3E15: 52 48 55 42                                      // RHUB

            Device (HS11)
            {

    3E19: 5B 82 0C 48 53 31 31                             // [..HS11

                Name (_ADR, 0x0B)  // _ADR: Address
            }


    3E20: 08 5F 41 44 52 0A 0B                             // ._ADR..

            Device (HS12)
            {

    3E27: 5B 82 0C 48 53 31 32                             // [..HS12

                Name (_ADR, 0x0C)  // _ADR: Address
            }
        }
    }


    3E2E: 08 5F 41 44 52 0A 0C                             // ._ADR..

    If (
    3E35: A0 39 92                                         // .9.

LGreaterEqual (XHPC, 0x0E))
    {

    3E38: 95 58 48 50 43 0A 0E                             // .XHPC..

        Scope (_SB.PCI0.XHC.RHUB)
        {

    3E3F: 10 2F 2F 04 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    3E4F: 52 48 55 42                                      // RHUB

            Device (HS13)
            {

    3E53: 5B 82 0C 48 53 31 33                             // [..HS13

                Name (_ADR, 0x0D)  // _ADR: Address
            }


    3E5A: 08 5F 41 44 52 0A 0D                             // ._ADR..

            Device (HS14)
            {

    3E61: 5B 82 0C 48 53 31 34                             // [..HS14

                Name (_ADR, 0x0E)  // _ADR: Address
            }
        }
    }


    3E68: 08 5F 41 44 52 0A 0E                             // ._ADR..

    If (
    3E6F: A0 32 92                                         // .2.

LGreaterEqual (XRPC, One))
    {

    3E72: 95 58 52 50 43 01                                // .XRPC.

        Scope (_SB.PCI0.XHC.RHUB)
        {

    3E78: 10 29 2F 04 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .)/._SB_PCI0XHC_
    3E88: 52 48 55 42                                      // RHUB

            Device (USBR)
            {

    3E8C: 5B 82 14 55 53 42 52                             // [..USBR

                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {

    3E93: 14 0E 5F 41 44 52 00                             // .._ADR.

                    Return (
    3E9A: A4                                               // .

Add (XHPC, One))
                }
            }
        }
    }


    3E9B: 72 58 48 50 43 01 00                             // rXHPC..

    If (
    3EA2: A0 4D 04 92                                      // .M..

LGreaterEqual (XSPC, 0x04))
    {

    3EA6: 95 58 53 50 43 0A 04                             // .XSPC..

        Scope (_SB.PCI0.XHC.RHUB)
        {

    3EAD: 10 42 04 2F 04 5F 53 42 5F 50 43 49 30 58 48 43  // .B./._SB_PCI0XHC
    3EBD: 5F 52 48 55 42                                   // _RHUB

            Device (SSP3)
            {

    3EC2: 5B 82 15 53 53 50 33                             // [..SSP3

                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {

    3EC9: 14 0F 5F 41 44 52 00                             // .._ADR.

                    Return (
    3ED0: A4                                               // .

Add (XSPA, 0x02))
                }
            }


    3ED1: 72 58 53 50 41 0A 02 00                          // rXSPA...

            Device (SSP4)
            {

    3ED9: 5B 82 15 53 53 50 34                             // [..SSP4

                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {

    3EE0: 14 0F 5F 41 44 52 00                             // .._ADR.

                    Return (
    3EE7: A4                                               // .

Add (XSPA, 0x03))
                }
            }
        }
    }


    3EE8: 72 58 53 50 41 0A 03 00                          // rXSPA...

    If (
    3EF0: A0 4D 04 92                                      // .M..

LGreaterEqual (XSPC, 0x06))
    {

    3EF4: 95 58 53 50 43 0A 06                             // .XSPC..

        Scope (_SB.PCI0.XHC.RHUB)
        {

    3EFB: 10 42 04 2F 04 5F 53 42 5F 50 43 49 30 58 48 43  // .B./._SB_PCI0XHC
    3F0B: 5F 52 48 55 42                                   // _RHUB

            Device (SSP5)
            {

    3F10: 5B 82 15 53 53 50 35                             // [..SSP5

                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {

    3F17: 14 0F 5F 41 44 52 00                             // .._ADR.

                    Return (
    3F1E: A4                                               // .

Add (XSPA, 0x04))
                }
            }


    3F1F: 72 58 53 50 41 0A 04 00                          // rXSPA...

            Device (SSP6)
            {

    3F27: 5B 82 15 53 53 50 36                             // [..SSP6

                Method (_ADR, 0, NotSerialized)  // _ADR: Address
                {

    3F2E: 14 0F 5F 41 44 52 00                             // .._ADR.

                    Return (
    3F35: A4                                               // .

Add (XSPA, 0x05))
                }
            }
        }
    }


    3F36: 72 58 53 50 41 0A 05 00                          // rXSPA...

    Scope (_SB.PCI0)
    {

    3F3E: 10 41 4B 2E 5F 53 42 5F 50 43 49 30              // .AK._SB_PCI0

        Method (LPD3, 2, Serialized)
        {

    3F4A: 14 3F 4C 50 44 33 0A                             // .?LPD3.

            If (LOr (LEqual (Arg1, 0x03), 
    3F51: A0 0C 91 93 69 0A 03                             // ....i..

LEqual (Arg1, 0x02)))
            {

    3F58: 93 69 0A 02                                      // .i..

                Return (Zero)
            }


    3F5C: A4 00                                            // ..

            OperationRegion (ICB1, SystemMemory, Add (Arg0, 0x84), 0x04)

    3F5E: 5B 80 49 43 42 31 00 72 68 0A 84 00 0A 04        // [.ICB1.rh.....

            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            Or (TEMP, 0x03, TEMP) /* \_SB_.PCI0.LPD3.TEMP */

    3F6C: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7D 54 45  // [..ICB1.TEMP }TE
    3F7C: 4D 50 0A 03 54 45 4D 50                          // MP..TEMP

            Store (TEMP, Local0)
        }


    3F84: 70 54 45 4D 50 60                                // pTEMP`

        Method (LPD0, 2, Serialized)
        {

    3F8A: 14 3D 4C 50 44 30 0A                             // .=LPD0.

            If (LEqual (Arg1, 0x02))
            {

    3F91: A0 07 93 69 0A 02                                // ...i..

                Return (Zero)
            }


    3F97: A4 00                                            // ..

            OperationRegion (ICB1, SystemMemory, Add (Arg0, 0x84), 0x04)

    3F99: 5B 80 49 43 42 31 00 72 68 0A 84 00 0A 04        // [.ICB1.rh.....

            Field (ICB1, DWordAcc, NoLock, Preserve)
            {
                TEMP,   32
            }

            And (TEMP, 0xFFFFFFFC, TEMP) /* \_SB_.PCI0.LPD0.TEMP */

    3FA7: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7B 54 45  // [..ICB1.TEMP {TE
    3FB7: 4D 50 0C FC FF FF FF 54 45 4D 50                 // MP.....TEMP

            Store (TEMP, Local0)
        }


    3FC2: 70 54 45 4D 50 60                                // pTEMP`

        Method (MBUF, 2, Serialized)
        {

    3FC8: 14 45 04 4D 42 55 46 0A                          // .E.MBUF.

            Name (RBUF, 
    3FD0: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y10)
            })

    3FD5: 11 11 0A 0E 86 09 00 01 00 00 00 00 00 00 00 00  // ................
    3FE5: 79 00                                            // y.

            CreateDWordField (RBUF, \_SB.PCI0.MBUF._Y10._BAS, ADDR)  // _BAS: Base Address

    3FE7: 8A 52 42 55 46 0A 04 41 44 44 52                 // .RBUF..ADDR

            CreateDWordField (RBUF, \_SB.PCI0.MBUF._Y10._LEN, LENG)  // _LEN: Length
            Store (Arg0, ADDR) /* \_SB_.PCI0.MBUF.ADDR */
            Store (Arg1, LENG) /* \_SB_.PCI0.MBUF.LENG */

    3FF2: 8A 52 42 55 46 0A 08 4C 45 4E 47 70 68 41 44 44  // .RBUF..LENGphADD
    4002: 52 70 69 4C 45 4E 47                             // RpiLENG

            Return (RBUF) /* \_SB_.PCI0.MBUF.RBUF */
        }


    4009: A4 52 42 55 46                                   // .RBUF

        Method (LCRS, 3, Serialized)
        {

    400E: 14 46 06 4C 43 52 53 0B                          // .F.LCRS.

            Name (RBUF, 
    4016: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y11)
                Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, _Y12)
                {
                    0x00000014,
                }
            })

    401B: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 10 00 00  // ................
    402B: 89 06 00 0D 01 14 00 00 00 79 00                 // .........y.

            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y11._BAS, BVAL)  // _BAS: Base Address

    4036: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y11._LEN, BLEN)  // _LEN: Length

    4041: 8A 52 42 55 46 0A 08 42 4C 45 4E                 // .RBUF..BLEN

            CreateDWordField (RBUF, \_SB.PCI0.LCRS._Y12._INT, IRQN)  // _INT: Interrupts
            Store (Arg1, BVAL) /* \_SB_.PCI0.LCRS.BVAL */
            Store (Arg2, IRQN) /* \_SB_.PCI0.LCRS.IRQN */

    404C: 8A 52 42 55 46 0A 11 49 52 51 4E 70 69 42 56 41  // .RBUF..IRQNpiBVA
    405C: 4C 70 6A 49 52 51 4E                             // LpjIRQN

            If (LEqual (Arg0, 0x03))
            {

    4063: A0 0C 93 68 0A 03                                // ...h..

                Store (0x08, BLEN) /* \_SB_.PCI0.LCRS.BLEN */
            }


    4069: 70 0A 08 42 4C 45 4E                             // p..BLEN

            Return (RBUF) /* \_SB_.PCI0.LCRS.RBUF */
        }


    4070: A4 52 42 55 46                                   // .RBUF

        Method (LDMA, 2, Serialized)
        {

    4075: 14 41 08 4C 44 4D 41 0A                          // .A.LDMA.

            If (LEqual (^SDMA._STA (), Zero))
            {

    407D: A0 14 93 5E 2E 53 44 4D 41 5F 53 54 41 00        // ...^.SDMA_STA.

                Return (
    408B: A4                                               // .

Buffer (0x02)
                {
                     0x79, 0x00                                       // y.
                })
            }


    408C: 11 05 0A 02 79 00                                // ....y.

            Name (DBUF, 
    4092: 08 44 42 55 46                                   // .DBUF

ResourceTemplate ()
            {
                FixedDMA (0x0000, 0x0000, Width32bit, _Y13)
                FixedDMA (0x0000, 0x0000, Width32bit, _Y14)
            })

    4097: 11 11 0A 0E 55 00 00 00 00 02 55 00 00 00 00 02  // ....U.....U.....
    40A7: 79 00                                            // y.

            CreateWordField (DBUF, One, D1DM)

    40A9: 8B 44 42 55 46 01 44 31 44 4D                    // .DBUF.D1DM

            CreateWordField (DBUF, \_SB.PCI0.LDMA._Y13._TYP, D1TY)  // _TYP: Type

    40B3: 8B 44 42 55 46 0A 03 44 31 54 59                 // .DBUF..D1TY

            CreateWordField (DBUF, \_SB.PCI0.LDMA._Y14._DMA, D2DM)  // _DMA: Direct Memory Access

    40BE: 8B 44 42 55 46 0A 07 44 32 44 4D                 // .DBUF..D2DM

            CreateWordField (DBUF, \_SB.PCI0.LDMA._Y14._TYP, D2TY)  // _TYP: Type
            Store (Arg0, D1DM) /* \_SB_.PCI0.LDMA.D1DM */
            Store (Add (Arg0, One), D2DM) /* \_SB_.PCI0.LDMA.D2DM */
            Store (Arg1, D1TY) /* \_SB_.PCI0.LDMA.D1TY */
            Store (Add (Arg1, One), D2TY) /* \_SB_.PCI0.LDMA.D2TY */

    40C9: 8B 44 42 55 46 0A 09 44 32 54 59 70 68 44 31 44  // .DBUF..D2TYphD1D
    40D9: 4D 70 72 68 01 00 44 32 44 4D 70 69 44 31 54 59  // Mprh..D2DMpiD1TY
    40E9: 70 72 69 01 00 44 32 54 59                       // pri..D2TY

            Return (DBUF) /* \_SB_.PCI0.LDMA.DBUF */
        }


    40F2: A4 44 42 55 46                                   // .DBUF

        Method (PKG1, 1, Serialized)
        {

    40F7: 14 1D 50 4B 47 31 09                             // ..PKG1.

            Name (PKG, 
    40FE: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
            {
                Zero
            })
            Store (Arg0, 
    4103: 12 03 01 00 70 68                                // ....ph

Index (PKG, Zero))

    4109: 88 50 4B 47 5F 00 00                             // .PKG_..

            Return (PKG) /* \_SB_.PCI0.PKG1.PKG_ */
        }


    4110: A4 50 4B 47 5F                                   // .PKG_

        Method (PKG3, 3, Serialized)
        {

    4115: 14 32 50 4B 47 33 0B                             // .2PKG3.

            Name (PKG, 
    411C: 08 50 4B 47 5F                                   // .PKG_

Package (0x03)
            {
                Zero, 
                Zero, 
                Zero
            })
            Store (Arg0, 
    4121: 12 05 03 00 00 00 70 68                          // ......ph

Index (PKG, Zero))
            Store (Arg1, 
    4129: 88 50 4B 47 5F 00 00 70 69                       // .PKG_..pi

Index (PKG, One))
            Store (Arg2, 
    4132: 88 50 4B 47 5F 01 00 70 6A                       // .PKG_..pj

Index (PKG, 0x02))

    413B: 88 50 4B 47 5F 0A 02 00                          // .PKG_...

            Return (PKG) /* \_SB_.PCI0.PKG3.PKG_ */
        }


    4143: A4 50 4B 47 5F                                   // .PKG_

        Device (SIRC)
        {

    4148: 5B 82 41 1D 53 49 52 43                          // [.A.SIRC

            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID

    4150: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, 0x04)  // _UID: Unique ID

    415A: 08 5F 55 49 44 0A 04                             // ._UID..

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    4161: 14 1F 5F 53 54 41 00                             // .._STA.

                If (LLess (OSYS, 0x07DC))
                {

    4168: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                    Return (Zero)
                }


    4172: A4 00                                            // ..

                If (LEqual (PCHS, One))
                {

    4174: A0 09 93 50 43 48 53 01                          // ...PCHS.

                    Return (Zero)
                }


    417C: A4 00                                            // ..

                Return (0x0F)
            }


    417E: A4 0A 0F                                         // ...

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (
    4181: 14 49 19 5F 43 52 53 08 70                       // .I._CRS.p

Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }, Local0)

    418A: 11 05 0A 02 79 00 60                             // ....y.`

                If (LAnd (LEqual (SMD0, One), 
    4191: A0 1D 90 93 53 4D 44 30 01                       // ....SMD0.


    419A: 92                                               // .

LNotEqual (SB10, Zero)))
                {

    419B: 93 53 42 31 30 00                                // .SB10.

                    ConcatenateResTemplate (Local0, MBUF (SB10, 0x1000), Local0)
                }


    41A1: 84 60 4D 42 55 46 53 42 31 30 0B 00 10 60        // .`MBUFSB10...`

                If (LAnd (LEqual (SMD1, One), 
    41AF: A0 1D 90 93 53 4D 44 31 01                       // ....SMD1.


    41B8: 92                                               // .

LNotEqual (SB11, Zero)))
                {

    41B9: 93 53 42 31 31 00                                // .SB11.

                    ConcatenateResTemplate (Local0, MBUF (SB11, 0x1000), Local0)
                }


    41BF: 84 60 4D 42 55 46 53 42 31 31 0B 00 10 60        // .`MBUFSB11...`

                If (LAnd (LEqual (SMD2, One), 
    41CD: A0 1D 90 93 53 4D 44 32 01                       // ....SMD2.


    41D6: 92                                               // .

LNotEqual (SB12, Zero)))
                {

    41D7: 93 53 42 31 32 00                                // .SB12.

                    ConcatenateResTemplate (Local0, MBUF (SB12, 0x1000), Local0)
                }


    41DD: 84 60 4D 42 55 46 53 42 31 32 0B 00 10 60        // .`MBUFSB12...`

                If (LAnd (LEqual (SMD3, One), 
    41EB: A0 1D 90 93 53 4D 44 33 01                       // ....SMD3.


    41F4: 92                                               // .

LNotEqual (SB13, Zero)))
                {

    41F5: 93 53 42 31 33 00                                // .SB13.

                    ConcatenateResTemplate (Local0, MBUF (SB13, 0x1000), Local0)
                }


    41FB: 84 60 4D 42 55 46 53 42 31 33 0B 00 10 60        // .`MBUFSB13...`

                If (LAnd (LEqual (SMD4, One), 
    4209: A0 1D 90 93 53 4D 44 34 01                       // ....SMD4.


    4212: 92                                               // .

LNotEqual (SB14, Zero)))
                {

    4213: 93 53 42 31 34 00                                // .SB14.

                    ConcatenateResTemplate (Local0, MBUF (SB14, 0x1000), Local0)
                }


    4219: 84 60 4D 42 55 46 53 42 31 34 0B 00 10 60        // .`MBUFSB14...`

                If (LAnd (LEqual (SMD5, One), 
    4227: A0 1D 90 93 53 4D 44 35 01                       // ....SMD5.


    4230: 92                                               // .

LNotEqual (SB15, Zero)))
                {

    4231: 93 53 42 31 35 00                                // .SB15.

                    ConcatenateResTemplate (Local0, MBUF (SB15, 0x1000), Local0)
                }


    4237: 84 60 4D 42 55 46 53 42 31 35 0B 00 10 60        // .`MBUFSB15...`

                If (LAnd (LEqual (SMD6, One), 
    4245: A0 1D 90 93 53 4D 44 36 01                       // ....SMD6.


    424E: 92                                               // .

LNotEqual (SB16, Zero)))
                {

    424F: 93 53 42 31 36 00                                // .SB16.

                    ConcatenateResTemplate (Local0, MBUF (SB16, 0x1000), Local0)
                }


    4255: 84 60 4D 42 55 46 53 42 31 36 0B 00 10 60        // .`MBUFSB16...`

                If (LAnd (LEqual (SMD7, One), 
    4263: A0 43 04 90 93 53 4D 44 37 01                    // .C...SMD7.


    426D: 92                                               // .

LNotEqual (SB17, Zero)))
                {
                    ConcatenateResTemplate (Local0, MBUF (SB17, 0x1000), Local0)
                    ConcatenateResTemplate (Local0, MBUF (Add (SB07, 0x1000), 0x08), Local0)

    426E: 93 53 42 31 37 00 84 60 4D 42 55 46 53 42 31 37  // .SB17..`MBUFSB17
    427E: 0B 00 10 60 84 60 4D 42 55 46 72 53 42 30 37 0B  // ...`.`MBUFrSB07.
    428E: 00 10 00 0A 08 60                                // .....`

                    ConcatenateResTemplate (Local0, MBUF (Add (SB07, 0x1014), 0x0FEC), Local0)
                }


    4294: 84 60 4D 42 55 46 72 53 42 30 37 0B 14 10 00 0B  // .`MBUFrSB07.....
    42A4: EC 0F 60                                         // ..`

                If (LAnd (LEqual (SMD5, 0x03), 
    42A7: A0 38 90 93 53 4D 44 35 0A 03                    // .8..SMD5..

LAnd (
    42B1: 90 92                                            // ..

LNotEqual (SB05, Zero), 
    42B3: 93 53 42 30 35 00                                // .SB05.


    42B9: 92                                               // .

LNotEqual (
                    SB15, Zero))))
                {
                    ConcatenateResTemplate (Local0, MBUF (SB15, 0x1000), Local0)

    42BA: 93 53 42 31 35 00 84 60 4D 42 55 46 53 42 31 35  // .SB15..`MBUFSB15
    42CA: 0B 00 10 60                                      // ...`

                    ConcatenateResTemplate (Local0, MBUF (Add (SB05, 0x08), 0x0FF4), Local0)
                }


    42CE: 84 60 4D 42 55 46 72 53 42 30 35 0A 08 00 0B F4  // .`MBUFrSB05.....
    42DE: 0F 60                                            // .`

                If (LAnd (LEqual (SMD6, 0x03), 
    42E0: A0 38 90 93 53 4D 44 36 0A 03                    // .8..SMD6..

LAnd (
    42EA: 90 92                                            // ..

LNotEqual (SB06, Zero), 
    42EC: 93 53 42 30 36 00                                // .SB06.


    42F2: 92                                               // .

LNotEqual (
                    SB16, Zero))))
                {
                    ConcatenateResTemplate (Local0, MBUF (SB16, 0x1000), Local0)

    42F3: 93 53 42 31 36 00 84 60 4D 42 55 46 53 42 31 36  // .SB16..`MBUFSB16
    4303: 0B 00 10 60                                      // ...`

                    ConcatenateResTemplate (Local0, MBUF (Add (SB06, 0x08), 0x0FF4), Local0)
                }


    4307: 84 60 4D 42 55 46 72 53 42 30 36 0A 08 00 0B F4  // .`MBUFrSB06.....
    4317: 0F 60                                            // .`

                Return (Local0)
            }
        }


    4319: A4 60                                            // .`

        Device (GPI0)
        {

    431B: 5B 82 43 0D 47 50 49 30                          // [.C.GPI0

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    4323: 14 23 5F 48 49 44 00                             // .#_HID.

                If (LEqual (PCHG, 0x02))
                {

    432A: A0 12 93 50 43 48 47 0A 02                       // ...PCHG..

                    Return ("INT3437")
                }


    4333: A4 0D 49 4E 54 33 34 33 37 00                    // ..INT3437.

                Return ("INT33C7")
            }


    433D: A4 0D 49 4E 54 33 33 43 37 00                    // ..INT33C7.

            Name (RBUF, 
    4347: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
            {
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x000003FF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000400,         // Length
                    ,, _Y15, TypeStatic, DenseTranslation)
            })

    434C: 11 1F 0A 1C 87 17 00 01 0C 03 00 00 00 00 00 00  // ................
    435C: 00 00 FF 03 00 00 00 00 00 00 00 04 00 00 79 00  // ..............y.

            CreateDWordField (RBUF, \_SB.PCI0.GPI0._Y15._MIN, BMIN)  // _MIN: Minimum Base Address

    436C: 8A 52 42 55 46 0A 0A 42 4D 49 4E                 // .RBUF..BMIN

            CreateDWordField (RBUF, \_SB.PCI0.GPI0._Y15._MAX, BMAX)  // _MAX: Maximum Base Address

    4377: 8A 52 42 55 46 0A 0E 42 4D 41 58                 // .RBUF..BMAX

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (GPMN, BMIN) /* \_SB_.PCI0.GPI0.BMIN */
                Store (GPMX, BMAX) /* \_SB_.PCI0.GPI0.BMAX */

    4382: 14 1D 5F 43 52 53 08 70 47 50 4D 4E 42 4D 49 4E  // .._CRS.pGPMNBMIN
    4392: 70 47 50 4D 58 42 4D 41 58                       // pGPMXBMAX

                Return (RBUF) /* \_SB_.PCI0.GPI0.RBUF */
            }


    439B: A4 52 42 55 46                                   // .RBUF

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    43A0: 14 12 5F 48 52 56 00                             // .._HRV.

                Return (^^LPCB.CRID) /* \_SB_.PCI0.LPCB.CRID */
            }


    43A7: A4 5E 5E 2E 4C 50 43 42 43 52 49 44              // .^^.LPCBCRID

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    43B3: 14 3C 5F 53 54 41 00                             // .<_STA.

                If (LEqual (GPMN, Zero))
                {

    43BA: A0 09 93 47 50 4D 4E 00                          // ...GPMN.

                    Return (Zero)
                }


    43C2: A4 00                                            // ..

                If (LAnd (LEqual (OSYS, 0x07DC), 
    43C4: A0 12 90 93 4F 53 59 53 0B DC 07                 // ....OSYS...

LEqual (SMD0, One)))
                {

    43CF: 93 53 4D 44 30 01                                // .SMD0.

                    Return (Zero)
                }


    43D5: A4 00                                            // ..

                If (LLess (OSYS, 0x07DC))
                {

    43D7: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                    Return (Zero)
                }


    43E1: A4 00                                            // ..

                If (LEqual (SMGP, Zero))
                {

    43E3: A0 09 93 53 4D 47 50 00                          // ...SMGP.

                    Return (Zero)
                }


    43EB: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


    43ED: A4 0A 0F                                         // ...

    Scope (_SB.PCI0)
    {

    43F0: 10 4A 04 2E 5F 53 42 5F 50 43 49 30              // .J.._SB_PCI0

        Device (SDMA)
        {

    43FC: 5B 82 3D 53 44 4D 41                             // [.=SDMA

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    4403: 14 37 5F 53 54 41 00                             // .7_STA.

                If (LEqual (SMD0, 0x02))
                {

    440A: A0 0B 93 53 4D 44 30 0A 02                       // ...SMD0..

                    Return (0x0F)
                }


    4413: A4 0A 0F                                         // ...

                If (LEqual (SMD0, Zero))
                {

    4416: A0 09 93 53 4D 44 30 00                          // ...SMD0.

                    Return (Zero)
                }


    441E: A4 00                                            // ..

                If (LLess (OSYS, 0x07DD))
                {
                    LPD3 (SB10, SMD0)

    4420: A0 17 95 4F 53 59 53 0B DD 07 4C 50 44 33 53 42  // ...OSYS...LPD3SB
    4430: 31 30 53 4D 44 30                                // 10SMD0

                    Return (Zero)
                }


    4436: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


    4438: A4 0A 0F                                         // ...

    If (
    443B: A0 45 05 92                                      // .E..

LNotEqual (SMD0, 0x02))
    {

    443F: 93 53 4D 44 30 0A 02                             // .SMD0..

        Scope (_SB.PCI0.SDMA)
        {

    4446: 10 4A 04 2F 03 5F 53 42 5F 50 43 49 30 53 44 4D  // .J./._SB_PCI0SDM
    4456: 41                                               // A

            Name (_HID, "INTL9C60" /* Intel Baytrail SOC DMA Controller */)  // _HID: Hardware ID

    4457: 08 5F 48 49 44 0D 49 4E 54 4C 39 43 36 30 00     // ._HID.INTL9C60.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    4466: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD0, SB00, SIR0))
            }


    446D: A4 4C 43 52 53 53 4D 44 30 53 42 30 30 53 49 52  // .LCRSSMD0SB00SIR
    447D: 30                                               // 0

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    447E: 14 12 5F 48 52 56 00                             // .._HRV.

                Return (^^LPCB.CRID) /* \_SB_.PCI0.LPCB.CRID */
            }
        }
    }


    4485: A4 5E 5E 2E 4C 50 43 42 43 52 49 44              // .^^.LPCBCRID

    If (LEqual (SMD0, 0x02))
    {

    4491: A0 22 93 53 4D 44 30 0A 02                       // .".SMD0..

        Scope (_SB.PCI0.SDMA)
        {

    449A: 10 19 2F 03 5F 53 42 5F 50 43 49 30 53 44 4D 41  // ../._SB_PCI0SDMA

            Name (_ADR, 0x00150000)  // _ADR: Address
        }
    }


    44AA: 08 5F 41 44 52 0C 00 00 15 00                    // ._ADR.....

    Scope (_SB.PCI0)
    {

    44B4: 10 42 12 2E 5F 53 42 5F 50 43 49 30              // .B.._SB_PCI0

        Device (I2C0)
        {

    44C0: 5B 82 45 11 49 32 43 30                          // [.E.I2C0

            Method (SSCN, 0, NotSerialized)
            {

    44C8: 14 17 53 53 43 4E 00                             // ..SSCN.

                Return (PKG3 (SSH0, SSL0, SSD0))
            }


    44CF: A4 50 4B 47 33 53 53 48 30 53 53 4C 30 53 53 44  // .PKG3SSH0SSL0SSD
    44DF: 30                                               // 0

            Method (FMCN, 0, NotSerialized)
            {

    44E0: 14 17 46 4D 43 4E 00                             // ..FMCN.

                Return (PKG3 (FMH0, FML0, FMD0))
            }


    44E7: A4 50 4B 47 33 46 4D 48 30 46 4D 4C 30 46 4D 44  // .PKG3FMH0FML0FMD
    44F7: 30                                               // 0

            Method (FPCN, 0, NotSerialized)
            {

    44F8: 14 17 46 50 43 4E 00                             // ..FPCN.

                Return (PKG3 (FPH0, FPL0, FPD0))
            }


    44FF: A4 50 4B 47 33 46 50 48 30 46 50 4C 30 46 50 44  // .PKG3FPH0FPL0FPD
    450F: 30                                               // 0

            Method (M0D3, 0, NotSerialized)
            {

    4510: 14 0F 4D 30 44 33 00                             // ..M0D3.

                Return (PKG1 (M0C0))
            }


    4517: A4 50 4B 47 31 4D 30 43 30                       // .PKG1M0C0

            Method (M1D3, 0, NotSerialized)
            {

    4520: 14 0F 4D 31 44 33 00                             // ..M1D3.

                Return (PKG1 (M1C0))
            }


    4527: A4 50 4B 47 31 4D 31 43 30                       // .PKG1M1C0

            Method (M0D0, 0, NotSerialized)
            {

    4530: 14 0F 4D 30 44 30 00                             // ..M0D0.

                Return (PKG1 (M2C0))
            }


    4537: A4 50 4B 47 31 4D 32 43 30                       // .PKG1M2C0

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (
    4540: 14 38 5F 43 52 53 08 70                          // .8_CRS.p

Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }, Local0)

    4548: 11 05 0A 02 79 00 60                             // ....y.`

                If (
    454F: A0 1C 92                                         // ...

LNotEqual (SMD1, 0x02))
                {

    4552: 93 53 4D 44 31 0A 02                             // .SMD1..

                    ConcatenateResTemplate (Local0, LCRS (SMD1, SB01, SIR1), Local0)
                }

                ConcatenateResTemplate (Local0, LDMA (0x18, 0x04), Local0)

    4559: 84 60 4C 43 52 53 53 4D 44 31 53 42 30 31 53 49  // .`LCRSSMD1SB01SI
    4569: 52 31 60 84 60 4C 44 4D 41 0A 18 0A 04 60        // R1`.`LDMA....`

                Return (Local0)
            }


    4577: A4 60                                            // .`

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                LPD0 (SB11, SMD1)

    4579: 14 2E 5F 50 53 30 08 4C 50 44 30 53 42 31 31 53  // .._PS0.LPD0SB11S
    4589: 4D 44 31                                         // MD1

                If (CondRefOf (\_SB.PCI0.I2C0.PS0X))
                {
                    PS0X ()
                }
            }


    458C: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 49  // ..[.\/._SB_PCI0I
    459C: 32 43 30 50 53 30 58 00 50 53 30 58              // 2C0PS0X.PS0X

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                LPD3 (SB11, SMD1)

    45A8: 14 2E 5F 50 53 33 08 4C 50 44 33 53 42 31 31 53  // .._PS3.LPD3SB11S
    45B8: 4D 44 31                                         // MD1

                If (CondRefOf (\_SB.PCI0.I2C0.PS3X))
                {
                    PS3X ()
                }
            }
        }
    }


    45BB: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 49  // ..[.\/._SB_PCI0I
    45CB: 32 43 30 50 53 33 58 00 50 53 33 58              // 2C0PS3X.PS3X

    If (
    45D7: A0 42 07 92                                      // .B..

LNotEqual (SMD1, 0x02))
    {

    45DB: 93 53 4D 44 31 0A 02                             // .SMD1..

        Scope (_SB.PCI0.I2C0)
        {

    45E2: 10 47 06 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .G./._SB_PCI0I2C
    45F2: 30                                               // 0

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    45F3: 14 23 5F 48 49 44 00                             // .#_HID.

                If (LEqual (PCHG, 0x02))
                {

    45FA: A0 12 93 50 43 48 47 0A 02                       // ...PCHG..

                    Return ("INT3432")
                }


    4603: A4 0D 49 4E 54 33 34 33 32 00                    // ..INT3432.

                Return ("INT33C2")
            }


    460D: A4 0D 49 4E 54 33 33 43 32 00                    // ..INT33C2.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    4617: 14 12 5F 48 52 56 00                             // .._HRV.

                Return (^^LPCB.CRID) /* \_SB_.PCI0.LPCB.CRID */
            }


    461E: A4 5E 5E 2E 4C 50 43 42 43 52 49 44              // .^^.LPCBCRID

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    462A: 14 1F 5F 53 54 41 00                             // .._STA.

                If (LEqual (SMD1, Zero))
                {

    4631: A0 09 93 53 4D 44 31 00                          // ...SMD1.

                    Return (Zero)
                }


    4639: A4 00                                            // ..

                If (LLess (OSYS, 0x07DD))
                {

    463B: A0 0B 95 4F 53 59 53 0B DD 07                    // ...OSYS...

                    Return (Zero)
                }


    4645: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


    4647: A4 0A 0F                                         // ...

    If (LEqual (SMD1, 0x02))
    {

    464A: A0 22 93 53 4D 44 31 0A 02                       // .".SMD1..

        Scope (_SB.PCI0.I2C0)
        {

    4653: 10 19 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 30  // ../._SB_PCI0I2C0

            Name (_ADR, 0x00150001)  // _ADR: Address
        }
    }


    4663: 08 5F 41 44 52 0C 01 00 15 00                    // ._ADR.....

    Scope (_SB.PCI0)
    {

    466D: 10 46 10 2E 5F 53 42 5F 50 43 49 30              // .F.._SB_PCI0

        Device (I2C1)
        {

    4679: 5B 82 49 0F 49 32 43 31                          // [.I.I2C1

            Method (SSCN, 0, NotSerialized)
            {

    4681: 14 17 53 53 43 4E 00                             // ..SSCN.

                Return (PKG3 (SSH1, SSL1, SSD1))
            }


    4688: A4 50 4B 47 33 53 53 48 31 53 53 4C 31 53 53 44  // .PKG3SSH1SSL1SSD
    4698: 31                                               // 1

            Method (FMCN, 0, NotSerialized)
            {

    4699: 14 17 46 4D 43 4E 00                             // ..FMCN.

                Return (PKG3 (FMH1, FML1, FMD1))
            }


    46A0: A4 50 4B 47 33 46 4D 48 31 46 4D 4C 31 46 4D 44  // .PKG3FMH1FML1FMD
    46B0: 31                                               // 1

            Method (FPCN, 0, NotSerialized)
            {

    46B1: 14 17 46 50 43 4E 00                             // ..FPCN.

                Return (PKG3 (FPH1, FPL1, FPD1))
            }


    46B8: A4 50 4B 47 33 46 50 48 31 46 50 4C 31 46 50 44  // .PKG3FPH1FPL1FPD
    46C8: 31                                               // 1

            Method (M0D3, 0, NotSerialized)
            {

    46C9: 14 0F 4D 30 44 33 00                             // ..M0D3.

                Return (PKG1 (M0C1))
            }


    46D0: A4 50 4B 47 31 4D 30 43 31                       // .PKG1M0C1

            Method (M1D3, 0, NotSerialized)
            {

    46D9: 14 0F 4D 31 44 33 00                             // ..M1D3.

                Return (PKG1 (M1C1))
            }


    46E0: A4 50 4B 47 31 4D 31 43 31                       // .PKG1M1C1

            Method (M0D0, 0, NotSerialized)
            {

    46E9: 14 0F 4D 30 44 30 00                             // ..M0D0.

                Return (PKG1 (M2C1))
            }


    46F0: A4 50 4B 47 31 4D 32 43 31                       // .PKG1M2C1

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (
    46F9: 14 38 5F 43 52 53 08 70                          // .8_CRS.p

Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }, Local0)

    4701: 11 05 0A 02 79 00 60                             // ....y.`

                If (
    4708: A0 1C 92                                         // ...

LNotEqual (SMD2, 0x02))
                {

    470B: 93 53 4D 44 32 0A 02                             // .SMD2..

                    ConcatenateResTemplate (Local0, LCRS (SMD2, SB02, SIR2), Local0)
                }

                ConcatenateResTemplate (Local0, LDMA (0x1A, 0x06), Local0)

    4712: 84 60 4C 43 52 53 53 4D 44 32 53 42 30 32 53 49  // .`LCRSSMD2SB02SI
    4722: 52 32 60 84 60 4C 44 4D 41 0A 1A 0A 06 60        // R2`.`LDMA....`

                Return (Local0)
            }


    4730: A4 60                                            // .`

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {

    4732: 14 2E 5F 50 53 30 08                             // .._PS0.

                If (CondRefOf (\_SB.PCI0.I2C1.PS0X))
                {
                    PS0X ()
                }

                LPD0 (SB12, SMD2)
            }


    4739: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 49  // ..[.\/._SB_PCI0I
    4749: 32 43 31 50 53 30 58 00 50 53 30 58 4C 50 44 30  // 2C1PS0X.PS0XLPD0
    4759: 53 42 31 32 53 4D 44 32                          // SB12SMD2

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                LPD3 (SB12, SMD2)
            }
        }
    }


    4761: 14 12 5F 50 53 33 08 4C 50 44 33 53 42 31 32 53  // .._PS3.LPD3SB12S
    4771: 4D 44 32                                         // MD2

    If (
    4774: A0 42 07 92                                      // .B..

LNotEqual (SMD2, 0x02))
    {

    4778: 93 53 4D 44 32 0A 02                             // .SMD2..

        Scope (_SB.PCI0.I2C1)
        {

    477F: 10 47 06 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .G./._SB_PCI0I2C
    478F: 31                                               // 1

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    4790: 14 23 5F 48 49 44 00                             // .#_HID.

                If (LEqual (PCHG, 0x02))
                {

    4797: A0 12 93 50 43 48 47 0A 02                       // ...PCHG..

                    Return ("INT3433")
                }


    47A0: A4 0D 49 4E 54 33 34 33 33 00                    // ..INT3433.

                Return ("INT33C3")
            }


    47AA: A4 0D 49 4E 54 33 33 43 33 00                    // ..INT33C3.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    47B4: 14 12 5F 48 52 56 00                             // .._HRV.

                Return (^^LPCB.CRID) /* \_SB_.PCI0.LPCB.CRID */
            }


    47BB: A4 5E 5E 2E 4C 50 43 42 43 52 49 44              // .^^.LPCBCRID

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    47C7: 14 1F 5F 53 54 41 00                             // .._STA.

                If (LEqual (SMD2, Zero))
                {

    47CE: A0 09 93 53 4D 44 32 00                          // ...SMD2.

                    Return (Zero)
                }


    47D6: A4 00                                            // ..

                If (LLess (OSYS, 0x07DD))
                {

    47D8: A0 0B 95 4F 53 59 53 0B DD 07                    // ...OSYS...

                    Return (Zero)
                }


    47E2: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


    47E4: A4 0A 0F                                         // ...

    If (LEqual (SMD2, 0x02))
    {

    47E7: A0 22 93 53 4D 44 32 0A 02                       // .".SMD2..

        Scope (_SB.PCI0.I2C1)
        {

    47F0: 10 19 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 31  // ../._SB_PCI0I2C1

            Name (_ADR, 0x00150002)  // _ADR: Address
        }
    }


    4800: 08 5F 41 44 52 0C 02 00 15 00                    // ._ADR.....

    Scope (_SB.PCI0)
    {

    480A: 10 47 0A 2E 5F 53 42 5F 50 43 49 30              // .G.._SB_PCI0

        Device (SPI0)
        {

    4816: 5B 82 4A 09 53 50 49 30                          // [.J.SPI0

            Method (M0D3, 0, NotSerialized)
            {

    481E: 14 0F 4D 30 44 33 00                             // ..M0D3.

                Return (PKG1 (M0C2))
            }


    4825: A4 50 4B 47 31 4D 30 43 32                       // .PKG1M0C2

            Method (M1D3, 0, NotSerialized)
            {

    482E: 14 0F 4D 31 44 33 00                             // ..M1D3.

                Return (PKG1 (M1C2))
            }


    4835: A4 50 4B 47 31 4D 31 43 32                       // .PKG1M1C2

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    483E: 14 1F 5F 53 54 41 00                             // .._STA.

                If (LEqual (SMD3, Zero))
                {

    4845: A0 09 93 53 4D 44 33 00                          // ...SMD3.

                    Return (Zero)
                }


    484D: A4 00                                            // ..

                If (LLess (OSYS, 0x07DD))
                {

    484F: A0 0B 95 4F 53 59 53 0B DD 07                    // ...OSYS...

                    Return (Zero)
                }


    4859: A4 00                                            // ..

                Return (0x0F)
            }


    485B: A4 0A 0F                                         // ...

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (
    485E: 14 2D 5F 43 52 53 08 70                          // .-_CRS.p

Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }, Local0)

    4866: 11 05 0A 02 79 00 60                             // ....y.`

                If (
    486D: A0 1C 92                                         // ...

LNotEqual (SMD3, 0x02))
                {

    4870: 93 53 4D 44 33 0A 02                             // .SMD3..

                    ConcatenateResTemplate (Local0, LCRS (SMD3, SB03, SIR3), Local0)
                }


    4877: 84 60 4C 43 52 53 53 4D 44 33 53 42 30 33 53 49  // .`LCRSSMD3SB03SI
    4887: 52 33 60                                         // R3`

                Return (Local0)
            }


    488A: A4 60                                            // .`

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                LPD0 (SB13, SMD3)
            }


    488C: 14 12 5F 50 53 30 08 4C 50 44 30 53 42 31 33 53  // .._PS0.LPD0SB13S
    489C: 4D 44 33                                         // MD3

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                LPD3 (SB13, SMD3)
            }
        }
    }


    489F: 14 12 5F 50 53 33 08 4C 50 44 33 53 42 31 33 53  // .._PS3.LPD3SB13S
    48AF: 4D 44 33                                         // MD3

    If (
    48B2: A0 42 05 92                                      // .B..

LNotEqual (SMD3, 0x02))
    {

    48B6: 93 53 4D 44 33 0A 02                             // .SMD3..

        Scope (_SB.PCI0.SPI0)
        {

    48BD: 10 47 04 2F 03 5F 53 42 5F 50 43 49 30 53 50 49  // .G./._SB_PCI0SPI
    48CD: 30                                               // 0

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    48CE: 14 23 5F 48 49 44 00                             // .#_HID.

                If (LEqual (PCHG, 0x02))
                {

    48D5: A0 12 93 50 43 48 47 0A 02                       // ...PCHG..

                    Return ("INT3430")
                }


    48DE: A4 0D 49 4E 54 33 34 33 30 00                    // ..INT3430.

                Return ("INT33C0")
            }


    48E8: A4 0D 49 4E 54 33 33 43 30 00                    // ..INT33C0.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    48F2: 14 12 5F 48 52 56 00                             // .._HRV.

                Return (^^LPCB.CRID) /* \_SB_.PCI0.LPCB.CRID */
            }
        }
    }


    48F9: A4 5E 5E 2E 4C 50 43 42 43 52 49 44              // .^^.LPCBCRID

    If (LEqual (SMD3, 0x02))
    {

    4905: A0 22 93 53 4D 44 33 0A 02                       // .".SMD3..

        Scope (_SB.PCI0.SPI0)
        {

    490E: 10 19 2F 03 5F 53 42 5F 50 43 49 30 53 50 49 30  // ../._SB_PCI0SPI0

            Name (_ADR, 0x00150003)  // _ADR: Address
        }
    }


    491E: 08 5F 41 44 52 0C 03 00 15 00                    // ._ADR.....

    Scope (_SB.PCI0)
    {

    4928: 10 41 09 2E 5F 53 42 5F 50 43 49 30              // .A.._SB_PCI0

        Device (SPI1)
        {

    4934: 5B 82 44 08 53 50 49 31                          // [.D.SPI1

            Method (M0D3, 0, NotSerialized)
            {

    493C: 14 0F 4D 30 44 33 00                             // ..M0D3.

                Return (PKG1 (M0C3))
            }


    4943: A4 50 4B 47 31 4D 30 43 33                       // .PKG1M0C3

            Method (M1D3, 0, NotSerialized)
            {

    494C: 14 0F 4D 31 44 33 00                             // ..M1D3.

                Return (PKG1 (M1C3))
            }


    4953: A4 50 4B 47 31 4D 31 43 33                       // .PKG1M1C3

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (
    495C: 14 37 5F 43 52 53 08 70                          // .7_CRS.p

Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }, Local0)

    4964: 11 05 0A 02 79 00 60                             // ....y.`

                If (
    496B: A0 1C 92                                         // ...

LNotEqual (SMD4, 0x02))
                {

    496E: 93 53 4D 44 34 0A 02                             // .SMD4..

                    ConcatenateResTemplate (Local0, LCRS (SMD4, SB04, SIR4), Local0)
                }

                ConcatenateResTemplate (Local0, LDMA (0x10, Zero), Local0)

    4975: 84 60 4C 43 52 53 53 4D 44 34 53 42 30 34 53 49  // .`LCRSSMD4SB04SI
    4985: 52 34 60 84 60 4C 44 4D 41 0A 10 00 60           // R4`.`LDMA...`

                Return (Local0)
            }


    4992: A4 60                                            // .`

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                LPD0 (SB14, SMD4)
            }


    4994: 14 12 5F 50 53 30 08 4C 50 44 30 53 42 31 34 53  // .._PS0.LPD0SB14S
    49A4: 4D 44 34                                         // MD4

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                LPD3 (SB14, SMD4)
            }
        }
    }


    49A7: 14 12 5F 50 53 33 08 4C 50 44 33 53 42 31 34 53  // .._PS3.LPD3SB14S
    49B7: 4D 44 34                                         // MD4

    If (
    49BA: A0 42 07 92                                      // .B..

LNotEqual (SMD4, 0x02))
    {

    49BE: 93 53 4D 44 34 0A 02                             // .SMD4..

        Scope (_SB.PCI0.SPI1)
        {

    49C5: 10 47 06 2F 03 5F 53 42 5F 50 43 49 30 53 50 49  // .G./._SB_PCI0SPI
    49D5: 31                                               // 1

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    49D6: 14 23 5F 48 49 44 00                             // .#_HID.

                If (LEqual (PCHG, 0x02))
                {

    49DD: A0 12 93 50 43 48 47 0A 02                       // ...PCHG..

                    Return ("INT3431")
                }


    49E6: A4 0D 49 4E 54 33 34 33 31 00                    // ..INT3431.

                Return ("INT33C1")
            }


    49F0: A4 0D 49 4E 54 33 33 43 31 00                    // ..INT33C1.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    49FA: 14 12 5F 48 52 56 00                             // .._HRV.

                Return (^^LPCB.CRID) /* \_SB_.PCI0.LPCB.CRID */
            }


    4A01: A4 5E 5E 2E 4C 50 43 42 43 52 49 44              // .^^.LPCBCRID

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    4A0D: 14 1F 5F 53 54 41 00                             // .._STA.

                If (LEqual (SMD4, Zero))
                {

    4A14: A0 09 93 53 4D 44 34 00                          // ...SMD4.

                    Return (Zero)
                }


    4A1C: A4 00                                            // ..

                If (LLess (OSYS, 0x07DD))
                {

    4A1E: A0 0B 95 4F 53 59 53 0B DD 07                    // ...OSYS...

                    Return (Zero)
                }


    4A28: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


    4A2A: A4 0A 0F                                         // ...

    If (LEqual (SMD4, 0x02))
    {

    4A2D: A0 22 93 53 4D 44 34 0A 02                       // .".SMD4..

        Scope (_SB.PCI0.SPI1)
        {

    4A36: 10 19 2F 03 5F 53 42 5F 50 43 49 30 53 50 49 31  // ../._SB_PCI0SPI1

            Name (_ADR, 0x00150004)  // _ADR: Address
        }
    }


    4A46: 08 5F 41 44 52 0C 04 00 15 00                    // ._ADR.....

    Scope (_SB.PCI0)
    {

    4A50: 10 47 08 2E 5F 53 42 5F 50 43 49 30              // .G.._SB_PCI0

        Device (UA00)
        {

    4A5C: 5B 82 4A 07 55 41 30 30                          // [.J.UA00

            Method (M0D3, 0, NotSerialized)
            {

    4A64: 14 0F 4D 30 44 33 00                             // ..M0D3.

                Return (PKG1 (M0C4))
            }


    4A6B: A4 50 4B 47 31 4D 30 43 34                       // .PKG1M0C4

            Method (M1D3, 0, NotSerialized)
            {

    4A74: 14 0F 4D 31 44 33 00                             // ..M1D3.

                Return (PKG1 (M1C4))
            }


    4A7B: A4 50 4B 47 31 4D 31 43 34                       // .PKG1M1C4

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (
    4A84: 14 2D 5F 43 52 53 08 70                          // .-_CRS.p

Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }, Local0)

    4A8C: 11 05 0A 02 79 00 60                             // ....y.`

                If (
    4A93: A0 1C 92                                         // ...

LNotEqual (SMD5, 0x02))
                {

    4A96: 93 53 4D 44 35 0A 02                             // .SMD5..

                    ConcatenateResTemplate (Local0, LCRS (SMD5, SB05, SIR5), Local0)
                }


    4A9D: 84 60 4C 43 52 53 53 4D 44 35 53 42 30 35 53 49  // .`LCRSSMD5SB05SI
    4AAD: 52 35 60                                         // R5`

                Return (Local0)
            }


    4AB0: A4 60                                            // .`

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                LPD0 (SB15, SMD5)
            }


    4AB2: 14 12 5F 50 53 30 08 4C 50 44 30 53 42 31 35 53  // .._PS0.LPD0SB15S
    4AC2: 4D 44 35                                         // MD5

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                LPD3 (SB15, SMD5)
            }
        }
    }


    4AC5: 14 12 5F 50 53 33 08 4C 50 44 33 53 42 31 35 53  // .._PS3.LPD3SB15S
    4AD5: 4D 44 35                                         // MD5

    If (
    4AD8: A0 41 08 92                                      // .A..

LNotEqual (SMD5, 0x02))
    {

    4ADC: 93 53 4D 44 35 0A 02                             // .SMD5..

        Scope (_SB.PCI0.UA00)
        {

    4AE3: 10 46 07 2F 03 5F 53 42 5F 50 43 49 30 55 41 30  // .F./._SB_PCI0UA0
    4AF3: 30                                               // 0

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    4AF4: 14 32 5F 48 49 44 00                             // .2_HID.

                If (LEqual (SMD5, 0x03))
                {

    4AFB: A0 0E 93 53 4D 44 35 0A 03                       // ...SMD5..

                    Return (0x020CD041)
                }


    4B04: A4 0C 41 D0 0C 02                                // ..A...

                If (LEqual (PCHG, 0x02))
                {

    4B0A: A0 12 93 50 43 48 47 0A 02                       // ...PCHG..

                    Return ("INT3434")
                }


    4B13: A4 0D 49 4E 54 33 34 33 34 00                    // ..INT3434.

                Return ("INT33C4")
            }


    4B1D: A4 0D 49 4E 54 33 33 43 34 00                    // ..INT33C4.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    4B27: 14 12 5F 48 52 56 00                             // .._HRV.

                Return (^^LPCB.CRID) /* \_SB_.PCI0.LPCB.CRID */
            }


    4B2E: A4 5E 5E 2E 4C 50 43 42 43 52 49 44              // .^^.LPCBCRID

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    4B3A: 14 1F 5F 53 54 41 00                             // .._STA.

                If (LEqual (SMD5, Zero))
                {

    4B41: A0 09 93 53 4D 44 35 00                          // ...SMD5.

                    Return (Zero)
                }


    4B49: A4 00                                            // ..

                If (LLess (OSYS, 0x07DD))
                {

    4B4B: A0 0B 95 4F 53 59 53 0B DD 07                    // ...OSYS...

                    Return (Zero)
                }


    4B55: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


    4B57: A4 0A 0F                                         // ...

    If (LEqual (SMD5, 0x02))
    {

    4B5A: A0 22 93 53 4D 44 35 0A 02                       // .".SMD5..

        Scope (_SB.PCI0.UA00)
        {

    4B63: 10 19 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 30  // ../._SB_PCI0UA00

            Name (_ADR, 0x00150005)  // _ADR: Address
        }
    }


    4B73: 08 5F 41 44 52 0C 05 00 15 00                    // ._ADR.....

    Scope (_SB.PCI0)
    {

    4B7D: 10 42 09 2E 5F 53 42 5F 50 43 49 30              // .B.._SB_PCI0

        Device (UA01)
        {

    4B89: 5B 82 45 08 55 41 30 31                          // [.E.UA01

            Method (M0D3, 0, NotSerialized)
            {

    4B91: 14 0F 4D 30 44 33 00                             // ..M0D3.

                Return (PKG1 (M0C5))
            }


    4B98: A4 50 4B 47 31 4D 30 43 35                       // .PKG1M0C5

            Method (M1D3, 0, NotSerialized)
            {

    4BA1: 14 0F 4D 31 44 33 00                             // ..M1D3.

                Return (PKG1 (M1C5))
            }


    4BA8: A4 50 4B 47 31 4D 31 43 35                       // .PKG1M1C5

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {
                Store (
    4BB1: 14 38 5F 43 52 53 08 70                          // .8_CRS.p

Buffer (0x02)
                    {
                         0x79, 0x00                                       // y.
                    }, Local0)

    4BB9: 11 05 0A 02 79 00 60                             // ....y.`

                If (
    4BC0: A0 1C 92                                         // ...

LNotEqual (SMD6, 0x02))
                {

    4BC3: 93 53 4D 44 36 0A 02                             // .SMD6..

                    ConcatenateResTemplate (Local0, LCRS (SMD6, SB06, SIR6), Local0)
                }

                ConcatenateResTemplate (Local0, LDMA (0x16, 0x02), Local0)

    4BCA: 84 60 4C 43 52 53 53 4D 44 36 53 42 30 36 53 49  // .`LCRSSMD6SB06SI
    4BDA: 52 36 60 84 60 4C 44 4D 41 0A 16 0A 02 60        // R6`.`LDMA....`

                Return (Local0)
            }


    4BE8: A4 60                                            // .`

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                LPD0 (SB16, SMD6)
            }


    4BEA: 14 12 5F 50 53 30 08 4C 50 44 30 53 42 31 36 53  // .._PS0.LPD0SB16S
    4BFA: 4D 44 36                                         // MD6

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                LPD3 (SB16, SMD6)
            }
        }
    }


    4BFD: 14 12 5F 50 53 33 08 4C 50 44 33 53 42 31 36 53  // .._PS3.LPD3SB16S
    4C0D: 4D 44 36                                         // MD6

    If (
    4C10: A0 41 08 92                                      // .A..

LNotEqual (SMD6, 0x02))
    {

    4C14: 93 53 4D 44 36 0A 02                             // .SMD6..

        Scope (_SB.PCI0.UA01)
        {

    4C1B: 10 46 07 2F 03 5F 53 42 5F 50 43 49 30 55 41 30  // .F./._SB_PCI0UA0
    4C2B: 31                                               // 1

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    4C2C: 14 32 5F 48 49 44 00                             // .2_HID.

                If (LEqual (SMD6, 0x03))
                {

    4C33: A0 0E 93 53 4D 44 36 0A 03                       // ...SMD6..

                    Return (0x020CD041)
                }


    4C3C: A4 0C 41 D0 0C 02                                // ..A...

                If (LEqual (PCHG, 0x02))
                {

    4C42: A0 12 93 50 43 48 47 0A 02                       // ...PCHG..

                    Return ("INT3435")
                }


    4C4B: A4 0D 49 4E 54 33 34 33 35 00                    // ..INT3435.

                Return ("INT33C5")
            }


    4C55: A4 0D 49 4E 54 33 33 43 35 00                    // ..INT33C5.

            Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
            {

    4C5F: 14 12 5F 48 52 56 00                             // .._HRV.

                Return (^^LPCB.CRID) /* \_SB_.PCI0.LPCB.CRID */
            }


    4C66: A4 5E 5E 2E 4C 50 43 42 43 52 49 44              // .^^.LPCBCRID

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    4C72: 14 1F 5F 53 54 41 00                             // .._STA.

                If (LEqual (SMD6, Zero))
                {

    4C79: A0 09 93 53 4D 44 36 00                          // ...SMD6.

                    Return (Zero)
                }


    4C81: A4 00                                            // ..

                If (LLess (OSYS, 0x07DD))
                {

    4C83: A0 0B 95 4F 53 59 53 0B DD 07                    // ...OSYS...

                    Return (Zero)
                }


    4C8D: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


    4C8F: A4 0A 0F                                         // ...

    If (LEqual (SMD6, 0x02))
    {

    4C92: A0 22 93 53 4D 44 36 0A 02                       // .".SMD6..

        Scope (_SB.PCI0.UA01)
        {

    4C9B: 10 19 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 31  // ../._SB_PCI0UA01

            Name (_ADR, 0x00150006)  // _ADR: Address
        }
    }


    4CAB: 08 5F 41 44 52 0C 06 00 15 00                    // ._ADR.....

    Scope (_SB.PCI0)
    {

    4CB5: 10 45 05 2E 5F 53 42 5F 50 43 49 30              // .E.._SB_PCI0

        Device (SDHC)
        {

    4CC1: 5B 82 48 04 53 44 48 43                          // [.H.SDHC

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {
                LPD0 (SB17, SMD7)

    4CC9: 14 2E 5F 50 53 30 08 4C 50 44 30 53 42 31 37 53  // .._PS0.LPD0SB17S
    4CD9: 4D 44 37                                         // MD7

                If (CondRefOf (\_SB.PCI0.SDHC.PS0X))
                {
                    PS0X ()
                }
            }


    4CDC: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 53  // ..[.\/._SB_PCI0S
    4CEC: 44 48 43 50 53 30 58 00 50 53 30 58              // DHCPS0X.PS0X

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {
                LPD3 (SB17, SMD7)
            }
        }
    }


    4CF8: 14 12 5F 50 53 33 08 4C 50 44 33 53 42 31 37 53  // .._PS3.LPD3SB17S
    4D08: 4D 44 37                                         // MD7

    If (
    4D0B: A0 45 08 92                                      // .E..

LNotEqual (SMD7, 0x02))
    {

    4D0F: 93 53 4D 44 37 0A 02                             // .SMD7..

        Scope (_SB.PCI0.SDHC)
        {

    4D16: 10 4A 07 2F 03 5F 53 42 5F 50 43 49 30 53 44 48  // .J./._SB_PCI0SDH
    4D26: 43                                               // C

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    4D27: 14 23 5F 48 49 44 00                             // .#_HID.

                If (LEqual (PCHG, 0x02))
                {

    4D2E: A0 12 93 50 43 48 47 0A 02                       // ...PCHG..

                    Return ("INT3436")
                }


    4D37: A4 0D 49 4E 54 33 34 33 36 00                    // ..INT3436.

                Return ("INT33C6")
            }


    4D41: A4 0D 49 4E 54 33 33 43 36 00                    // ..INT33C6.

            Name (_CID, "PNP0D40" /* SDA Standard Compliant SD Host Controller */)  // _CID: Compatible ID

    4D4B: 08 5F 43 49 44 0D 50 4E 50 30 44 34 30 00        // ._CID.PNP0D40.

            Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
            {

    4D59: 14 17 5F 43 52 53 00                             // .._CRS.

                Return (LCRS (SMD7, SB07, SIR7))
            }


    4D60: A4 4C 43 52 53 53 4D 44 37 53 42 30 37 53 49 52  // .LCRSSMD7SB07SIR
    4D70: 37                                               // 7

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    4D71: 14 1F 5F 53 54 41 00                             // .._STA.

                If (LEqual (SMD7, Zero))
                {

    4D78: A0 09 93 53 4D 44 37 00                          // ...SMD7.

                    Return (Zero)
                }


    4D80: A4 00                                            // ..

                If (LLess (OSYS, 0x07DC))
                {

    4D82: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                    Return (Zero)
                }


    4D8C: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


    4D8E: A4 0A 0F                                         // ...

    If (LEqual (SMD7, 0x02))
    {

    4D91: A0 22 93 53 4D 44 37 0A 02                       // .".SMD7..

        Scope (_SB.PCI0.SDHC)
        {

    4D9A: 10 19 2F 03 5F 53 42 5F 50 43 49 30 53 44 48 43  // ../._SB_PCI0SDHC

            Name (_ADR, 0x00170000)  // _ADR: Address
        }
    }


    4DAA: 08 5F 41 44 52 0C 00 00 17 00                    // ._ADR.....

    Scope (_SB.PCI0)
    {
    }


    4DB4: 10 0A 2E 5F 53 42 5F 50 43 49 30                 // ..._SB_PCI0

    Scope (_SB.PCI0.I2C0)
    {
    }


    4DBF: 10 0F 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 30  // ../._SB_PCI0I2C0

    Scope (_SB.PCI0.I2C0)
    {

    4DCF: 10 43 1E 2F 03 5F 53 42 5F 50 43 49 30 49 32 43  // .C./._SB_PCI0I2C
    4DDF: 30                                               // 0

        Device (TPD1)
        {

    4DE0: 5B 82 48 0E 54 50 44 31                          // [.H.TPD1

            Name (_ADR, Zero)  // _ADR: Address

    4DE8: 08 5F 41 44 52 00                                // ._ADR.

            Name (_HID, "SYN1B81")  // _HID: Hardware ID

    4DEE: 08 5F 48 49 44 0D 53 59 4E 31 42 38 31 00        // ._HID.SYN1B81.

            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID

    4DFC: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

            Name (_UID, One)  // _UID: Unique ID

    4E0A: 08 5F 55 49 44 01                                // ._UID.

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {

    4E10: 14 44 04 5F 44 53 4D 04                          // .D._DSM.

                If (LEqual (Arg0, 
    4E18: A0 35 93 68                                      // .5.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                {

    4E1C: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
    4E2C: 3D 89 38 DE                                      // =.8.

                    If (LEqual (Arg2, Zero))
                    {

    4E30: A0 15 93 6A 00                                   // ...j.

                        If (LEqual (Arg1, One))
                        {

    4E35: A0 09 93 69 01                                   // ...i.

                            Return (
    4E3A: A4                                               // .

Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }

    4E3B: 11 03 01 03                                      // ....

                        Else
                        {

    4E3F: A1 06                                            // ..

                            Return (
    4E41: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }


    4E42: 11 03 01 00                                      // ....

                    If (LEqual (Arg2, One))
                    {

    4E46: A0 07 93 6A 01                                   // ...j.

                        Return (0x20)
                    }
                }

    4E4B: A4 0A 20                                         // .. 

                Else
                {

    4E4E: A1 06                                            // ..

                    Return (
    4E50: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }


    4E51: 11 03 01 00                                      // ....

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    4E55: 14 32 5F 53 54 41 00                             // .2_STA.

                If (LEqual (PTPS, Zero))
                {

    4E5C: A0 09 93 50 54 50 53 00                          // ...PTPS.

                    Return (Zero)
                }

    4E64: A4 00                                            // ..

                ElseIf
    4E66: A1 21                                            // .!

 (
    4E68: A0 1B 92                                         // ...

LNotEqual (TPVD, 0x45))
                {

    4E6B: 93 54 50 56 44 0A 45                             // .TPVD.E

                    If (
    4E72: A0 0D 92                                         // ...

LGreaterEqual (OSYS, 0x07DD))
                    {

    4E75: 95 4F 53 59 53 0B DD 07                          // .OSYS...

                        Return (0x0F)
                    }

    4E7D: A4 0A 0F                                         // ...

                    Else
                    {

    4E80: A1 03                                            // ..

                        Return (Zero)
                    }
                }

    4E82: A4 00                                            // ..

                Else
                {

    4E84: A1 03                                            // ..

                    Return (Zero)
                }
            }


    4E86: A4 00                                            // ..

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    4E88: 14 41 04 5F 43 52 53 08                          // .A._CRS.

                Name (SBFI, 
    4E90: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x002C, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                    {
                        0x00000027,
                    }
                })

    4E95: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
    4EA5: 80 1A 06 00 2C 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....,.\_SB.PCI0.
    4EB5: 49 32 43 30 00 89 06 00 05 01 27 00 00 00 79 00  // I2C0......'...y.

                Return (SBFI) /* \_SB_.PCI0.I2C0.TPD1._CRS.SBFI */
            }
        }


    4EC5: A4 53 42 46 49                                   // .SBFI

        Device (TPDE)
        {

    4ECA: 5B 82 47 0E 54 50 44 45                          // [.G.TPDE

            Name (_ADR, Zero)  // _ADR: Address

    4ED2: 08 5F 41 44 52 00                                // ._ADR.

            Name (_HID, "ELAN0501")  // _HID: Hardware ID

    4ED8: 08 5F 48 49 44 0D 45 4C 41 4E 30 35 30 31 00     // ._HID.ELAN0501.

            Name (_CID, "PNP0C50" /* HID Protocol Device (I2C bus) */)  // _CID: Compatible ID

    4EE7: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

            Name (_UID, One)  // _UID: Unique ID

    4EF5: 08 5F 55 49 44 01                                // ._UID.

            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
            {

    4EFB: 14 43 04 5F 44 53 4D 04                          // .C._DSM.

                If (LEqual (Arg0, 
    4F03: A0 34 93 68                                      // .4.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                {

    4F07: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
    4F17: 3D 89 38 DE                                      // =.8.

                    If (LEqual (Arg2, Zero))
                    {

    4F1B: A0 15 93 6A 00                                   // ...j.

                        If (LEqual (Arg1, One))
                        {

    4F20: A0 09 93 69 01                                   // ...i.

                            Return (
    4F25: A4                                               // .

Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }

    4F26: 11 03 01 03                                      // ....

                        Else
                        {

    4F2A: A1 06                                            // ..

                            Return (
    4F2C: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }


    4F2D: 11 03 01 00                                      // ....

                    If (LEqual (Arg2, One))
                    {

    4F31: A0 06 93 6A 01                                   // ...j.

                        Return (One)
                    }
                }

    4F36: A4 01                                            // ..

                Else
                {

    4F38: A1 06                                            // ..

                    Return (
    4F3A: A4                                               // .

Buffer (One)
                    {
                         0x00                                             // .
                    })
                }
            }


    4F3B: 11 03 01 00                                      // ....

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    4F3F: 14 31 5F 53 54 41 00                             // .1_STA.

                If (LEqual (PTPS, Zero))
                {

    4F46: A0 09 93 50 54 50 53 00                          // ...PTPS.

                    Return (Zero)
                }

    4F4E: A4 00                                            // ..

                ElseIf
    4F50: A1 20                                            // . 

 (LEqual (TPVD, 0x45))
                {

    4F52: A0 1A 93 54 50 56 44 0A 45                       // ...TPVD.E

                    If (
    4F5B: A0 0D 92                                         // ...

LGreaterEqual (OSYS, 0x07DD))
                    {

    4F5E: 95 4F 53 59 53 0B DD 07                          // .OSYS...

                        Return (0x0F)
                    }

    4F66: A4 0A 0F                                         // ...

                    Else
                    {

    4F69: A1 03                                            // ..

                        Return (Zero)
                    }
                }

    4F6B: A4 00                                            // ..

                Else
                {

    4F6D: A1 03                                            // ..

                    Return (Zero)
                }
            }


    4F6F: A4 00                                            // ..

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    4F71: 14 41 04 5F 43 52 53 08                          // .A._CRS.

                Name (SBFI, 
    4F79: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                    {
                        0x00000027,
                    }
                })

    4F7E: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
    4F8E: 80 1A 06 00 15 00 5C 5F 53 42 2E 50 43 49 30 2E  // ......\_SB.PCI0.
    4F9E: 49 32 43 30 00 89 06 00 05 01 27 00 00 00 79 00  // I2C0......'...y.

                Return (SBFI) /* \_SB_.PCI0.I2C0.TPDE._CRS.SBFI */
            }
        }
    }


    4FAE: A4 53 42 46 49                                   // .SBFI

    Scope (_SB.PCI0)
    {

    4FB3: 10 85 54 02 2E 5F 53 42 5F 50 43 49 30           // ..T.._SB_PCI0

        Device (HDEF)
        {

    4FC0: 5B 82 46 09 48 44 45 46                          // [.F.HDEF

            Name (_ADR, 0x001B0000)  // _ADR: Address

    4FC8: 08 5F 41 44 52 0C 00 00 1B 00                    // ._ADR.....

            OperationRegion (HDAR, PCI_Config, Zero, 0x0100)

    4FD2: 5B 80 48 44 41 52 02 00 0B 00 01                 // [.HDAR.....

            Field (HDAR, AnyAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x4C), 
                DCKA,   1, 
                Offset (0x4D), 
                DCKM,   1, 
                    ,   6, 
                DCKS,   1, 
                Offset (0x54), 
                Offset (0x55), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }


    4FDD: 5B 81 31 48 44 41 52 00 44 56 49 44 10 00 40 25  // [.1HDAR.DVID..@%
    4FED: 44 43 4B 41 01 00 07 44 43 4B 4D 01 00 06 44 43  // DCKA...DCKM...DC
    4FFD: 4B 53 01 00 30 00 08 50 4D 45 45 01 00 06 50 4D  // KS..0..PMEE...PM
    500D: 45 53 01                                         // ES.

            Method (_DSW, 3, NotSerialized)  // _DSW: Device Sleep Wake
            {

    5010: 14 0C 5F 44 53 57 03                             // .._DSW.

                Store (Arg0, PMEE) /* \_SB_.PCI0.HDEF.PMEE */
            }


    5017: 70 68 50 4D 45 45                                // phPMEE

            Method (GPEH, 0, NotSerialized)
            {

    501D: 14 2A 47 50 45 48 00                             // .*GPEH.

                If (LEqual (DVID, 0xFFFF))
                {

    5024: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }


    502E: A4 00                                            // ..

                If (LAnd (PMEE, PMES))
                {
                    Store (One, PMES) /* \_SB_.PCI0.HDEF.PMES */

    5030: A0 17 90 50 4D 45 45 50 4D 45 53 70 01 50 4D 45  // ...PMEEPMESp.PME
    5040: 53                                               // S

                    Notify (HDEF, 0x02) // Device Wake
                }
            }


    5041: 86 48 44 45 46 0A 02                             // .HDEF..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    5048: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x6D, 0x04))
            }
        }


    504F: A4 47 50 52 57 0A 6D 0A 04                       // .GPRW.m..

        Device (RP01)
        {

    5058: 5B 82 4B 38 52 50 30 31                          // [.K8RP01

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

    5060: 14 1C 5F 41 44 52 00                             // .._ADR.

                If (
    5067: A0 0D 92                                         // ...

LNotEqual (RPA0, Zero))
                {

    506A: 93 52 50 41 30 00                                // .RPA0.

                    Return (RPA0) /* \RPA0 */
                }

    5070: A4 52 50 41 30                                   // .RPA0

                Else
                {

    5075: A1 07                                            // ..

                    Return (0x001C0000)
                }
            }


    5077: A4 0C 00 00 1C 00                                // ......

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                Store (LTR1, LTRE) /* \_SB_.PCI0.LTRE */
                Store (PML1, LMSL) /* \_SB_.PCI0.LMSL */
                Store (PNL1, LNSL) /* \_SB_.PCI0.LNSL */
                Store (OBF1, OBFF) /* \_SB_.PCI0.OBFF */

    507D: 14 47 04 5F 49 4E 49 00 70 4C 54 52 31 4C 54 52  // .G._INI.pLTR1LTR
    508D: 45 70 50 4D 4C 31 4C 4D 53 4C 70 50 4E 4C 31 4C  // EpPML1LMSLpPNL1L
    509D: 4E 53 4C 70 4F 42 46 31 4F 42 46 46              // NSLpOBF1OBFF

                If (CondRefOf (\_SB.PCI0.RP01.INIX))
                {
                    INIX ()
                }
            }


    50A9: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // ..[.\/._SB_PCI0R
    50B9: 50 30 31 49 4E 49 58 00 49 4E 49 58              // P01INIX.INIX

            OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    50C5: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

            Field (PXCS, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x50), 
                L0SE,   1, 
                    ,   3, 
                LDIS,   1, 
                Offset (0x51), 
                Offset (0x52), 
                    ,   13, 
                LASX,   1, 
                Offset (0x5A), 
                ABPX,   1, 
                    ,   2, 
                PDCX,   1, 
                    ,   2, 
                PDSX,   1, 
                Offset (0x5B), 
                Offset (0x60), 
                Offset (0x62), 
                PSPX,   1, 
                Offset (0xA4), 
                D3HT,   2, 
                Offset (0xD8), 
                    ,   30, 
                HPEX,   1, 
                PMEX,   1, 
                Offset (0xE2), 
                    ,   2, 
                L23E,   1, 
                L23R,   1, 
                Offset (0x324), 
                    ,   3, 
                LEDM,   1
            }


    50D0: 5B 81 46 07 50 58 43 53 00 56 44 49 44 20 00 40  // [.F.PXCS.VDID .@
    50E0: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
    50F0: 08 00 0D 4C 41 53 58 01 00 32 41 42 50 58 01 00  // ...LASX..2ABPX..
    5100: 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01 00  // .PDCX...PDSX....
    5110: 28 00 10 50 53 50 58 01 00 4F 20 44 33 48 54 02  // (..PSPX..O D3HT.
    5120: 00 4E 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00  // .N...HPEX.PMEX..
    5130: 30 00 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20  // 0..L23E.L23R... 
    5140: 01 00 03 4C 45 44 4D 01                          // ...LEDM.

            Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
            {
                Offset (0xDC), 
                    ,   30, 
                HPSX,   1, 
                PMSX,   1
            }


    5148: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    5158: 58 01 50 4D 53 58 01                             // X.PMSX.

            Name (LTRV, 
    515F: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
            {
                Zero, 
                Zero, 
                Zero, 
                Zero
            })

    5164: 12 06 04 00 00 00 00                             // .......

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    516B: 14 47 20 5F 44 53 4D 0C                          // .G _DSM.


    5173: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
    5179: A0 44 1F 93 68                                   // .D..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {

    517E: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    518E: 19 C3 43 4D                                      // ..CM

                    Switch (ToInteger (Arg2))
                    {

    5192: A2 4B 1D 01 70 99 6A 00 5F 54 5F 30              // .K..p.j._T_0

                        Case (Zero)
                        {

    519E: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                            Name (OPTS, 
    51A7: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                            {
                                 0x00, 0x00                                       // ..
                            })

    51AC: 11 05 0A 02 00 00                                // ......

                            CreateBitField (OPTS, Zero, FUN0)

    51B2: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                            CreateBitField (OPTS, 0x04, FUN4)

    51BC: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                            CreateBitField (OPTS, 0x06, FUN6)

    51C7: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                            CreateBitField (OPTS, 0x08, FUN8)

    51D2: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                            CreateBitField (OPTS, 0x09, FUN9)

    51DD: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                            If (
    51E8: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                            {
                                Store (One, FUN0) /* \_SB_.PCI0.RP01._DSM.FUN0 */

    51EB: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                If (LTRE)
                                {

    51F5: A0 0B 4C 54 52 45                                // ..LTRE

                                    Store (One, FUN6) /* \_SB_.PCI0.RP01._DSM.FUN6 */
                                }


    51FB: 70 01 46 55 4E 36                                // p.FUN6

                                If (OBFF)
                                {

    5201: A0 0B 4F 42 46 46                                // ..OBFF

                                    Store (One, FUN4) /* \_SB_.PCI0.RP01._DSM.FUN4 */
                                }


    5207: 70 01 46 55 4E 34                                // p.FUN4

                                If (LEqual (ECR1, One))
                                {

    520D: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    5215: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {
                                        Store (One, FUN8) /* \_SB_.PCI0.RP01._DSM.FUN8 */

    5218: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                        Store (One, FUN9) /* \_SB_.PCI0.RP01._DSM.FUN9 */
                                    }
                                }
                            }


    5222: 70 01 46 55 4E 39                                // p.FUN9

                            Return (OPTS) /* \_SB_.PCI0.RP01._DSM.OPTS */
                        }

    5228: A4 4F 50 54 53                                   // .OPTS

                        Case
    522D: A1 4F 13                                         // .O.

 (0x04)
                        {

    5230: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                            If (
    523A: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                            {

    523D: 95 69 0A 02                                      // .i..

                                If (OBFF)
                                {

    5241: A0 1A 4F 42 46 46                                // ..OBFF

                                    Return (
    5247: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }

    5248: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    5258: 00 00 00 00                                      // ....

                                Else
                                {

    525C: A1 16                                            // ..

                                    Return (
    525E: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }
                            }
                        }

    525F: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    526F: 00 00 00 00                                      // ....

                        Case
    5273: A1 49 0F                                         // .I.

 (0x06)
                        {

    5276: A0 40 0B 93 5F 54 5F 30 0A 06                    // .@.._T_0..

                            If (
    5280: A0 46 0A 92                                      // .F..

LGreaterEqual (Arg1, 0x02))
                            {

    5284: 95 69 0A 02                                      // .i..

                                If (LTRE)
                                {

    5288: A0 4A 09 4C 54 52 45                             // .J.LTRE

                                    If (LOr (LEqual (LMSL, Zero), 
    528F: A0 42 04 91 93 4C 4D 53 4C 00                    // .B...LMSL.

LEqual (LNSL, Zero)))
                                    {

    5299: 93 4C 4E 53 4C 00                                // .LNSL.

                                        If (LEqual (PCHS, One))
                                        {
                                            Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    529F: A0 17 93 50 43 48 53 01 70 0B 46 08 4C 4D 53 4C  // ...PCHS.p.F.LMSL

                                            Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                        }

    52AF: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                        ElseIf
    52B7: A1 1A                                            // ..

 (LEqual (PCHS, 0x02))
                                        {
                                            Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    52B9: A0 18 93 50 43 48 53 0A 02 70 0B 03 10 4C 4D 53  // ...PCHS..p...LMS
    52C9: 4C                                               // L

                                            Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                        }
                                    }

                                    Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    52CA: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    52DA: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                    Store (And (LMSL, 0x03FF), 
    52DF: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    52EF: 00                                               // .

Index (LTRV, One))
                                    Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    52F0: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    5300: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                    Store (And (LNSL, 0x03FF), 
    5304: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    5314: 03 00                                            // ..

Index (LTRV, 0x03))

    5316: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                    Return (LTRV) /* \_SB_.PCI0.RP01.LTRV */
                                }

    531E: A4 4C 54 52 56                                   // .LTRV

                                Else
                                {

    5323: A1 03                                            // ..

                                    Return (Zero)
                                }
                            }
                        }

    5325: A4 00                                            // ..

                        Case
    5327: A1 45 04                                         // .E.

 (0x08)
                        {

    532A: A0 1A 93 5F 54 5F 30 0A 08                       // ..._T_0..

                            If (LEqual (ECR1, One))
                            {

    5333: A0 11 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    533B: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    5341: A4 00                                            // ..

                                Return (One)
                            }
                        }

    5343: A4 01                                            // ..

                        Case
    5345: A1 27                                            // .'

 (0x09)
                        {

    5347: A0 25 93 5F 54 5F 30 0A 09                       // .%._T_0..

                            If (LEqual (ECR1, One))
                            {

    5350: A0 1C 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    5358: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    535E: A4 00                                            // ..

                                Return (
    5360: A4                                               // .

Package (0x05)
                                {
                                    0xC350, 
                                    Ones, 
                                    Ones, 
                                    0xC350, 
                                    Ones
                                })
                            }
                        }


    5361: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                    }
                }


    536D: A5                                               // .

                Return (
    536E: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }


    536F: 11 03 01 00                                      // ....

            Device (PXSX)
            {

    5373: 5B 82 1B 50 58 53 58                             // [..PXSX

                Name (_ADR, Zero)  // _ADR: Address

    537A: 08 5F 41 44 52 00                                // ._ADR.

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

    5380: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }
            }


    5387: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (HPME, 0, Serialized)
            {

    5390: 14 2D 48 50 4D 45 08                             // .-HPME.

                If (PMSX)
                {
                    Store (0xC8, Local0)

    5397: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                    While (Local0)
                    {
                        Store (One, PMSX) /* \_SB_.PCI0.RP01.PMSX */

    53A1: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                        If (PMSX)
                        {

    53AA: A0 07 50 4D 53 58                                // ..PMSX

                            Decrement (Local0)
                        }

    53B0: 76 60                                            // v`

                        Else
                        {

    53B2: A1 04                                            // ..

                            Store (Zero, Local0)
                        }
                    }


    53B4: 70 00 60                                         // p.`

                    Notify (PXSX, 0x02) // Device Wake
                }
            }


    53B7: 86 50 58 53 58 0A 02                             // .PXSX..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    53BE: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }


    53C5: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

    53CE: 14 16 5F 50 52 54 00                             // .._PRT.

                If (PICM)
                {

    53D5: A0 0A 50 49 43 4D                                // ..PICM

                    Return (AR04 ())
                }


    53DB: A4 41 52 30 34                                   // .AR04

                Return (PR04 ())
            }
        }


    53E0: A4 50 52 30 34                                   // .PR04

        Device (RP02)
        {

    53E5: 5B 82 4B 38 52 50 30 32                          // [.K8RP02

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

    53ED: 14 1C 5F 41 44 52 00                             // .._ADR.

                If (
    53F4: A0 0D 92                                         // ...

LNotEqual (RPA1, Zero))
                {

    53F7: 93 52 50 41 31 00                                // .RPA1.

                    Return (RPA1) /* \RPA1 */
                }

    53FD: A4 52 50 41 31                                   // .RPA1

                Else
                {

    5402: A1 07                                            // ..

                    Return (0x001C0001)
                }
            }


    5404: A4 0C 01 00 1C 00                                // ......

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                Store (LTR2, LTRE) /* \_SB_.PCI0.LTRE */
                Store (PML2, LMSL) /* \_SB_.PCI0.LMSL */
                Store (PNL2, LNSL) /* \_SB_.PCI0.LNSL */
                Store (OBF2, OBFF) /* \_SB_.PCI0.OBFF */

    540A: 14 47 04 5F 49 4E 49 00 70 4C 54 52 32 4C 54 52  // .G._INI.pLTR2LTR
    541A: 45 70 50 4D 4C 32 4C 4D 53 4C 70 50 4E 4C 32 4C  // EpPML2LMSLpPNL2L
    542A: 4E 53 4C 70 4F 42 46 32 4F 42 46 46              // NSLpOBF2OBFF

                If (CondRefOf (\_SB.PCI0.RP02.INIX))
                {
                    INIX ()
                }
            }


    5436: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // ..[.\/._SB_PCI0R
    5446: 50 30 32 49 4E 49 58 00 49 4E 49 58              // P02INIX.INIX

            OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    5452: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

            Field (PXCS, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x50), 
                L0SE,   1, 
                    ,   3, 
                LDIS,   1, 
                Offset (0x51), 
                Offset (0x52), 
                    ,   13, 
                LASX,   1, 
                Offset (0x5A), 
                ABPX,   1, 
                    ,   2, 
                PDCX,   1, 
                    ,   2, 
                PDSX,   1, 
                Offset (0x5B), 
                Offset (0x60), 
                Offset (0x62), 
                PSPX,   1, 
                Offset (0xA4), 
                D3HT,   2, 
                Offset (0xD8), 
                    ,   30, 
                HPEX,   1, 
                PMEX,   1, 
                Offset (0xE2), 
                    ,   2, 
                L23E,   1, 
                L23R,   1, 
                Offset (0x324), 
                    ,   3, 
                LEDM,   1
            }


    545D: 5B 81 46 07 50 58 43 53 00 56 44 49 44 20 00 40  // [.F.PXCS.VDID .@
    546D: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
    547D: 08 00 0D 4C 41 53 58 01 00 32 41 42 50 58 01 00  // ...LASX..2ABPX..
    548D: 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01 00  // .PDCX...PDSX....
    549D: 28 00 10 50 53 50 58 01 00 4F 20 44 33 48 54 02  // (..PSPX..O D3HT.
    54AD: 00 4E 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00  // .N...HPEX.PMEX..
    54BD: 30 00 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20  // 0..L23E.L23R... 
    54CD: 01 00 03 4C 45 44 4D 01                          // ...LEDM.

            Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
            {
                Offset (0xDC), 
                    ,   30, 
                HPSX,   1, 
                PMSX,   1
            }


    54D5: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    54E5: 58 01 50 4D 53 58 01                             // X.PMSX.

            Name (LTRV, 
    54EC: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
            {
                Zero, 
                Zero, 
                Zero, 
                Zero
            })

    54F1: 12 06 04 00 00 00 00                             // .......

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    54F8: 14 47 20 5F 44 53 4D 0C                          // .G _DSM.


    5500: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
    5506: A0 44 1F 93 68                                   // .D..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {

    550B: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    551B: 19 C3 43 4D                                      // ..CM

                    Switch (ToInteger (Arg2))
                    {

    551F: A2 4B 1D 01 70 99 6A 00 5F 54 5F 30              // .K..p.j._T_0

                        Case (Zero)
                        {

    552B: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                            Name (OPTS, 
    5534: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                            {
                                 0x00, 0x00                                       // ..
                            })

    5539: 11 05 0A 02 00 00                                // ......

                            CreateBitField (OPTS, Zero, FUN0)

    553F: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                            CreateBitField (OPTS, 0x04, FUN4)

    5549: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                            CreateBitField (OPTS, 0x06, FUN6)

    5554: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                            CreateBitField (OPTS, 0x08, FUN8)

    555F: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                            CreateBitField (OPTS, 0x09, FUN9)

    556A: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                            If (
    5575: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                            {
                                Store (One, FUN0) /* \_SB_.PCI0.RP02._DSM.FUN0 */

    5578: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                If (LTRE)
                                {

    5582: A0 0B 4C 54 52 45                                // ..LTRE

                                    Store (One, FUN6) /* \_SB_.PCI0.RP02._DSM.FUN6 */
                                }


    5588: 70 01 46 55 4E 36                                // p.FUN6

                                If (OBFF)
                                {

    558E: A0 0B 4F 42 46 46                                // ..OBFF

                                    Store (One, FUN4) /* \_SB_.PCI0.RP02._DSM.FUN4 */
                                }


    5594: 70 01 46 55 4E 34                                // p.FUN4

                                If (LEqual (ECR1, One))
                                {

    559A: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    55A2: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {
                                        Store (One, FUN8) /* \_SB_.PCI0.RP02._DSM.FUN8 */

    55A5: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                        Store (One, FUN9) /* \_SB_.PCI0.RP02._DSM.FUN9 */
                                    }
                                }
                            }


    55AF: 70 01 46 55 4E 39                                // p.FUN9

                            Return (OPTS) /* \_SB_.PCI0.RP02._DSM.OPTS */
                        }

    55B5: A4 4F 50 54 53                                   // .OPTS

                        Case
    55BA: A1 4F 13                                         // .O.

 (0x04)
                        {

    55BD: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                            If (
    55C7: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                            {

    55CA: 95 69 0A 02                                      // .i..

                                If (OBFF)
                                {

    55CE: A0 1A 4F 42 46 46                                // ..OBFF

                                    Return (
    55D4: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }

    55D5: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    55E5: 00 00 00 00                                      // ....

                                Else
                                {

    55E9: A1 16                                            // ..

                                    Return (
    55EB: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }
                            }
                        }

    55EC: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    55FC: 00 00 00 00                                      // ....

                        Case
    5600: A1 49 0F                                         // .I.

 (0x06)
                        {

    5603: A0 40 0B 93 5F 54 5F 30 0A 06                    // .@.._T_0..

                            If (
    560D: A0 46 0A 92                                      // .F..

LGreaterEqual (Arg1, 0x02))
                            {

    5611: 95 69 0A 02                                      // .i..

                                If (LTRE)
                                {

    5615: A0 4A 09 4C 54 52 45                             // .J.LTRE

                                    If (LOr (LEqual (LMSL, Zero), 
    561C: A0 42 04 91 93 4C 4D 53 4C 00                    // .B...LMSL.

LEqual (LNSL, Zero)))
                                    {

    5626: 93 4C 4E 53 4C 00                                // .LNSL.

                                        If (LEqual (PCHS, One))
                                        {
                                            Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    562C: A0 17 93 50 43 48 53 01 70 0B 46 08 4C 4D 53 4C  // ...PCHS.p.F.LMSL

                                            Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                        }

    563C: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                        ElseIf
    5644: A1 1A                                            // ..

 (LEqual (PCHS, 0x02))
                                        {
                                            Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    5646: A0 18 93 50 43 48 53 0A 02 70 0B 03 10 4C 4D 53  // ...PCHS..p...LMS
    5656: 4C                                               // L

                                            Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                        }
                                    }

                                    Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    5657: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    5667: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                    Store (And (LMSL, 0x03FF), 
    566C: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    567C: 00                                               // .

Index (LTRV, One))
                                    Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    567D: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    568D: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                    Store (And (LNSL, 0x03FF), 
    5691: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    56A1: 03 00                                            // ..

Index (LTRV, 0x03))

    56A3: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                    Return (LTRV) /* \_SB_.PCI0.RP02.LTRV */
                                }

    56AB: A4 4C 54 52 56                                   // .LTRV

                                Else
                                {

    56B0: A1 03                                            // ..

                                    Return (Zero)
                                }
                            }
                        }

    56B2: A4 00                                            // ..

                        Case
    56B4: A1 45 04                                         // .E.

 (0x08)
                        {

    56B7: A0 1A 93 5F 54 5F 30 0A 08                       // ..._T_0..

                            If (LEqual (ECR1, One))
                            {

    56C0: A0 11 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    56C8: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    56CE: A4 00                                            // ..

                                Return (One)
                            }
                        }

    56D0: A4 01                                            // ..

                        Case
    56D2: A1 27                                            // .'

 (0x09)
                        {

    56D4: A0 25 93 5F 54 5F 30 0A 09                       // .%._T_0..

                            If (LEqual (ECR1, One))
                            {

    56DD: A0 1C 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    56E5: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    56EB: A4 00                                            // ..

                                Return (
    56ED: A4                                               // .

Package (0x05)
                                {
                                    0xC350, 
                                    Ones, 
                                    Ones, 
                                    0xC350, 
                                    Ones
                                })
                            }
                        }


    56EE: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                    }
                }


    56FA: A5                                               // .

                Return (
    56FB: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }


    56FC: 11 03 01 00                                      // ....

            Device (PXSX)
            {

    5700: 5B 82 1B 50 58 53 58                             // [..PXSX

                Name (_ADR, Zero)  // _ADR: Address

    5707: 08 5F 41 44 52 00                                // ._ADR.

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

    570D: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }
            }


    5714: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (HPME, 0, Serialized)
            {

    571D: 14 2D 48 50 4D 45 08                             // .-HPME.

                If (PMSX)
                {
                    Store (0xC8, Local0)

    5724: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                    While (Local0)
                    {
                        Store (One, PMSX) /* \_SB_.PCI0.RP02.PMSX */

    572E: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                        If (PMSX)
                        {

    5737: A0 07 50 4D 53 58                                // ..PMSX

                            Decrement (Local0)
                        }

    573D: 76 60                                            // v`

                        Else
                        {

    573F: A1 04                                            // ..

                            Store (Zero, Local0)
                        }
                    }


    5741: 70 00 60                                         // p.`

                    Notify (PXSX, 0x02) // Device Wake
                }
            }


    5744: 86 50 58 53 58 0A 02                             // .PXSX..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    574B: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }


    5752: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

    575B: 14 16 5F 50 52 54 00                             // .._PRT.

                If (PICM)
                {

    5762: A0 0A 50 49 43 4D                                // ..PICM

                    Return (AR05 ())
                }


    5768: A4 41 52 30 35                                   // .AR05

                Return (PR05 ())
            }
        }


    576D: A4 50 52 30 35                                   // .PR05

        Device (RP03)
        {

    5772: 5B 82 4B 38 52 50 30 33                          // [.K8RP03

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

    577A: 14 1C 5F 41 44 52 00                             // .._ADR.

                If (
    5781: A0 0D 92                                         // ...

LNotEqual (RPA2, Zero))
                {

    5784: 93 52 50 41 32 00                                // .RPA2.

                    Return (RPA2) /* \RPA2 */
                }

    578A: A4 52 50 41 32                                   // .RPA2

                Else
                {

    578F: A1 07                                            // ..

                    Return (0x001C0002)
                }
            }


    5791: A4 0C 02 00 1C 00                                // ......

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                Store (LTR3, LTRE) /* \_SB_.PCI0.LTRE */
                Store (PML3, LMSL) /* \_SB_.PCI0.LMSL */
                Store (PNL3, LNSL) /* \_SB_.PCI0.LNSL */
                Store (OBF3, OBFF) /* \_SB_.PCI0.OBFF */

    5797: 14 47 04 5F 49 4E 49 00 70 4C 54 52 33 4C 54 52  // .G._INI.pLTR3LTR
    57A7: 45 70 50 4D 4C 33 4C 4D 53 4C 70 50 4E 4C 33 4C  // EpPML3LMSLpPNL3L
    57B7: 4E 53 4C 70 4F 42 46 33 4F 42 46 46              // NSLpOBF3OBFF

                If (CondRefOf (\_SB.PCI0.RP03.INIX))
                {
                    INIX ()
                }
            }


    57C3: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // ..[.\/._SB_PCI0R
    57D3: 50 30 33 49 4E 49 58 00 49 4E 49 58              // P03INIX.INIX

            OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    57DF: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

            Field (PXCS, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x50), 
                L0SE,   1, 
                    ,   3, 
                LDIS,   1, 
                Offset (0x51), 
                Offset (0x52), 
                    ,   13, 
                LASX,   1, 
                Offset (0x5A), 
                ABPX,   1, 
                    ,   2, 
                PDCX,   1, 
                    ,   2, 
                PDSX,   1, 
                Offset (0x5B), 
                Offset (0x60), 
                Offset (0x62), 
                PSPX,   1, 
                Offset (0xA4), 
                D3HT,   2, 
                Offset (0xD8), 
                    ,   30, 
                HPEX,   1, 
                PMEX,   1, 
                Offset (0xE2), 
                    ,   2, 
                L23E,   1, 
                L23R,   1, 
                Offset (0x324), 
                    ,   3, 
                LEDM,   1
            }


    57EA: 5B 81 46 07 50 58 43 53 00 56 44 49 44 20 00 40  // [.F.PXCS.VDID .@
    57FA: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
    580A: 08 00 0D 4C 41 53 58 01 00 32 41 42 50 58 01 00  // ...LASX..2ABPX..
    581A: 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01 00  // .PDCX...PDSX....
    582A: 28 00 10 50 53 50 58 01 00 4F 20 44 33 48 54 02  // (..PSPX..O D3HT.
    583A: 00 4E 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00  // .N...HPEX.PMEX..
    584A: 30 00 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20  // 0..L23E.L23R... 
    585A: 01 00 03 4C 45 44 4D 01                          // ...LEDM.

            Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
            {
                Offset (0xDC), 
                    ,   30, 
                HPSX,   1, 
                PMSX,   1
            }


    5862: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    5872: 58 01 50 4D 53 58 01                             // X.PMSX.

            Name (LTRV, 
    5879: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
            {
                Zero, 
                Zero, 
                Zero, 
                Zero
            })

    587E: 12 06 04 00 00 00 00                             // .......

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    5885: 14 47 20 5F 44 53 4D 0C                          // .G _DSM.


    588D: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
    5893: A0 44 1F 93 68                                   // .D..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {

    5898: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    58A8: 19 C3 43 4D                                      // ..CM

                    Switch (ToInteger (Arg2))
                    {

    58AC: A2 4B 1D 01 70 99 6A 00 5F 54 5F 30              // .K..p.j._T_0

                        Case (Zero)
                        {

    58B8: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                            Name (OPTS, 
    58C1: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                            {
                                 0x00, 0x00                                       // ..
                            })

    58C6: 11 05 0A 02 00 00                                // ......

                            CreateBitField (OPTS, Zero, FUN0)

    58CC: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                            CreateBitField (OPTS, 0x04, FUN4)

    58D6: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                            CreateBitField (OPTS, 0x06, FUN6)

    58E1: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                            CreateBitField (OPTS, 0x08, FUN8)

    58EC: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                            CreateBitField (OPTS, 0x09, FUN9)

    58F7: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                            If (
    5902: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                            {
                                Store (One, FUN0) /* \_SB_.PCI0.RP03._DSM.FUN0 */

    5905: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                If (LTRE)
                                {

    590F: A0 0B 4C 54 52 45                                // ..LTRE

                                    Store (One, FUN6) /* \_SB_.PCI0.RP03._DSM.FUN6 */
                                }


    5915: 70 01 46 55 4E 36                                // p.FUN6

                                If (OBFF)
                                {

    591B: A0 0B 4F 42 46 46                                // ..OBFF

                                    Store (One, FUN4) /* \_SB_.PCI0.RP03._DSM.FUN4 */
                                }


    5921: 70 01 46 55 4E 34                                // p.FUN4

                                If (LEqual (ECR1, One))
                                {

    5927: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    592F: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {
                                        Store (One, FUN8) /* \_SB_.PCI0.RP03._DSM.FUN8 */

    5932: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                        Store (One, FUN9) /* \_SB_.PCI0.RP03._DSM.FUN9 */
                                    }
                                }
                            }


    593C: 70 01 46 55 4E 39                                // p.FUN9

                            Return (OPTS) /* \_SB_.PCI0.RP03._DSM.OPTS */
                        }

    5942: A4 4F 50 54 53                                   // .OPTS

                        Case
    5947: A1 4F 13                                         // .O.

 (0x04)
                        {

    594A: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                            If (
    5954: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                            {

    5957: 95 69 0A 02                                      // .i..

                                If (OBFF)
                                {

    595B: A0 1A 4F 42 46 46                                // ..OBFF

                                    Return (
    5961: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }

    5962: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    5972: 00 00 00 00                                      // ....

                                Else
                                {

    5976: A1 16                                            // ..

                                    Return (
    5978: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }
                            }
                        }

    5979: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5989: 00 00 00 00                                      // ....

                        Case
    598D: A1 49 0F                                         // .I.

 (0x06)
                        {

    5990: A0 40 0B 93 5F 54 5F 30 0A 06                    // .@.._T_0..

                            If (
    599A: A0 46 0A 92                                      // .F..

LGreaterEqual (Arg1, 0x02))
                            {

    599E: 95 69 0A 02                                      // .i..

                                If (LTRE)
                                {

    59A2: A0 4A 09 4C 54 52 45                             // .J.LTRE

                                    If (LOr (LEqual (LMSL, Zero), 
    59A9: A0 42 04 91 93 4C 4D 53 4C 00                    // .B...LMSL.

LEqual (LNSL, Zero)))
                                    {

    59B3: 93 4C 4E 53 4C 00                                // .LNSL.

                                        If (LEqual (PCHS, One))
                                        {
                                            Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    59B9: A0 17 93 50 43 48 53 01 70 0B 46 08 4C 4D 53 4C  // ...PCHS.p.F.LMSL

                                            Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                        }

    59C9: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                        ElseIf
    59D1: A1 1A                                            // ..

 (LEqual (PCHS, 0x02))
                                        {
                                            Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    59D3: A0 18 93 50 43 48 53 0A 02 70 0B 03 10 4C 4D 53  // ...PCHS..p...LMS
    59E3: 4C                                               // L

                                            Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                        }
                                    }

                                    Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    59E4: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    59F4: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                    Store (And (LMSL, 0x03FF), 
    59F9: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    5A09: 00                                               // .

Index (LTRV, One))
                                    Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    5A0A: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    5A1A: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                    Store (And (LNSL, 0x03FF), 
    5A1E: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    5A2E: 03 00                                            // ..

Index (LTRV, 0x03))

    5A30: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                    Return (LTRV) /* \_SB_.PCI0.RP03.LTRV */
                                }

    5A38: A4 4C 54 52 56                                   // .LTRV

                                Else
                                {

    5A3D: A1 03                                            // ..

                                    Return (Zero)
                                }
                            }
                        }

    5A3F: A4 00                                            // ..

                        Case
    5A41: A1 45 04                                         // .E.

 (0x08)
                        {

    5A44: A0 1A 93 5F 54 5F 30 0A 08                       // ..._T_0..

                            If (LEqual (ECR1, One))
                            {

    5A4D: A0 11 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    5A55: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    5A5B: A4 00                                            // ..

                                Return (One)
                            }
                        }

    5A5D: A4 01                                            // ..

                        Case
    5A5F: A1 27                                            // .'

 (0x09)
                        {

    5A61: A0 25 93 5F 54 5F 30 0A 09                       // .%._T_0..

                            If (LEqual (ECR1, One))
                            {

    5A6A: A0 1C 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    5A72: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    5A78: A4 00                                            // ..

                                Return (
    5A7A: A4                                               // .

Package (0x05)
                                {
                                    0xC350, 
                                    Ones, 
                                    Ones, 
                                    0xC350, 
                                    Ones
                                })
                            }
                        }


    5A7B: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                    }
                }


    5A87: A5                                               // .

                Return (
    5A88: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }


    5A89: 11 03 01 00                                      // ....

            Device (PXSX)
            {

    5A8D: 5B 82 1B 50 58 53 58                             // [..PXSX

                Name (_ADR, Zero)  // _ADR: Address

    5A94: 08 5F 41 44 52 00                                // ._ADR.

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

    5A9A: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }
            }


    5AA1: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (HPME, 0, Serialized)
            {

    5AAA: 14 2D 48 50 4D 45 08                             // .-HPME.

                If (PMSX)
                {
                    Store (0xC8, Local0)

    5AB1: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                    While (Local0)
                    {
                        Store (One, PMSX) /* \_SB_.PCI0.RP03.PMSX */

    5ABB: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                        If (PMSX)
                        {

    5AC4: A0 07 50 4D 53 58                                // ..PMSX

                            Decrement (Local0)
                        }

    5ACA: 76 60                                            // v`

                        Else
                        {

    5ACC: A1 04                                            // ..

                            Store (Zero, Local0)
                        }
                    }


    5ACE: 70 00 60                                         // p.`

                    Notify (PXSX, 0x02) // Device Wake
                }
            }


    5AD1: 86 50 58 53 58 0A 02                             // .PXSX..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    5AD8: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }


    5ADF: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

    5AE8: 14 16 5F 50 52 54 00                             // .._PRT.

                If (PICM)
                {

    5AEF: A0 0A 50 49 43 4D                                // ..PICM

                    Return (AR06 ())
                }


    5AF5: A4 41 52 30 36                                   // .AR06

                Return (PR06 ())
            }
        }


    5AFA: A4 50 52 30 36                                   // .PR06

        Device (RP04)
        {

    5AFF: 5B 82 4B 38 52 50 30 34                          // [.K8RP04

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

    5B07: 14 1C 5F 41 44 52 00                             // .._ADR.

                If (
    5B0E: A0 0D 92                                         // ...

LNotEqual (RPA3, Zero))
                {

    5B11: 93 52 50 41 33 00                                // .RPA3.

                    Return (RPA3) /* \RPA3 */
                }

    5B17: A4 52 50 41 33                                   // .RPA3

                Else
                {

    5B1C: A1 07                                            // ..

                    Return (0x001C0003)
                }
            }


    5B1E: A4 0C 03 00 1C 00                                // ......

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                Store (LTR4, LTRE) /* \_SB_.PCI0.LTRE */
                Store (PML4, LMSL) /* \_SB_.PCI0.LMSL */
                Store (PNL4, LNSL) /* \_SB_.PCI0.LNSL */
                Store (OBF4, OBFF) /* \_SB_.PCI0.OBFF */

    5B24: 14 47 04 5F 49 4E 49 00 70 4C 54 52 34 4C 54 52  // .G._INI.pLTR4LTR
    5B34: 45 70 50 4D 4C 34 4C 4D 53 4C 70 50 4E 4C 34 4C  // EpPML4LMSLpPNL4L
    5B44: 4E 53 4C 70 4F 42 46 34 4F 42 46 46              // NSLpOBF4OBFF

                If (CondRefOf (\_SB.PCI0.RP04.INIX))
                {
                    INIX ()
                }
            }


    5B50: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // ..[.\/._SB_PCI0R
    5B60: 50 30 34 49 4E 49 58 00 49 4E 49 58              // P04INIX.INIX

            OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    5B6C: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

            Field (PXCS, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x50), 
                L0SE,   1, 
                    ,   3, 
                LDIS,   1, 
                Offset (0x51), 
                Offset (0x52), 
                    ,   13, 
                LASX,   1, 
                Offset (0x5A), 
                ABPX,   1, 
                    ,   2, 
                PDCX,   1, 
                    ,   2, 
                PDSX,   1, 
                Offset (0x5B), 
                Offset (0x60), 
                Offset (0x62), 
                PSPX,   1, 
                Offset (0xA4), 
                D3HT,   2, 
                Offset (0xD8), 
                    ,   30, 
                HPEX,   1, 
                PMEX,   1, 
                Offset (0xE2), 
                    ,   2, 
                L23E,   1, 
                L23R,   1, 
                Offset (0x324), 
                    ,   3, 
                LEDM,   1
            }


    5B77: 5B 81 46 07 50 58 43 53 00 56 44 49 44 20 00 40  // [.F.PXCS.VDID .@
    5B87: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
    5B97: 08 00 0D 4C 41 53 58 01 00 32 41 42 50 58 01 00  // ...LASX..2ABPX..
    5BA7: 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01 00  // .PDCX...PDSX....
    5BB7: 28 00 10 50 53 50 58 01 00 4F 20 44 33 48 54 02  // (..PSPX..O D3HT.
    5BC7: 00 4E 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00  // .N...HPEX.PMEX..
    5BD7: 30 00 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20  // 0..L23E.L23R... 
    5BE7: 01 00 03 4C 45 44 4D 01                          // ...LEDM.

            Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
            {
                Offset (0xDC), 
                    ,   30, 
                HPSX,   1, 
                PMSX,   1
            }


    5BEF: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    5BFF: 58 01 50 4D 53 58 01                             // X.PMSX.

            Name (LTRV, 
    5C06: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
            {
                Zero, 
                Zero, 
                Zero, 
                Zero
            })

    5C0B: 12 06 04 00 00 00 00                             // .......

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    5C12: 14 47 20 5F 44 53 4D 0C                          // .G _DSM.


    5C1A: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
    5C20: A0 44 1F 93 68                                   // .D..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {

    5C25: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    5C35: 19 C3 43 4D                                      // ..CM

                    Switch (ToInteger (Arg2))
                    {

    5C39: A2 4B 1D 01 70 99 6A 00 5F 54 5F 30              // .K..p.j._T_0

                        Case (Zero)
                        {

    5C45: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                            Name (OPTS, 
    5C4E: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                            {
                                 0x00, 0x00                                       // ..
                            })

    5C53: 11 05 0A 02 00 00                                // ......

                            CreateBitField (OPTS, Zero, FUN0)

    5C59: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                            CreateBitField (OPTS, 0x04, FUN4)

    5C63: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                            CreateBitField (OPTS, 0x06, FUN6)

    5C6E: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                            CreateBitField (OPTS, 0x08, FUN8)

    5C79: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                            CreateBitField (OPTS, 0x09, FUN9)

    5C84: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                            If (
    5C8F: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                            {
                                Store (One, FUN0) /* \_SB_.PCI0.RP04._DSM.FUN0 */

    5C92: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                If (LTRE)
                                {

    5C9C: A0 0B 4C 54 52 45                                // ..LTRE

                                    Store (One, FUN6) /* \_SB_.PCI0.RP04._DSM.FUN6 */
                                }


    5CA2: 70 01 46 55 4E 36                                // p.FUN6

                                If (OBFF)
                                {

    5CA8: A0 0B 4F 42 46 46                                // ..OBFF

                                    Store (One, FUN4) /* \_SB_.PCI0.RP04._DSM.FUN4 */
                                }


    5CAE: 70 01 46 55 4E 34                                // p.FUN4

                                If (LEqual (ECR1, One))
                                {

    5CB4: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    5CBC: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {
                                        Store (One, FUN8) /* \_SB_.PCI0.RP04._DSM.FUN8 */

    5CBF: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                        Store (One, FUN9) /* \_SB_.PCI0.RP04._DSM.FUN9 */
                                    }
                                }
                            }


    5CC9: 70 01 46 55 4E 39                                // p.FUN9

                            Return (OPTS) /* \_SB_.PCI0.RP04._DSM.OPTS */
                        }

    5CCF: A4 4F 50 54 53                                   // .OPTS

                        Case
    5CD4: A1 4F 13                                         // .O.

 (0x04)
                        {

    5CD7: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                            If (
    5CE1: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                            {

    5CE4: 95 69 0A 02                                      // .i..

                                If (OBFF)
                                {

    5CE8: A0 1A 4F 42 46 46                                // ..OBFF

                                    Return (
    5CEE: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }

    5CEF: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    5CFF: 00 00 00 00                                      // ....

                                Else
                                {

    5D03: A1 16                                            // ..

                                    Return (
    5D05: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }
                            }
                        }

    5D06: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    5D16: 00 00 00 00                                      // ....

                        Case
    5D1A: A1 49 0F                                         // .I.

 (0x06)
                        {

    5D1D: A0 40 0B 93 5F 54 5F 30 0A 06                    // .@.._T_0..

                            If (
    5D27: A0 46 0A 92                                      // .F..

LGreaterEqual (Arg1, 0x02))
                            {

    5D2B: 95 69 0A 02                                      // .i..

                                If (LTRE)
                                {

    5D2F: A0 4A 09 4C 54 52 45                             // .J.LTRE

                                    If (LOr (LEqual (LMSL, Zero), 
    5D36: A0 42 04 91 93 4C 4D 53 4C 00                    // .B...LMSL.

LEqual (LNSL, Zero)))
                                    {

    5D40: 93 4C 4E 53 4C 00                                // .LNSL.

                                        If (LEqual (PCHS, One))
                                        {
                                            Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    5D46: A0 17 93 50 43 48 53 01 70 0B 46 08 4C 4D 53 4C  // ...PCHS.p.F.LMSL

                                            Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                        }

    5D56: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                        ElseIf
    5D5E: A1 1A                                            // ..

 (LEqual (PCHS, 0x02))
                                        {
                                            Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    5D60: A0 18 93 50 43 48 53 0A 02 70 0B 03 10 4C 4D 53  // ...PCHS..p...LMS
    5D70: 4C                                               // L

                                            Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                        }
                                    }

                                    Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    5D71: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    5D81: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                    Store (And (LMSL, 0x03FF), 
    5D86: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    5D96: 00                                               // .

Index (LTRV, One))
                                    Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    5D97: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    5DA7: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                    Store (And (LNSL, 0x03FF), 
    5DAB: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    5DBB: 03 00                                            // ..

Index (LTRV, 0x03))

    5DBD: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                    Return (LTRV) /* \_SB_.PCI0.RP04.LTRV */
                                }

    5DC5: A4 4C 54 52 56                                   // .LTRV

                                Else
                                {

    5DCA: A1 03                                            // ..

                                    Return (Zero)
                                }
                            }
                        }

    5DCC: A4 00                                            // ..

                        Case
    5DCE: A1 45 04                                         // .E.

 (0x08)
                        {

    5DD1: A0 1A 93 5F 54 5F 30 0A 08                       // ..._T_0..

                            If (LEqual (ECR1, One))
                            {

    5DDA: A0 11 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    5DE2: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    5DE8: A4 00                                            // ..

                                Return (One)
                            }
                        }

    5DEA: A4 01                                            // ..

                        Case
    5DEC: A1 27                                            // .'

 (0x09)
                        {

    5DEE: A0 25 93 5F 54 5F 30 0A 09                       // .%._T_0..

                            If (LEqual (ECR1, One))
                            {

    5DF7: A0 1C 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    5DFF: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    5E05: A4 00                                            // ..

                                Return (
    5E07: A4                                               // .

Package (0x05)
                                {
                                    0xC350, 
                                    Ones, 
                                    Ones, 
                                    0xC350, 
                                    Ones
                                })
                            }
                        }


    5E08: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                    }
                }


    5E14: A5                                               // .

                Return (
    5E15: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }


    5E16: 11 03 01 00                                      // ....

            Device (PXSX)
            {

    5E1A: 5B 82 1B 50 58 53 58                             // [..PXSX

                Name (_ADR, Zero)  // _ADR: Address

    5E21: 08 5F 41 44 52 00                                // ._ADR.

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

    5E27: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }
            }


    5E2E: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (HPME, 0, Serialized)
            {

    5E37: 14 2D 48 50 4D 45 08                             // .-HPME.

                If (PMSX)
                {
                    Store (0xC8, Local0)

    5E3E: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                    While (Local0)
                    {
                        Store (One, PMSX) /* \_SB_.PCI0.RP04.PMSX */

    5E48: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                        If (PMSX)
                        {

    5E51: A0 07 50 4D 53 58                                // ..PMSX

                            Decrement (Local0)
                        }

    5E57: 76 60                                            // v`

                        Else
                        {

    5E59: A1 04                                            // ..

                            Store (Zero, Local0)
                        }
                    }


    5E5B: 70 00 60                                         // p.`

                    Notify (PXSX, 0x02) // Device Wake
                }
            }


    5E5E: 86 50 58 53 58 0A 02                             // .PXSX..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    5E65: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }


    5E6C: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

    5E75: 14 16 5F 50 52 54 00                             // .._PRT.

                If (PICM)
                {

    5E7C: A0 0A 50 49 43 4D                                // ..PICM

                    Return (AR07 ())
                }


    5E82: A4 41 52 30 37                                   // .AR07

                Return (PR07 ())
            }
        }


    5E87: A4 50 52 30 37                                   // .PR07

        Device (RP05)
        {

    5E8C: 5B 82 4F 30 52 50 30 35                          // [.O0RP05

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

    5E94: 14 1C 5F 41 44 52 00                             // .._ADR.

                If (
    5E9B: A0 0D 92                                         // ...

LNotEqual (RPA4, Zero))
                {

    5E9E: 93 52 50 41 34 00                                // .RPA4.

                    Return (RPA4) /* \RPA4 */
                }

    5EA4: A4 52 50 41 34                                   // .RPA4

                Else
                {

    5EA9: A1 07                                            // ..

                    Return (0x001C0004)
                }
            }


    5EAB: A4 0C 04 00 1C 00                                // ......

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                Store (LTR5, LTRE) /* \_SB_.PCI0.LTRE */
                Store (PML5, LMSL) /* \_SB_.PCI0.LMSL */
                Store (PNL5, LNSL) /* \_SB_.PCI0.LNSL */
                Store (OBF5, OBFF) /* \_SB_.PCI0.OBFF */

    5EB1: 14 47 04 5F 49 4E 49 00 70 4C 54 52 35 4C 54 52  // .G._INI.pLTR5LTR
    5EC1: 45 70 50 4D 4C 35 4C 4D 53 4C 70 50 4E 4C 35 4C  // EpPML5LMSLpPNL5L
    5ED1: 4E 53 4C 70 4F 42 46 35 4F 42 46 46              // NSLpOBF5OBFF

                If (CondRefOf (\_SB.PCI0.RP05.INIX))
                {
                    INIX ()
                }
            }


    5EDD: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // ..[.\/._SB_PCI0R
    5EED: 50 30 35 49 4E 49 58 00 49 4E 49 58              // P05INIX.INIX

            OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    5EF9: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

            Field (PXCS, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x50), 
                L0SE,   1, 
                    ,   3, 
                LDIS,   1, 
                Offset (0x51), 
                Offset (0x52), 
                    ,   13, 
                LASX,   1, 
                Offset (0x5A), 
                ABPX,   1, 
                    ,   2, 
                PDCX,   1, 
                    ,   2, 
                PDSX,   1, 
                Offset (0x5B), 
                Offset (0x60), 
                Offset (0x62), 
                PSPX,   1, 
                Offset (0xA4), 
                D3HT,   2, 
                Offset (0xD8), 
                    ,   30, 
                HPEX,   1, 
                PMEX,   1, 
                Offset (0xE2), 
                    ,   2, 
                L23E,   1, 
                L23R,   1, 
                Offset (0x324), 
                    ,   3, 
                LEDM,   1
            }


    5F04: 5B 81 46 07 50 58 43 53 00 56 44 49 44 20 00 40  // [.F.PXCS.VDID .@
    5F14: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
    5F24: 08 00 0D 4C 41 53 58 01 00 32 41 42 50 58 01 00  // ...LASX..2ABPX..
    5F34: 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01 00  // .PDCX...PDSX....
    5F44: 28 00 10 50 53 50 58 01 00 4F 20 44 33 48 54 02  // (..PSPX..O D3HT.
    5F54: 00 4E 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00  // .N...HPEX.PMEX..
    5F64: 30 00 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20  // 0..L23E.L23R... 
    5F74: 01 00 03 4C 45 44 4D 01                          // ...LEDM.

            Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
            {
                Offset (0xDC), 
                    ,   30, 
                HPSX,   1, 
                PMSX,   1
            }


    5F7C: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    5F8C: 58 01 50 4D 53 58 01                             // X.PMSX.

            Name (LTRV, 
    5F93: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
            {
                Zero, 
                Zero, 
                Zero, 
                Zero
            })

    5F98: 12 06 04 00 00 00 00                             // .......

            Name (OPTS, Zero)

    5F9F: 08 4F 50 54 53 00                                // .OPTS.

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    5FA5: 14 45 18 5F 44 53 4D 0C                          // .E._DSM.


    5FAD: 08 5F 54 5F 31 00                                // ._T_1.


    5FB3: 08 5F 54 5F 30 00                                // ._T_0.

                Switch (ToInteger (Arg0))
                {

    5FB9: A2 4C 16 01 70 99 68 00 5F 54 5F 30              // .L..p.h._T_0

                    Case (
    5FC5: A0 4F 15 93 5F 54 5F 30                          // .O.._T_0

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */){
    5FCD: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    5FDD: 19 C3 43 4D                                      // ..CM

                        Switch (ToInteger (Arg2))
                        {

    5FE1: A2 43 14 01 70 99 6A 00 5F 54 5F 31              // .C..p.j._T_1

                            Case (Zero)
                            {

    5FED: A0 3E 93 5F 54 5F 31 00                          // .>._T_1.

                                If (LEqual (Arg1, 0x02))
                                {
                                    Store (One, OPTS) /* \_SB_.PCI0.RP05.OPTS */

    5FF5: A0 32 93 69 0A 02 70 01 4F 50 54 53              // .2.i..p.OPTS

                                    If (LTRE)
                                    {

    6001: A0 10 4C 54 52 45                                // ..LTRE

                                        Or (OPTS, 0x40, OPTS) /* \_SB_.PCI0.RP05.OPTS */
                                    }


    6007: 7D 4F 50 54 53 0A 40 4F 50 54 53                 // }OPTS.@OPTS

                                    If (OBFF)
                                    {

    6012: A0 10 4F 42 46 46                                // ..OBFF

                                        Or (OPTS, 0x10, OPTS) /* \_SB_.PCI0.RP05.OPTS */
                                    }


    6018: 7D 4F 50 54 53 0A 10 4F 50 54 53                 // }OPTS..OPTS

                                    Return (OPTS) /* \_SB_.PCI0.RP05.OPTS */
                                }

    6023: A4 4F 50 54 53                                   // .OPTS

                                Else
                                {

    6028: A1 03                                            // ..

                                    Return (Zero)
                                }
                            }

    602A: A4 00                                            // ..

                            Case
    602C: A1 47 0F                                         // .G.

 (0x04)
                            {

    602F: A0 41 04 93 5F 54 5F 31 0A 04                    // .A.._T_1..

                                If (LEqual (Arg1, 0x02))
                                {

    6039: A0 37 93 69 0A 02                                // .7.i..

                                    If (OBFF)
                                    {

    603F: A0 1A 4F 42 46 46                                // ..OBFF

                                        Return (
    6045: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }

    6046: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    6056: 00 00 00 00                                      // ....

                                    Else
                                    {

    605A: A1 16                                            // ..

                                        Return (
    605C: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                        })
                                    }
                                }
                            }

    605D: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    606D: 00 00 00 00                                      // ....

                            Case
    6071: A1 42 0B                                         // .B.

 (0x06)
                            {

    6074: A0 4F 0A 93 5F 54 5F 31 0A 06                    // .O.._T_1..

                                If (LEqual (Arg1, 0x02))
                                {

    607E: A0 45 0A 93 69 0A 02                             // .E..i..

                                    If (LTRE)
                                    {

    6085: A0 4A 09 4C 54 52 45                             // .J.LTRE

                                        If (LOr (LEqual (LMSL, Zero), 
    608C: A0 42 04 91 93 4C 4D 53 4C 00                    // .B...LMSL.

LEqual (LNSL, Zero)))
                                        {

    6096: 93 4C 4E 53 4C 00                                // .LNSL.

                                            If (LEqual (PCHS, One))
                                            {
                                                Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    609C: A0 17 93 50 43 48 53 01 70 0B 46 08 4C 4D 53 4C  // ...PCHS.p.F.LMSL

                                                Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                            }

    60AC: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                            ElseIf
    60B4: A1 1A                                            // ..

 (LEqual (PCHS, 0x02))
                                            {
                                                Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    60B6: A0 18 93 50 43 48 53 0A 02 70 0B 03 10 4C 4D 53  // ...PCHS..p...LMS
    60C6: 4C                                               // L

                                                Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                            }
                                        }

                                        Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    60C7: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    60D7: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                        Store (And (LMSL, 0x03FF), 
    60DC: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    60EC: 00                                               // .

Index (LTRV, One))
                                        Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    60ED: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    60FD: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                        Store (And (LNSL, 0x03FF), 
    6101: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    6111: 03 00                                            // ..

Index (LTRV, 0x03))

    6113: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                        Return (LTRV) /* \_SB_.PCI0.RP05.LTRV */
                                    }

    611B: A4 4C 54 52 56                                   // .LTRV

                                    Else
                                    {

    6120: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }
                            }


    6122: A4 00                                            // ..

                        }
                    }


    6124: A5                                               // .

                }


    6125: A5                                               // .

                Return (
    6126: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }


    6127: 11 03 01 00                                      // ....

            Device (PXSX)
            {

    612B: 5B 82 1B 50 58 53 58                             // [..PXSX

                Name (_ADR, Zero)  // _ADR: Address

    6132: 08 5F 41 44 52 00                                // ._ADR.

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

    6138: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }
            }


    613F: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (HPME, 0, Serialized)
            {

    6148: 14 2D 48 50 4D 45 08                             // .-HPME.

                If (PMSX)
                {
                    Store (0xC8, Local0)

    614F: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                    While (Local0)
                    {
                        Store (One, PMSX) /* \_SB_.PCI0.RP05.PMSX */

    6159: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                        If (PMSX)
                        {

    6162: A0 07 50 4D 53 58                                // ..PMSX

                            Decrement (Local0)
                        }

    6168: 76 60                                            // v`

                        Else
                        {

    616A: A1 04                                            // ..

                            Store (Zero, Local0)
                        }
                    }


    616C: 70 00 60                                         // p.`

                    Notify (PXSX, 0x02) // Device Wake
                }
            }


    616F: 86 50 58 53 58 0A 02                             // .PXSX..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    6176: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }


    617D: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

    6186: 14 16 5F 50 52 54 00                             // .._PRT.

                If (PICM)
                {

    618D: A0 0A 50 49 43 4D                                // ..PICM

                    Return (AR08 ())
                }


    6193: A4 41 52 30 38                                   // .AR08

                Return (PR08 ())
            }
        }


    6198: A4 50 52 30 38                                   // .PR08

        Device (RP06)
        {

    619D: 5B 82 45 3A 52 50 30 36                          // [.E:RP06

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

    61A5: 14 1C 5F 41 44 52 00                             // .._ADR.

                If (
    61AC: A0 0D 92                                         // ...

LNotEqual (RPA5, Zero))
                {

    61AF: 93 52 50 41 35 00                                // .RPA5.

                    Return (RPA5) /* \RPA5 */
                }

    61B5: A4 52 50 41 35                                   // .RPA5

                Else
                {

    61BA: A1 07                                            // ..

                    Return (0x001C0005)
                }
            }


    61BC: A4 0C 05 00 1C 00                                // ......

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                Store (LTR6, LTRE) /* \_SB_.PCI0.LTRE */
                Store (PML6, LMSL) /* \_SB_.PCI0.LMSL */
                Store (PNL6, LNSL) /* \_SB_.PCI0.LNSL */
                Store (OBF6, OBFF) /* \_SB_.PCI0.OBFF */

    61C2: 14 47 04 5F 49 4E 49 00 70 4C 54 52 36 4C 54 52  // .G._INI.pLTR6LTR
    61D2: 45 70 50 4D 4C 36 4C 4D 53 4C 70 50 4E 4C 36 4C  // EpPML6LMSLpPNL6L
    61E2: 4E 53 4C 70 4F 42 46 36 4F 42 46 46              // NSLpOBF6OBFF

                If (CondRefOf (\_SB.PCI0.RP06.INIX))
                {
                    INIX ()
                }
            }


    61EE: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // ..[.\/._SB_PCI0R
    61FE: 50 30 36 49 4E 49 58 00 49 4E 49 58              // P06INIX.INIX

            OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    620A: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

            Field (PXCS, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x50), 
                L0SE,   1, 
                    ,   3, 
                LDIS,   1, 
                Offset (0x51), 
                Offset (0x52), 
                    ,   13, 
                LASX,   1, 
                Offset (0x5A), 
                ABPX,   1, 
                    ,   2, 
                PDCX,   1, 
                    ,   2, 
                PDSX,   1, 
                Offset (0x5B), 
                Offset (0x60), 
                Offset (0x62), 
                PSPX,   1, 
                Offset (0xA4), 
                D3HT,   2, 
                Offset (0xD8), 
                    ,   30, 
                HPEX,   1, 
                PMEX,   1, 
                Offset (0xE2), 
                    ,   2, 
                L23E,   1, 
                L23R,   1, 
                Offset (0x324), 
                    ,   3, 
                LEDM,   1
            }


    6215: 5B 81 46 07 50 58 43 53 00 56 44 49 44 20 00 40  // [.F.PXCS.VDID .@
    6225: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
    6235: 08 00 0D 4C 41 53 58 01 00 32 41 42 50 58 01 00  // ...LASX..2ABPX..
    6245: 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01 00  // .PDCX...PDSX....
    6255: 28 00 10 50 53 50 58 01 00 4F 20 44 33 48 54 02  // (..PSPX..O D3HT.
    6265: 00 4E 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00  // .N...HPEX.PMEX..
    6275: 30 00 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20  // 0..L23E.L23R... 
    6285: 01 00 03 4C 45 44 4D 01                          // ...LEDM.

            Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
            {
                Offset (0xDC), 
                    ,   30, 
                HPSX,   1, 
                PMSX,   1
            }


    628D: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    629D: 58 01 50 4D 53 58 01                             // X.PMSX.

            Name (LTRV, 
    62A4: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
            {
                Zero, 
                Zero, 
                Zero, 
                Zero
            })

    62A9: 12 06 04 00 00 00 00                             // .......

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    62B0: 14 47 20 5F 44 53 4D 0C                          // .G _DSM.


    62B8: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
    62BE: A0 44 1F 93 68                                   // .D..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {

    62C3: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    62D3: 19 C3 43 4D                                      // ..CM

                    Switch (ToInteger (Arg2))
                    {

    62D7: A2 4B 1D 01 70 99 6A 00 5F 54 5F 30              // .K..p.j._T_0

                        Case (Zero)
                        {

    62E3: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                            Name (OPTS, 
    62EC: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                            {
                                 0x00, 0x00                                       // ..
                            })

    62F1: 11 05 0A 02 00 00                                // ......

                            CreateBitField (OPTS, Zero, FUN0)

    62F7: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                            CreateBitField (OPTS, 0x04, FUN4)

    6301: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                            CreateBitField (OPTS, 0x06, FUN6)

    630C: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                            CreateBitField (OPTS, 0x08, FUN8)

    6317: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                            CreateBitField (OPTS, 0x09, FUN9)

    6322: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                            If (
    632D: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                            {
                                Store (One, FUN0) /* \_SB_.PCI0.RP06._DSM.FUN0 */

    6330: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                If (LTRE)
                                {

    633A: A0 0B 4C 54 52 45                                // ..LTRE

                                    Store (One, FUN6) /* \_SB_.PCI0.RP06._DSM.FUN6 */
                                }


    6340: 70 01 46 55 4E 36                                // p.FUN6

                                If (OBFF)
                                {

    6346: A0 0B 4F 42 46 46                                // ..OBFF

                                    Store (One, FUN4) /* \_SB_.PCI0.RP06._DSM.FUN4 */
                                }


    634C: 70 01 46 55 4E 34                                // p.FUN4

                                If (LEqual (ECR1, One))
                                {

    6352: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    635A: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {
                                        Store (One, FUN8) /* \_SB_.PCI0.RP06._DSM.FUN8 */

    635D: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                        Store (One, FUN9) /* \_SB_.PCI0.RP06._DSM.FUN9 */
                                    }
                                }
                            }


    6367: 70 01 46 55 4E 39                                // p.FUN9

                            Return (OPTS) /* \_SB_.PCI0.RP06._DSM.OPTS */
                        }

    636D: A4 4F 50 54 53                                   // .OPTS

                        Case
    6372: A1 4F 13                                         // .O.

 (0x04)
                        {

    6375: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                            If (
    637F: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                            {

    6382: 95 69 0A 02                                      // .i..

                                If (OBFF)
                                {

    6386: A0 1A 4F 42 46 46                                // ..OBFF

                                    Return (
    638C: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }

    638D: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    639D: 00 00 00 00                                      // ....

                                Else
                                {

    63A1: A1 16                                            // ..

                                    Return (
    63A3: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }
                            }
                        }

    63A4: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    63B4: 00 00 00 00                                      // ....

                        Case
    63B8: A1 49 0F                                         // .I.

 (0x06)
                        {

    63BB: A0 40 0B 93 5F 54 5F 30 0A 06                    // .@.._T_0..

                            If (
    63C5: A0 46 0A 92                                      // .F..

LGreaterEqual (Arg1, 0x02))
                            {

    63C9: 95 69 0A 02                                      // .i..

                                If (LTRE)
                                {

    63CD: A0 4A 09 4C 54 52 45                             // .J.LTRE

                                    If (LOr (LEqual (LMSL, Zero), 
    63D4: A0 42 04 91 93 4C 4D 53 4C 00                    // .B...LMSL.

LEqual (LNSL, Zero)))
                                    {

    63DE: 93 4C 4E 53 4C 00                                // .LNSL.

                                        If (LEqual (PCHS, One))
                                        {
                                            Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    63E4: A0 17 93 50 43 48 53 01 70 0B 46 08 4C 4D 53 4C  // ...PCHS.p.F.LMSL

                                            Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                        }

    63F4: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                        ElseIf
    63FC: A1 1A                                            // ..

 (LEqual (PCHS, 0x02))
                                        {
                                            Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    63FE: A0 18 93 50 43 48 53 0A 02 70 0B 03 10 4C 4D 53  // ...PCHS..p...LMS
    640E: 4C                                               // L

                                            Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                        }
                                    }

                                    Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    640F: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    641F: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                    Store (And (LMSL, 0x03FF), 
    6424: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    6434: 00                                               // .

Index (LTRV, One))
                                    Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    6435: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    6445: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                    Store (And (LNSL, 0x03FF), 
    6449: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    6459: 03 00                                            // ..

Index (LTRV, 0x03))

    645B: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                    Return (LTRV) /* \_SB_.PCI0.RP06.LTRV */
                                }

    6463: A4 4C 54 52 56                                   // .LTRV

                                Else
                                {

    6468: A1 03                                            // ..

                                    Return (Zero)
                                }
                            }
                        }

    646A: A4 00                                            // ..

                        Case
    646C: A1 45 04                                         // .E.

 (0x08)
                        {

    646F: A0 1A 93 5F 54 5F 30 0A 08                       // ..._T_0..

                            If (LEqual (ECR1, One))
                            {

    6478: A0 11 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    6480: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    6486: A4 00                                            // ..

                                Return (One)
                            }
                        }

    6488: A4 01                                            // ..

                        Case
    648A: A1 27                                            // .'

 (0x09)
                        {

    648C: A0 25 93 5F 54 5F 30 0A 09                       // .%._T_0..

                            If (LEqual (ECR1, One))
                            {

    6495: A0 1C 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    649D: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    64A3: A4 00                                            // ..

                                Return (
    64A5: A4                                               // .

Package (0x05)
                                {
                                    0xC350, 
                                    Ones, 
                                    Ones, 
                                    0xC350, 
                                    Ones
                                })
                            }
                        }


    64A6: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                    }
                }


    64B2: A5                                               // .

                Return (
    64B3: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }


    64B4: 11 03 01 00                                      // ....

            Device (PXSX)
            {

    64B8: 5B 82 1B 50 58 53 58                             // [..PXSX

                Name (_ADR, Zero)  // _ADR: Address

    64BF: 08 5F 41 44 52 00                                // ._ADR.

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

    64C5: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }
            }


    64CC: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (HPME, 0, Serialized)
            {

    64D5: 14 2D 48 50 4D 45 08                             // .-HPME.

                If (PMSX)
                {
                    Store (0xC8, Local0)

    64DC: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                    While (Local0)
                    {
                        Store (One, PMSX) /* \_SB_.PCI0.RP06.PMSX */

    64E6: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                        If (PMSX)
                        {

    64EF: A0 07 50 4D 53 58                                // ..PMSX

                            Decrement (Local0)
                        }

    64F5: 76 60                                            // v`

                        Else
                        {

    64F7: A1 04                                            // ..

                            Store (Zero, Local0)
                        }
                    }


    64F9: 70 00 60                                         // p.`

                    Notify (PXSX, 0x02) // Device Wake
                }
            }


    64FC: 86 50 58 53 58 0A 02                             // .PXSX..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    6503: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }


    650A: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

    6513: 14 30 5F 50 52 54 00                             // .0_PRT.

                If (LEqual (PCHS, One))
                {

    651A: A0 17 93 50 43 48 53 01                          // ...PCHS.

                    If (PICM)
                    {

    6522: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR09 ())
                    }


    6528: A4 41 52 30 39                                   // .AR09

                    Return (PR09 ())
                }

    652D: A4 50 52 30 39                                   // .PR09

                Else
                {

    6532: A1 11                                            // ..

                    If (PICM)
                    {

    6534: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR08 ())
                    }


    653A: A4 41 52 30 38                                   // .AR08

                    Return (PR08 ())
                }
            }
        }


    653F: A4 50 52 30 38                                   // .PR08

        Device (RP07)
        {

    6544: 5B 82 4B 38 52 50 30 37                          // [.K8RP07

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

    654C: 14 1C 5F 41 44 52 00                             // .._ADR.

                If (
    6553: A0 0D 92                                         // ...

LNotEqual (RPA6, Zero))
                {

    6556: 93 52 50 41 36 00                                // .RPA6.

                    Return (RPA6) /* \RPA6 */
                }

    655C: A4 52 50 41 36                                   // .RPA6

                Else
                {

    6561: A1 07                                            // ..

                    Return (0x001C0006)
                }
            }


    6563: A4 0C 06 00 1C 00                                // ......

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                Store (LTR7, LTRE) /* \_SB_.PCI0.LTRE */
                Store (PML7, LMSL) /* \_SB_.PCI0.LMSL */
                Store (PNL7, LNSL) /* \_SB_.PCI0.LNSL */
                Store (OBF7, OBFF) /* \_SB_.PCI0.OBFF */

    6569: 14 47 04 5F 49 4E 49 00 70 4C 54 52 37 4C 54 52  // .G._INI.pLTR7LTR
    6579: 45 70 50 4D 4C 37 4C 4D 53 4C 70 50 4E 4C 37 4C  // EpPML7LMSLpPNL7L
    6589: 4E 53 4C 70 4F 42 46 37 4F 42 46 46              // NSLpOBF7OBFF

                If (CondRefOf (\_SB.PCI0.RP07.INIX))
                {
                    INIX ()
                }
            }


    6595: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // ..[.\/._SB_PCI0R
    65A5: 50 30 37 49 4E 49 58 00 49 4E 49 58              // P07INIX.INIX

            OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    65B1: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

            Field (PXCS, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x50), 
                L0SE,   1, 
                    ,   3, 
                LDIS,   1, 
                Offset (0x51), 
                Offset (0x52), 
                    ,   13, 
                LASX,   1, 
                Offset (0x5A), 
                ABPX,   1, 
                    ,   2, 
                PDCX,   1, 
                    ,   2, 
                PDSX,   1, 
                Offset (0x5B), 
                Offset (0x60), 
                Offset (0x62), 
                PSPX,   1, 
                Offset (0xA4), 
                D3HT,   2, 
                Offset (0xD8), 
                    ,   30, 
                HPEX,   1, 
                PMEX,   1, 
                Offset (0xE2), 
                    ,   2, 
                L23E,   1, 
                L23R,   1, 
                Offset (0x324), 
                    ,   3, 
                LEDM,   1
            }


    65BC: 5B 81 46 07 50 58 43 53 00 56 44 49 44 20 00 40  // [.F.PXCS.VDID .@
    65CC: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
    65DC: 08 00 0D 4C 41 53 58 01 00 32 41 42 50 58 01 00  // ...LASX..2ABPX..
    65EC: 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01 00  // .PDCX...PDSX....
    65FC: 28 00 10 50 53 50 58 01 00 4F 20 44 33 48 54 02  // (..PSPX..O D3HT.
    660C: 00 4E 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00  // .N...HPEX.PMEX..
    661C: 30 00 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20  // 0..L23E.L23R... 
    662C: 01 00 03 4C 45 44 4D 01                          // ...LEDM.

            Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
            {
                Offset (0xDC), 
                    ,   30, 
                HPSX,   1, 
                PMSX,   1
            }


    6634: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    6644: 58 01 50 4D 53 58 01                             // X.PMSX.

            Name (LTRV, 
    664B: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
            {
                Zero, 
                Zero, 
                Zero, 
                Zero
            })

    6650: 12 06 04 00 00 00 00                             // .......

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    6657: 14 47 20 5F 44 53 4D 0C                          // .G _DSM.


    665F: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
    6665: A0 44 1F 93 68                                   // .D..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {

    666A: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    667A: 19 C3 43 4D                                      // ..CM

                    Switch (ToInteger (Arg2))
                    {

    667E: A2 4B 1D 01 70 99 6A 00 5F 54 5F 30              // .K..p.j._T_0

                        Case (Zero)
                        {

    668A: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                            Name (OPTS, 
    6693: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                            {
                                 0x00, 0x00                                       // ..
                            })

    6698: 11 05 0A 02 00 00                                // ......

                            CreateBitField (OPTS, Zero, FUN0)

    669E: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                            CreateBitField (OPTS, 0x04, FUN4)

    66A8: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                            CreateBitField (OPTS, 0x06, FUN6)

    66B3: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                            CreateBitField (OPTS, 0x08, FUN8)

    66BE: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                            CreateBitField (OPTS, 0x09, FUN9)

    66C9: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                            If (
    66D4: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                            {
                                Store (One, FUN0) /* \_SB_.PCI0.RP07._DSM.FUN0 */

    66D7: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                If (LTRE)
                                {

    66E1: A0 0B 4C 54 52 45                                // ..LTRE

                                    Store (One, FUN6) /* \_SB_.PCI0.RP07._DSM.FUN6 */
                                }


    66E7: 70 01 46 55 4E 36                                // p.FUN6

                                If (OBFF)
                                {

    66ED: A0 0B 4F 42 46 46                                // ..OBFF

                                    Store (One, FUN4) /* \_SB_.PCI0.RP07._DSM.FUN4 */
                                }


    66F3: 70 01 46 55 4E 34                                // p.FUN4

                                If (LEqual (ECR1, One))
                                {

    66F9: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    6701: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {
                                        Store (One, FUN8) /* \_SB_.PCI0.RP07._DSM.FUN8 */

    6704: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                        Store (One, FUN9) /* \_SB_.PCI0.RP07._DSM.FUN9 */
                                    }
                                }
                            }


    670E: 70 01 46 55 4E 39                                // p.FUN9

                            Return (OPTS) /* \_SB_.PCI0.RP07._DSM.OPTS */
                        }

    6714: A4 4F 50 54 53                                   // .OPTS

                        Case
    6719: A1 4F 13                                         // .O.

 (0x04)
                        {

    671C: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                            If (
    6726: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                            {

    6729: 95 69 0A 02                                      // .i..

                                If (OBFF)
                                {

    672D: A0 1A 4F 42 46 46                                // ..OBFF

                                    Return (
    6733: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }

    6734: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    6744: 00 00 00 00                                      // ....

                                Else
                                {

    6748: A1 16                                            // ..

                                    Return (
    674A: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }
                            }
                        }

    674B: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    675B: 00 00 00 00                                      // ....

                        Case
    675F: A1 49 0F                                         // .I.

 (0x06)
                        {

    6762: A0 40 0B 93 5F 54 5F 30 0A 06                    // .@.._T_0..

                            If (
    676C: A0 46 0A 92                                      // .F..

LGreaterEqual (Arg1, 0x02))
                            {

    6770: 95 69 0A 02                                      // .i..

                                If (LTRE)
                                {

    6774: A0 4A 09 4C 54 52 45                             // .J.LTRE

                                    If (LOr (LEqual (LMSL, Zero), 
    677B: A0 42 04 91 93 4C 4D 53 4C 00                    // .B...LMSL.

LEqual (LNSL, Zero)))
                                    {

    6785: 93 4C 4E 53 4C 00                                // .LNSL.

                                        If (LEqual (PCHS, One))
                                        {
                                            Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    678B: A0 17 93 50 43 48 53 01 70 0B 46 08 4C 4D 53 4C  // ...PCHS.p.F.LMSL

                                            Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                        }

    679B: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                        ElseIf
    67A3: A1 1A                                            // ..

 (LEqual (PCHS, 0x02))
                                        {
                                            Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    67A5: A0 18 93 50 43 48 53 0A 02 70 0B 03 10 4C 4D 53  // ...PCHS..p...LMS
    67B5: 4C                                               // L

                                            Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                        }
                                    }

                                    Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    67B6: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    67C6: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                    Store (And (LMSL, 0x03FF), 
    67CB: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    67DB: 00                                               // .

Index (LTRV, One))
                                    Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    67DC: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    67EC: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                    Store (And (LNSL, 0x03FF), 
    67F0: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    6800: 03 00                                            // ..

Index (LTRV, 0x03))

    6802: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                    Return (LTRV) /* \_SB_.PCI0.RP07.LTRV */
                                }

    680A: A4 4C 54 52 56                                   // .LTRV

                                Else
                                {

    680F: A1 03                                            // ..

                                    Return (Zero)
                                }
                            }
                        }

    6811: A4 00                                            // ..

                        Case
    6813: A1 45 04                                         // .E.

 (0x08)
                        {

    6816: A0 1A 93 5F 54 5F 30 0A 08                       // ..._T_0..

                            If (LEqual (ECR1, One))
                            {

    681F: A0 11 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    6827: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    682D: A4 00                                            // ..

                                Return (One)
                            }
                        }

    682F: A4 01                                            // ..

                        Case
    6831: A1 27                                            // .'

 (0x09)
                        {

    6833: A0 25 93 5F 54 5F 30 0A 09                       // .%._T_0..

                            If (LEqual (ECR1, One))
                            {

    683C: A0 1C 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    6844: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    684A: A4 00                                            // ..

                                Return (
    684C: A4                                               // .

Package (0x05)
                                {
                                    0xC350, 
                                    Ones, 
                                    Ones, 
                                    0xC350, 
                                    Ones
                                })
                            }
                        }


    684D: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                    }
                }


    6859: A5                                               // .

                Return (
    685A: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }


    685B: 11 03 01 00                                      // ....

            Device (PXSX)
            {

    685F: 5B 82 1B 50 58 53 58                             // [..PXSX

                Name (_ADR, Zero)  // _ADR: Address

    6866: 08 5F 41 44 52 00                                // ._ADR.

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

    686C: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }
            }


    6873: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (HPME, 0, Serialized)
            {

    687C: 14 2D 48 50 4D 45 08                             // .-HPME.

                If (PMSX)
                {
                    Store (0xC8, Local0)

    6883: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                    While (Local0)
                    {
                        Store (One, PMSX) /* \_SB_.PCI0.RP07.PMSX */

    688D: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                        If (PMSX)
                        {

    6896: A0 07 50 4D 53 58                                // ..PMSX

                            Decrement (Local0)
                        }

    689C: 76 60                                            // v`

                        Else
                        {

    689E: A1 04                                            // ..

                            Store (Zero, Local0)
                        }
                    }


    68A0: 70 00 60                                         // p.`

                    Notify (PXSX, 0x02) // Device Wake
                }
            }


    68A3: 86 50 58 53 58 0A 02                             // .PXSX..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    68AA: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }


    68B1: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

    68BA: 14 16 5F 50 52 54 00                             // .._PRT.

                If (PICM)
                {

    68C1: A0 0A 50 49 43 4D                                // ..PICM

                    Return (AR0E) /* \_SB_.AR0E */
                }


    68C7: A4 41 52 30 45                                   // .AR0E

                Return (PR0E) /* \_SB_.PR0E */
            }
        }


    68CC: A4 50 52 30 45                                   // .PR0E

        Device (RP08)
        {

    68D1: 5B 82 4B 38 52 50 30 38                          // [.K8RP08

            Method (_ADR, 0, NotSerialized)  // _ADR: Address
            {

    68D9: 14 1C 5F 41 44 52 00                             // .._ADR.

                If (
    68E0: A0 0D 92                                         // ...

LNotEqual (RPA7, Zero))
                {

    68E3: 93 52 50 41 37 00                                // .RPA7.

                    Return (RPA7) /* \RPA7 */
                }

    68E9: A4 52 50 41 37                                   // .RPA7

                Else
                {

    68EE: A1 07                                            // ..

                    Return (0x001C0007)
                }
            }


    68F0: A4 0C 07 00 1C 00                                // ......

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                Store (LTR8, LTRE) /* \_SB_.PCI0.LTRE */
                Store (PML8, LMSL) /* \_SB_.PCI0.LMSL */
                Store (PNL8, LNSL) /* \_SB_.PCI0.LNSL */
                Store (OBF8, OBFF) /* \_SB_.PCI0.OBFF */

    68F6: 14 47 04 5F 49 4E 49 00 70 4C 54 52 38 4C 54 52  // .G._INI.pLTR8LTR
    6906: 45 70 50 4D 4C 38 4C 4D 53 4C 70 50 4E 4C 38 4C  // EpPML8LMSLpPNL8L
    6916: 4E 53 4C 70 4F 42 46 38 4F 42 46 46              // NSLpOBF8OBFF

                If (CondRefOf (\_SB.PCI0.RP08.INIX))
                {
                    INIX ()
                }
            }


    6922: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // ..[.\/._SB_PCI0R
    6932: 50 30 38 49 4E 49 58 00 49 4E 49 58              // P08INIX.INIX

            OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

    693E: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

            Field (PXCS, AnyAcc, NoLock, Preserve)
            {
                VDID,   32, 
                Offset (0x50), 
                L0SE,   1, 
                    ,   3, 
                LDIS,   1, 
                Offset (0x51), 
                Offset (0x52), 
                    ,   13, 
                LASX,   1, 
                Offset (0x5A), 
                ABPX,   1, 
                    ,   2, 
                PDCX,   1, 
                    ,   2, 
                PDSX,   1, 
                Offset (0x5B), 
                Offset (0x60), 
                Offset (0x62), 
                PSPX,   1, 
                Offset (0xA4), 
                D3HT,   2, 
                Offset (0xD8), 
                    ,   30, 
                HPEX,   1, 
                PMEX,   1, 
                Offset (0xE2), 
                    ,   2, 
                L23E,   1, 
                L23R,   1, 
                Offset (0x324), 
                    ,   3, 
                LEDM,   1
            }


    6949: 5B 81 46 07 50 58 43 53 00 56 44 49 44 20 00 40  // [.F.PXCS.VDID .@
    6959: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
    6969: 08 00 0D 4C 41 53 58 01 00 32 41 42 50 58 01 00  // ...LASX..2ABPX..
    6979: 02 50 44 43 58 01 00 02 50 44 53 58 01 00 01 00  // .PDCX...PDSX....
    6989: 28 00 10 50 53 50 58 01 00 4F 20 44 33 48 54 02  // (..PSPX..O D3HT.
    6999: 00 4E 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00  // .N...HPEX.PMEX..
    69A9: 30 00 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20  // 0..L23E.L23R... 
    69B9: 01 00 03 4C 45 44 4D 01                          // ...LEDM.

            Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
            {
                Offset (0xDC), 
                    ,   30, 
                HPSX,   1, 
                PMSX,   1
            }


    69C1: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
    69D1: 58 01 50 4D 53 58 01                             // X.PMSX.

            Name (LTRV, 
    69D8: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
            {
                Zero, 
                Zero, 
                Zero, 
                Zero
            })

    69DD: 12 06 04 00 00 00 00                             // .......

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    69E4: 14 47 20 5F 44 53 4D 0C                          // .G _DSM.


    69EC: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
    69F2: A0 44 1F 93 68                                   // .D..h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {

    69F7: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    6A07: 19 C3 43 4D                                      // ..CM

                    Switch (ToInteger (Arg2))
                    {

    6A0B: A2 4B 1D 01 70 99 6A 00 5F 54 5F 30              // .K..p.j._T_0

                        Case (Zero)
                        {

    6A17: A0 4E 08 93 5F 54 5F 30 00                       // .N.._T_0.

                            Name (OPTS, 
    6A20: 08 4F 50 54 53                                   // .OPTS

Buffer (0x02)
                            {
                                 0x00, 0x00                                       // ..
                            })

    6A25: 11 05 0A 02 00 00                                // ......

                            CreateBitField (OPTS, Zero, FUN0)

    6A2B: 8D 4F 50 54 53 00 46 55 4E 30                    // .OPTS.FUN0

                            CreateBitField (OPTS, 0x04, FUN4)

    6A35: 8D 4F 50 54 53 0A 04 46 55 4E 34                 // .OPTS..FUN4

                            CreateBitField (OPTS, 0x06, FUN6)

    6A40: 8D 4F 50 54 53 0A 06 46 55 4E 36                 // .OPTS..FUN6

                            CreateBitField (OPTS, 0x08, FUN8)

    6A4B: 8D 4F 50 54 53 0A 08 46 55 4E 38                 // .OPTS..FUN8

                            CreateBitField (OPTS, 0x09, FUN9)

    6A56: 8D 4F 50 54 53 0A 09 46 55 4E 39                 // .OPTS..FUN9

                            If (
    6A61: A0 3F 92                                         // .?.

LGreaterEqual (Arg1, 0x02))
                            {
                                Store (One, FUN0) /* \_SB_.PCI0.RP08._DSM.FUN0 */

    6A64: 95 69 0A 02 70 01 46 55 4E 30                    // .i..p.FUN0

                                If (LTRE)
                                {

    6A6E: A0 0B 4C 54 52 45                                // ..LTRE

                                    Store (One, FUN6) /* \_SB_.PCI0.RP08._DSM.FUN6 */
                                }


    6A74: 70 01 46 55 4E 36                                // p.FUN6

                                If (OBFF)
                                {

    6A7A: A0 0B 4F 42 46 46                                // ..OBFF

                                    Store (One, FUN4) /* \_SB_.PCI0.RP08._DSM.FUN4 */
                                }


    6A80: 70 01 46 55 4E 34                                // p.FUN4

                                If (LEqual (ECR1, One))
                                {

    6A86: A0 1A 93 45 43 52 31 01                          // ...ECR1.

                                    If (
    6A8E: A0 12 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                                    {
                                        Store (One, FUN8) /* \_SB_.PCI0.RP08._DSM.FUN8 */

    6A91: 95 69 0A 03 70 01 46 55 4E 38                    // .i..p.FUN8

                                        Store (One, FUN9) /* \_SB_.PCI0.RP08._DSM.FUN9 */
                                    }
                                }
                            }


    6A9B: 70 01 46 55 4E 39                                // p.FUN9

                            Return (OPTS) /* \_SB_.PCI0.RP08._DSM.OPTS */
                        }

    6AA1: A4 4F 50 54 53                                   // .OPTS

                        Case
    6AA6: A1 4F 13                                         // .O.

 (0x04)
                        {

    6AA9: A0 42 04 93 5F 54 5F 30 0A 04                    // .B.._T_0..

                            If (
    6AB3: A0 38 92                                         // .8.

LGreaterEqual (Arg1, 0x02))
                            {

    6AB6: 95 69 0A 02                                      // .i..

                                If (OBFF)
                                {

    6ABA: A0 1A 4F 42 46 46                                // ..OBFF

                                    Return (
    6AC0: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }

    6AC1: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 08  // ................
    6AD1: 00 00 00 00                                      // ....

                                Else
                                {

    6AD5: A1 16                                            // ..

                                    Return (
    6AD7: A4                                               // .

Buffer (0x10)
                                    {
                                        /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                        /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                                    })
                                }
                            }
                        }

    6AD8: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    6AE8: 00 00 00 00                                      // ....

                        Case
    6AEC: A1 49 0F                                         // .I.

 (0x06)
                        {

    6AEF: A0 40 0B 93 5F 54 5F 30 0A 06                    // .@.._T_0..

                            If (
    6AF9: A0 46 0A 92                                      // .F..

LGreaterEqual (Arg1, 0x02))
                            {

    6AFD: 95 69 0A 02                                      // .i..

                                If (LTRE)
                                {

    6B01: A0 4A 09 4C 54 52 45                             // .J.LTRE

                                    If (LOr (LEqual (LMSL, Zero), 
    6B08: A0 42 04 91 93 4C 4D 53 4C 00                    // .B...LMSL.

LEqual (LNSL, Zero)))
                                    {

    6B12: 93 4C 4E 53 4C 00                                // .LNSL.

                                        If (LEqual (PCHS, One))
                                        {
                                            Store (0x0846, LMSL) /* \_SB_.PCI0.LMSL */

    6B18: A0 17 93 50 43 48 53 01 70 0B 46 08 4C 4D 53 4C  // ...PCHS.p.F.LMSL

                                            Store (0x0846, LNSL) /* \_SB_.PCI0.LNSL */
                                        }

    6B28: 70 0B 46 08 4C 4E 53 4C                          // p.F.LNSL

                                        ElseIf
    6B30: A1 1A                                            // ..

 (LEqual (PCHS, 0x02))
                                        {
                                            Store (0x1003, LMSL) /* \_SB_.PCI0.LMSL */

    6B32: A0 18 93 50 43 48 53 0A 02 70 0B 03 10 4C 4D 53  // ...PCHS..p...LMS
    6B42: 4C                                               // L

                                            Store (0x1003, LNSL) /* \_SB_.PCI0.LNSL */
                                        }
                                    }

                                    Store (And (ShiftRight (LMSL, 0x0A), 0x07), 
    6B43: 70 0B 03 10 4C 4E 53 4C 70 7B 7A 4C 4D 53 4C 0A  // p...LNSLp{zLMSL.
    6B53: 0A 00 0A 07 00                                   // .....

Index (LTRV, Zero))
                                    Store (And (LMSL, 0x03FF), 
    6B58: 88 4C 54 52 56 00 00 70 7B 4C 4D 53 4C 0B FF 03  // .LTRV..p{LMSL...
    6B68: 00                                               // .

Index (LTRV, One))
                                    Store (And (ShiftRight (LNSL, 0x0A), 0x07), 
    6B69: 88 4C 54 52 56 01 00 70 7B 7A 4C 4E 53 4C 0A 0A  // .LTRV..p{zLNSL..
    6B79: 00 0A 07 00                                      // ....

Index (LTRV, 0x02))
                                    Store (And (LNSL, 0x03FF), 
    6B7D: 88 4C 54 52 56 0A 02 00 70 7B 4C 4E 53 4C 0B FF  // .LTRV...p{LNSL..
    6B8D: 03 00                                            // ..

Index (LTRV, 0x03))

    6B8F: 88 4C 54 52 56 0A 03 00                          // .LTRV...

                                    Return (LTRV) /* \_SB_.PCI0.RP08.LTRV */
                                }

    6B97: A4 4C 54 52 56                                   // .LTRV

                                Else
                                {

    6B9C: A1 03                                            // ..

                                    Return (Zero)
                                }
                            }
                        }

    6B9E: A4 00                                            // ..

                        Case
    6BA0: A1 45 04                                         // .E.

 (0x08)
                        {

    6BA3: A0 1A 93 5F 54 5F 30 0A 08                       // ..._T_0..

                            If (LEqual (ECR1, One))
                            {

    6BAC: A0 11 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    6BB4: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    6BBA: A4 00                                            // ..

                                Return (One)
                            }
                        }

    6BBC: A4 01                                            // ..

                        Case
    6BBE: A1 27                                            // .'

 (0x09)
                        {

    6BC0: A0 25 93 5F 54 5F 30 0A 09                       // .%._T_0..

                            If (LEqual (ECR1, One))
                            {

    6BC9: A0 1C 93 45 43 52 31 01                          // ...ECR1.

                                If (LLess (Arg1, 0x03))
                                {

    6BD1: A0 07 95 69 0A 03                                // ...i..

                                    Return (Zero)
                                }


    6BD7: A4 00                                            // ..

                                Return (
    6BD9: A4                                               // .

Package (0x05)
                                {
                                    0xC350, 
                                    Ones, 
                                    Ones, 
                                    0xC350, 
                                    Ones
                                })
                            }
                        }


    6BDA: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

                    }
                }


    6BE6: A5                                               // .

                Return (
    6BE7: A4                                               // .

Buffer (One)
                {
                     0x00                                             // .
                })
            }


    6BE8: 11 03 01 00                                      // ....

            Device (PXSX)
            {

    6BEC: 5B 82 1B 50 58 53 58                             // [..PXSX

                Name (_ADR, Zero)  // _ADR: Address

    6BF3: 08 5F 41 44 52 00                                // ._ADR.

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

    6BF9: 14 0F 5F 50 52 57 00                             // .._PRW.

                    Return (GPRW (0x69, 0x04))
                }
            }


    6C00: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (HPME, 0, Serialized)
            {

    6C09: 14 2D 48 50 4D 45 08                             // .-HPME.

                If (PMSX)
                {
                    Store (0xC8, Local0)

    6C10: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                    While (Local0)
                    {
                        Store (One, PMSX) /* \_SB_.PCI0.RP08.PMSX */

    6C1A: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                        If (PMSX)
                        {

    6C23: A0 07 50 4D 53 58                                // ..PMSX

                            Decrement (Local0)
                        }

    6C29: 76 60                                            // v`

                        Else
                        {

    6C2B: A1 04                                            // ..

                            Store (Zero, Local0)
                        }
                    }


    6C2D: 70 00 60                                         // p.`

                    Notify (PXSX, 0x02) // Device Wake
                }
            }


    6C30: 86 50 58 53 58 0A 02                             // .PXSX..

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

    6C37: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x69, 0x04))
            }


    6C3E: A4 47 50 52 57 0A 69 0A 04                       // .GPRW.i..

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

    6C47: 14 16 5F 50 52 54 00                             // .._PRT.

                If (PICM)
                {

    6C4E: A0 0A 50 49 43 4D                                // ..PICM

                    Return (AR0F) /* \_SB_.AR0F */
                }


    6C54: A4 41 52 30 46                                   // .AR0F

                Return (PR0F) /* \_SB_.PR0F */
            }
        }


    6C59: A4 50 52 30 46                                   // .PR0F

        Device (SAT0)
        {

    6C5E: 5B 82 42 41 53 41 54 30                          // [.BASAT0

            Name (_ADR, 0x001F0002)  // _ADR: Address

    6C66: 08 5F 41 44 52 0C 02 00 1F 00                    // ._ADR.....

            Name (PRBI, Zero)

    6C70: 08 50 52 42 49 00                                // .PRBI.

            Name (PRBD, Zero)

    6C76: 08 50 52 42 44 00                                // .PRBD.

            Name (PCMD, Zero)

    6C7C: 08 50 43 4D 44 00                                // .PCMD.

            Device (PRT0)
            {

    6C82: 5B 82 0D 50 52 54 30                             // [..PRT0

                Name (_ADR, 0xFFFF)  // _ADR: Address
            }


    6C89: 08 5F 41 44 52 0B FF FF                          // ._ADR...

            Device (PRT1)
            {

    6C91: 5B 82 0F 50 52 54 31                             // [..PRT1

                Name (_ADR, 0x0001FFFF)  // _ADR: Address
            }


    6C98: 08 5F 41 44 52 0C FF FF 01 00                    // ._ADR.....

            Device (PRT2)
            {

    6CA2: 5B 82 0F 50 52 54 32                             // [..PRT2

                Name (_ADR, 0x0002FFFF)  // _ADR: Address
            }


    6CA9: 08 5F 41 44 52 0C FF FF 02 00                    // ._ADR.....

            Device (PRT3)
            {

    6CB3: 5B 82 0F 50 52 54 33                             // [..PRT3

                Name (_ADR, 0x0003FFFF)  // _ADR: Address
            }


    6CBA: 08 5F 41 44 52 0C FF FF 03 00                    // ._ADR.....

            Device (PRT4)
            {

    6CC4: 5B 82 0F 50 52 54 34                             // [..PRT4

                Name (_ADR, 0x0004FFFF)  // _ADR: Address
            }


    6CCB: 08 5F 41 44 52 0C FF FF 04 00                    // ._ADR.....

            Device (PRT5)
            {

    6CD5: 5B 82 0F 50 52 54 35                             // [..PRT5

                Name (_ADR, 0x0005FFFF)  // _ADR: Address
            }


    6CDC: 08 5F 41 44 52 0C FF FF 05 00                    // ._ADR.....

            Method (RDCA, 5, Serialized)
            {

    6CE6: 14 4A 0A 52 44 43 41 0D                          // .J.RDCA.

                OperationRegion (RPAC, SystemMemory, Add (GPCB (), Add (0x000FA100, Arg1)), 0x04)

    6CEE: 5B 80 52 50 41 43 00 72 47 50 43 42 72 0C 00 A1  // [.RPAC.rGPCBr...
    6CFE: 0F 00 69 00 00 0A 04                             // ..i....

                Field (RPAC, DWordAcc, Lock, Preserve)
                {
                    RPCD,   32
                }


    6D05: 5B 81 0B 52 50 41 43 13 52 50 43 44 20           // [..RPAC.RPCD 

                OperationRegion (EPAC, SystemMemory, Add (GPCB (), 0x000FA308), 0x08)

    6D12: 5B 80 45 50 41 43 00 72 47 50 43 42 0C 08 A3 0F  // [.EPAC.rGPCB....
    6D22: 00 00 0A 08                                      // ....

                Field (EPAC, DWordAcc, Lock, Preserve)
                {
                    CAIR,   32, 
                    CADR,   32
                }


    6D26: 5B 81 10 45 50 41 43 13 43 41 49 52 20 43 41 44  // [..EPAC.CAIR CAD
    6D36: 52 20                                            // R 

                If (LEqual (Arg4, Zero))
                {

    6D38: A0 09 93 6C 00                                   // ...l.

                    Return (RPCD) /* \_SB_.PCI0.SAT0.RDCA.RPCD */
                }

    6D3D: A4 52 50 43 44                                   // .RPCD

                ElseIf
    6D42: A1 4E 04                                         // .N.

 (LEqual (Arg4, 0x02))
                {
                    Store (Arg1, CAIR) /* \_SB_.PCI0.SAT0.RDCA.CAIR */

    6D45: A0 10 93 6C 0A 02 70 69 43 41 49 52              // ...l..piCAIR

                    Return (CADR) /* \_SB_.PCI0.SAT0.RDCA.CADR */
                }

    6D51: A4 43 41 44 52                                   // .CADR

                ElseIf
    6D56: A1 3A                                            // .:

 (LEqual (Arg4, One))
                {
                    And (Arg2, RPCD, Local0)
                    Or (Arg3, Local0, Local0)

    6D58: A0 15 93 6C 01 7B 6A 52 50 43 44 60 7D 6B 60 60  // ...l.{jRPCD`}k``

                    Store (Local0, RPCD) /* \_SB_.PCI0.SAT0.RDCA.RPCD */
                }

    6D68: 70 60 52 50 43 44                                // p`RPCD

                ElseIf
    6D6E: A1 22                                            // ."

 (LEqual (Arg4, 0x03))
                {
                    Store (Arg1, CAIR) /* \_SB_.PCI0.SAT0.RDCA.CAIR */
                    And (Arg2, CADR, Local0)
                    Or (Arg3, Local0, Local0)

    6D70: A0 1C 93 6C 0A 03 70 69 43 41 49 52 7B 6A 43 41  // ...l..piCAIR{jCA
    6D80: 44 52 60 7D 6B 60 60                             // DR`}k``

                    Store (Local0, CADR) /* \_SB_.PCI0.SAT0.RDCA.CADR */
                }

    6D87: 70 60 43 41 44 52                                // p`CADR

                Else
                {

    6D8D: A1 03                                            // ..

                    Return (Zero)
                }
            }


    6D8F: A4 00                                            // ..

            Method (RPD0, 0, Serialized)
            {
                RDCA (Zero, 0xA4, 0xFFFFFFFC, Zero, One)
            }


    6D91: 14 14 52 50 44 30 08 52 44 43 41 00 0A A4 0C FC  // ..RPD0.RDCA.....
    6DA1: FF FF FF 00 01                                   // .....

            Method (RPD3, 0, Serialized)
            {
                RDCA (Zero, 0xA4, 0xFFFFFFFC, 0x03, One)
            }


    6DA6: 14 15 52 50 44 33 08 52 44 43 41 00 0A A4 0C FC  // ..RPD3.RDCA.....
    6DB6: FF FF FF 0A 03 01                                // ......

            Method (EPD0, 0, Serialized)
            {
                RDCA (Zero, Add (PMCP, 0x04), 0xFFFFFFFC, Zero, 0x03)
            }


    6DBC: 14 1B 45 50 44 30 08 52 44 43 41 00 72 50 4D 43  // ..EPD0.RDCA.rPMC
    6DCC: 50 0A 04 00 0C FC FF FF FF 00 0A 03              // P...........

            Method (EPD3, 0, Serialized)
            {
                RDCA (Zero, Add (PMCP, 0x04), 0xFFFFFFFC, 0x03, 0x03)
            }


    6DD8: 14 1C 45 50 44 33 08 52 44 43 41 00 72 50 4D 43  // ..EPD3.RDCA.rPMC
    6DE8: 50 0A 04 00 0C FC FF FF FF 0A 03 0A 03           // P............

            Method (CNRS, 0, Serialized)
            {

    6DF5: 14 46 1C 43 4E 52 53 08                          // .F.CNRS.

                If (LEqual (PCIT, Zero))
                {

    6DFD: A0 09 93 50 43 49 54 00                          // ...PCIT.

                    Return (Zero)
                }

                RDCA (Zero, 0x10, Zero, Zero, 0x03)
                RDCA (Zero, 0x14, Zero, Zero, 0x03)
                RDCA (Zero, 0x18, Zero, Zero, 0x03)
                RDCA (Zero, 0x1C, Zero, Zero, 0x03)
                RDCA (Zero, 0x20, Zero, Zero, 0x03)
                RDCA (Zero, 0x24, Zero, Zero, 0x03)
                RDCA (Zero, 0x04, 0xFFFFFFF8, PCMD, 0x03)
                RDCA (Zero, PRBI, Zero, PRBD, 0x03)

    6E05: A4 00 52 44 43 41 00 0A 10 00 00 0A 03 52 44 43  // ..RDCA.......RDC
    6E15: 41 00 0A 14 00 00 0A 03 52 44 43 41 00 0A 18 00  // A.......RDCA....
    6E25: 00 0A 03 52 44 43 41 00 0A 1C 00 00 0A 03 52 44  // ...RDCA.......RD
    6E35: 43 41 00 0A 20 00 00 0A 03 52 44 43 41 00 0A 24  // CA.. ....RDCA..$
    6E45: 00 00 0A 03 52 44 43 41 00 0A 04 0C F8 FF FF FF  // ....RDCA........
    6E55: 50 43 4D 44 0A 03 52 44 43 41 00 50 52 42 49 00  // PCMD..RDCA.PRBI.
    6E65: 50 52 42 44 0A 03                                // PRBD..

                If (
    6E6B: A0 19 92                                         // ...

LNotEqual (PMSI, Zero))
                {
                    RDCA (Zero, Add (PMSI, 0x08), Zero, Zero, 0x03)
                }


    6E6E: 93 50 4D 53 49 00 52 44 43 41 00 72 50 4D 53 49  // .PMSI.RDCA.rPMSI
    6E7E: 0A 08 00 00 00 0A 03                             // .......

                If (
    6E85: A0 45 05 92                                      // .E..

LNotEqual (PL1P, Zero))
                {
                    RDCA (Zero, Add (PL1P, 0x0C), 0xFFFFFF00, PL1B, 0x03)
                    RDCA (Zero, Add (PL1P, 0x08), 0x0F, And (PL1A, 0xFFFFFFF0), 0x03)
                    RDCA (Zero, Add (PL1P, 0x08), 0xFFFFFFFF, PL1A, 0x03)
                }


    6E89: 93 50 4C 31 50 00 52 44 43 41 00 72 50 4C 31 50  // .PL1P.RDCA.rPL1P
    6E99: 0A 0C 00 0C 00 FF FF FF 50 4C 31 42 0A 03 52 44  // ........PL1B..RD
    6EA9: 43 41 00 72 50 4C 31 50 0A 08 00 0A 0F 7B 50 4C  // CA.rPL1P.....{PL
    6EB9: 31 41 0C F0 FF FF FF 00 0A 03 52 44 43 41 00 72  // 1A........RDCA.r
    6EC9: 50 4C 31 50 0A 08 00 0C FF FF FF FF 50 4C 31 41  // PL1P........PL1A
    6ED9: 0A 03                                            // ..

                If (
    6EDB: A0 20 92                                         // . .

LNotEqual (PLTP, Zero))
                {
                    RDCA (Zero, Add (PLTP, 0x04), 0xFFFFFFFF, PLTD, 0x03)
                }

                RDCA (Zero, Add (PCLP, 0x10), 0xFFFFFEBF, And (PEPL, 0xFFFC), 0x03)
                RDCA (Zero, Add (PCLP, 0x28), 0xFFFFFBFF, PED2, 0x03)
                RDCA (Zero, Add (PCLP, 0x08), 0xFFFFFF1F, PED1, 0x03)
                RDCA (Zero, 0x50, 0xFFFFFFBF, PRPL, One)
                RDCA (Zero, 0x68, 0xFFFFFBFF, PRDC, One)
                RDCA (Zero, 0xD4, 0xFFFFFFBF, 0x40, One)
                RDCA (Zero, 0x50, 0xFFFFFFDF, 0x20, One)

    6EDE: 93 50 4C 54 50 00 52 44 43 41 00 72 50 4C 54 50  // .PLTP.RDCA.rPLTP
    6EEE: 0A 04 00 0C FF FF FF FF 50 4C 54 44 0A 03 52 44  // ........PLTD..RD
    6EFE: 43 41 00 72 50 43 4C 50 0A 10 00 0C BF FE FF FF  // CA.rPCLP........
    6F0E: 7B 50 45 50 4C 0B FC FF 00 0A 03 52 44 43 41 00  // {PEPL......RDCA.
    6F1E: 72 50 43 4C 50 0A 28 00 0C FF FB FF FF 50 45 44  // rPCLP.(......PED
    6F2E: 32 0A 03 52 44 43 41 00 72 50 43 4C 50 0A 08 00  // 2..RDCA.rPCLP...
    6F3E: 0C 1F FF FF FF 50 45 44 31 0A 03 52 44 43 41 00  // .....PED1..RDCA.
    6F4E: 0A 50 0C BF FF FF FF 50 52 50 4C 01 52 44 43 41  // .P.....PRPL.RDCA
    6F5E: 00 0A 68 0C FF FB FF FF 50 52 44 43 01 52 44 43  // ..h.....PRDC.RDC
    6F6E: 41 00 0A D4 0C BF FF FF FF 0A 40 01 52 44 43 41  // A.........@.RDCA
    6F7E: 00 0A 50 0C DF FF FF FF 0A 20 01                 // ..P...... .

                While (LEqual (And (RDCA (Zero, 0x52, Zero, Zero, Zero), 0x2000), Zero))
                {

    6F89: A2 16 93 7B 52 44 43 41 00 0A 52 00 00 00 0B 00  // ...{RDCA..R.....
    6F99: 20 00 00                                         //  ..

                    Stall (0x0A)
                }

                RDCA (Zero, Add (PCLP, 0x10), 0xFFFFFFFC, And (PEPL, 0x03), 0x03)
            }


    6F9C: 5B 21 0A 0A 52 44 43 41 00 72 50 43 4C 50 0A 10  // [!..RDCA.rPCLP..
    6FAC: 00 0C FC FF FF FF 7B 50 45 50 4C 0A 03 00 0A 03  // ......{PEPL.....

            Device (NVM0)
            {

    6FBC: 5B 82 44 0B 4E 56 4D 30                          // [.D.NVM0

                Name (_ADR, 0x00C1FFFF)  // _ADR: Address

    6FC4: 08 5F 41 44 52 0C FF FF C1 00                    // ._ADR.....

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {

    6FCE: 14 4A 06 5F 50 53 33 08                          // .J._PS3.

                    If (LEqual (PCIT, Zero))
                    {

    6FD6: A0 09 93 50 43 49 54 00                          // ...PCIT.

                        Return (Zero)
                    }

                    Store (RDCA (Zero, 0x04, Zero, Zero, 0x02), PCMD) /* \_SB_.PCI0.SAT0.PCMD */

    6FDE: A4 00 70 52 44 43 41 00 0A 04 00 00 0A 02 50 43  // ..pRDCA.......PC
    6FEE: 4D 44                                            // MD

                    If (LEqual (PCIT, One))
                    {
                        Store (0x24, PRBI) /* \_SB_.PCI0.SAT0.PRBI */

    6FF0: A0 1E 93 50 43 49 54 01 70 0A 24 50 52 42 49     // ...PCIT.p.$PRBI

                        Store (RDCA (Zero, 0x24, Zero, Zero, 0x02), PRBD) /* \_SB_.PCI0.SAT0.PRBD */
                    }

    6FFF: 70 52 44 43 41 00 0A 24 00 00 0A 02 50 52 42 44  // pRDCA..$....PRBD

                    ElseIf
    700F: A1 21                                            // .!

 (LEqual (PCIT, 0x02))
                    {
                        Store (0x10, PRBI) /* \_SB_.PCI0.SAT0.PRBI */

    7011: A0 1F 93 50 43 49 54 0A 02 70 0A 10 50 52 42 49  // ...PCIT..p..PRBI

                        Store (RDCA (Zero, 0x10, Zero, Zero, 0x02), PRBD) /* \_SB_.PCI0.SAT0.PRBD */
                    }

                    EPD3 ()
                    RPD3 ()
                }


    7021: 70 52 44 43 41 00 0A 10 00 00 0A 02 50 52 42 44  // pRDCA.......PRBD
    7031: 45 50 44 33 52 50 44 33                          // EPD3RPD3

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {

    7039: 14 38 5F 50 53 30 08                             // .8_PS0.

                    If (LEqual (PCIT, Zero))
                    {

    7040: A0 09 93 50 43 49 54 00                          // ...PCIT.

                        Return (Zero)
                    }

                    RPD0 ()
                    EPD0 ()
                    Store (RDCA (Zero, Add (PMCP, 0x04), Zero, Zero, 0x02), Local0)

    7048: A4 00 52 50 44 30 45 50 44 30 70 52 44 43 41 00  // ..RPD0EPD0pRDCA.
    7058: 72 50 4D 43 50 0A 04 00 00 00 0A 02 60           // rPMCP.......`

                    If (LEqual (And (Local0, 0x08), Zero))
                    {
                        CNRS ()
                    }
                }
            }
        }


    7065: A0 0C 93 7B 60 0A 08 00 00 43 4E 52 53           // ...{`....CNRS

        Device (SAT1)
        {

    7072: 5B 82 0F 53 41 54 31                             // [..SAT1

            Name (_ADR, 0x001F0005)  // _ADR: Address
        }


    7079: 08 5F 41 44 52 0C 05 00 1F 00                    // ._ADR.....

        Device (SBUS)
        {

    7083: 5B 82 44 47 53 42 55 53                          // [.DGSBUS

            Name (_ADR, 0x001F0003)  // _ADR: Address

    708B: 08 5F 41 44 52 0C 03 00 1F 00                    // ._ADR.....

            OperationRegion (SMBP, PCI_Config, 0x40, 0xC0)

    7095: 5B 80 53 4D 42 50 02 0A 40 0A C0                 // [.SMBP..@..

            Field (SMBP, DWordAcc, NoLock, Preserve)
            {
                    ,   2, 
                I2CE,   1
            }


    70A0: 5B 81 0D 53 4D 42 50 03 00 02 49 32 43 45 01     // [..SMBP...I2CE.

            OperationRegion (SMPB, PCI_Config, 0x20, 0x04)

    70AF: 5B 80 53 4D 50 42 02 0A 20 0A 04                 // [.SMPB.. ..

            Field (SMPB, DWordAcc, NoLock, Preserve)
            {
                    ,   5, 
                SBAR,   11
            }


    70BA: 5B 81 0D 53 4D 50 42 03 00 05 53 42 41 52 0B     // [..SMPB...SBAR.

            OperationRegion (SMBI, SystemIO, ShiftLeft (SBAR, 0x05), 0x10)

    70C9: 5B 80 53 4D 42 49 01 79 53 42 41 52 0A 05 00 0A  // [.SMBI.ySBAR....
    70D9: 10                                               // .

            Field (SMBI, ByteAcc, NoLock, Preserve)
            {
                HSTS,   8, 
                Offset (0x02), 
                HCON,   8, 
                HCOM,   8, 
                TXSA,   8, 
                DAT0,   8, 
                DAT1,   8, 
                HBDR,   8, 
                PECR,   8, 
                RXSA,   8, 
                SDAT,   16
            }


    70DA: 5B 81 3A 53 4D 42 49 01 48 53 54 53 08 00 08 48  // [.:SMBI.HSTS...H
    70EA: 43 4F 4E 08 48 43 4F 4D 08 54 58 53 41 08 44 41  // CON.HCOM.TXSA.DA
    70FA: 54 30 08 44 41 54 31 08 48 42 44 52 08 50 45 43  // T0.DAT1.HBDR.PEC
    710A: 52 08 52 58 53 41 08 53 44 41 54 10              // R.RXSA.SDAT.

            Method (SSXB, 2, Serialized)
            {

    7116: 14 44 04 53 53 58 42 0A                          // .D.SSXB.

                If (STRT ())
                {

    711E: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (0x48, HCON) /* \_SB_.PCI0.SBUS.HCON */

    7124: A4 00 70 00 49 32 43 45 70 0A BF 48 53 54 53 70  // ..p.I2CEp..HSTSp
    7134: 68 54 58 53 41 70 69 48 43 4F 4D 70 0A 48 48 43  // hTXSApiHCOMp.HHC
    7144: 4F 4E                                            // ON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    7146: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    7156: 53                                               // S

                    Return (One)
                }


    7157: A4 01                                            // ..

                Return (Zero)
            }


    7159: A4 00                                            // ..

            Method (SRXB, 1, Serialized)
            {

    715B: 14 48 04 53 52 58 42 09                          // .H.SRXB.

                If (STRT ())
                {

    7163: A0 09 53 54 52 54                                // ..STRT

                    Return (0xFFFF)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Or (Arg0, One), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (0x44, HCON) /* \_SB_.PCI0.SBUS.HCON */

    7169: A4 0B FF FF 70 00 49 32 43 45 70 0A BF 48 53 54  // ....p.I2CEp..HST
    7179: 53 70 7D 68 01 00 54 58 53 41 70 0A 44 48 43 4F  // Sp}h..TXSAp.DHCO
    7189: 4E                                               // N

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    718A: A0 15 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    719A: 53                                               // S

                    Return (DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                }


    719B: A4 44 41 54 30                                   // .DAT0

                Return (0xFFFF)
            }


    71A0: A4 0B FF FF                                      // ....

            Method (SWRB, 3, Serialized)
            {

    71A4: 14 4A 04 53 57 52 42 0B                          // .J.SWRB.

                If (STRT ())
                {

    71AC: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (Arg2, DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                Store (0x48, HCON) /* \_SB_.PCI0.SBUS.HCON */

    71B2: A4 00 70 00 49 32 43 45 70 0A BF 48 53 54 53 70  // ..p.I2CEp..HSTSp
    71C2: 68 54 58 53 41 70 69 48 43 4F 4D 70 6A 44 41 54  // hTXSApiHCOMpjDAT
    71D2: 30 70 0A 48 48 43 4F 4E                          // 0p.HHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    71DA: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    71EA: 53                                               // S

                    Return (One)
                }


    71EB: A4 01                                            // ..

                Return (Zero)
            }


    71ED: A4 00                                            // ..

            Method (SRDB, 2, Serialized)
            {

    71EF: 14 4E 04 53 52 44 42 0A                          // .N.SRDB.

                If (STRT ())
                {

    71F7: A0 09 53 54 52 54                                // ..STRT

                    Return (0xFFFF)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Or (Arg0, One), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (0x48, HCON) /* \_SB_.PCI0.SBUS.HCON */

    71FD: A4 0B FF FF 70 00 49 32 43 45 70 0A BF 48 53 54  // ....p.I2CEp..HST
    720D: 53 70 7D 68 01 00 54 58 53 41 70 69 48 43 4F 4D  // Sp}h..TXSApiHCOM
    721D: 70 0A 48 48 43 4F 4E                             // p.HHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    7224: A0 15 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    7234: 53                                               // S

                    Return (DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                }


    7235: A4 44 41 54 30                                   // .DAT0

                Return (0xFFFF)
            }


    723A: A4 0B FF FF                                      // ....

            Method (SWRW, 3, Serialized)
            {

    723E: 14 48 05 53 57 52 57 0B                          // .H.SWRW.

                If (STRT ())
                {

    7246: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                And (Arg2, 0xFF, DAT1) /* \_SB_.PCI0.SBUS.DAT1 */
                And (ShiftRight (Arg2, 0x08), 0xFF, DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                Store (0x4C, HCON) /* \_SB_.PCI0.SBUS.HCON */

    724C: A4 00 70 00 49 32 43 45 70 0A BF 48 53 54 53 70  // ..p.I2CEp..HSTSp
    725C: 68 54 58 53 41 70 69 48 43 4F 4D 7B 6A 0A FF 44  // hTXSApiHCOM{j..D
    726C: 41 54 31 7B 7A 6A 0A 08 00 0A FF 44 41 54 30 70  // AT1{zj.....DAT0p
    727C: 0A 4C 48 43 4F 4E                                // .LHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    7282: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    7292: 53                                               // S

                    Return (One)
                }


    7293: A4 01                                            // ..

                Return (Zero)
            }


    7295: A4 00                                            // ..

            Method (SRDW, 2, Serialized)
            {

    7297: 14 4A 05 53 52 44 57 0A                          // .J.SRDW.

                If (STRT ())
                {

    729F: A0 09 53 54 52 54                                // ..STRT

                    Return (0xFFFF)
                }

                Store (Zero, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Or (Arg0, One), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (0x4C, HCON) /* \_SB_.PCI0.SBUS.HCON */

    72A5: A4 0B FF FF 70 00 49 32 43 45 70 0A BF 48 53 54  // ....p.I2CEp..HST
    72B5: 53 70 7D 68 01 00 54 58 53 41 70 69 48 43 4F 4D  // Sp}h..TXSApiHCOM
    72C5: 70 0A 4C 48 43 4F 4E                             // p.LHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    72CC: A0 1F 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    72DC: 53                                               // S

                    Return (
    72DD: A4                                               // .

Or (ShiftLeft (DAT0, 0x08), DAT1))
                }


    72DE: 7D 79 44 41 54 30 0A 08 00 44 41 54 31 00        // }yDAT0...DAT1.

                Return (0xFFFFFFFF)
            }


    72EC: A4 0C FF FF FF FF                                // ......

            Method (SBLW, 4, Serialized)
            {

    72F2: 14 4A 09 53 42 4C 57 0C                          // .J.SBLW.

                If (STRT ())
                {

    72FA: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Arg3, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (SizeOf (Arg2), DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
                Store (Zero, Local1)
                Store (DerefOf (
    7300: A4 00 70 6B 49 32 43 45 70 0A BF 48 53 54 53 70  // ..pkI2CEp..HSTSp
    7310: 68 54 58 53 41 70 69 48 43 4F 4D 70 87 6A 44 41  // hTXSApiHCOMp.jDA
    7320: 54 30 70 00 61 70 83                             // T0p.ap.

Index (Arg2, Zero)), HBDR) /* \_SB_.PCI0.SBUS.HBDR */
                Store (0x54, HCON) /* \_SB_.PCI0.SBUS.HCON */

    7327: 88 6A 00 00 48 42 44 52 70 0A 54 48 43 4F 4E     // .j..HBDRp.THCON

                While (LGreater (SizeOf (Arg2), Local1))
                {
                    Store (0x0FA0, Local0)

    7336: A2 41 04 94 87 6A 61 70 0B A0 0F 60              // .A...jap...`

                    While (LAnd (LNot (
    7342: A2 12 90 92                                      // ....

And (HSTS, 0x80)), Local0))
                    {
                        Decrement (Local0)

    7346: 7B 48 53 54 53 0A 80 00 60 76 60                 // {HSTS...`v`

                        Stall (0x32)
                    }


    7351: 5B 21 0A 32                                      // [!.2

                    If (LNot (Local0))
                    {
                        KILL ()

    7355: A0 09 92 60 4B 49 4C 4C                          // ...`KILL

                        Return (Zero)
                    }

                    Store (0x80, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                    Increment (Local1)

    735D: A4 00 70 0A 80 48 53 54 53 75 61                 // ..p..HSTSua

                    If (LGreater (SizeOf (Arg2), Local1))
                    {

    7368: A0 0F 94 87 6A 61                                // ....ja

                        Store (DerefOf (
    736E: 70 83                                            // p.

Index (Arg2, Local1)), HBDR) /* \_SB_.PCI0.SBUS.HBDR */
                    }
                }


    7370: 88 6A 61 00 48 42 44 52                          // .ja.HBDR

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    7378: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    7388: 53                                               // S

                    Return (One)
                }


    7389: A4 01                                            // ..

                Return (Zero)
            }


    738B: A4 00                                            // ..

            Method (SBLR, 3, Serialized)
            {

    738D: 14 40 0D 53 42 4C 52 0B                          // .@.SBLR.

                Name (TBUF, 
    7395: 08 54 42 55 46                                   // .TBUF

Buffer (0x0100){})

    739A: 11 04 0B 00 01                                   // .....

                If (STRT ())
                {

    739F: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Arg2, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
                Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (Or (Arg0, One), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
                Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
                Store (0x54, HCON) /* \_SB_.PCI0.SBUS.HCON */
                Store (0x0FA0, Local0)

    73A5: A4 00 70 6A 49 32 43 45 70 0A BF 48 53 54 53 70  // ..pjI2CEp..HSTSp
    73B5: 7D 68 01 00 54 58 53 41 70 69 48 43 4F 4D 70 0A  // }h..TXSApiHCOMp.
    73C5: 54 48 43 4F 4E 70 0B A0 0F 60                    // THCONp...`

                While (LAnd (LNot (
    73CF: A2 12 90 92                                      // ....

And (HSTS, 0x80)), Local0))
                {
                    Decrement (Local0)

    73D3: 7B 48 53 54 53 0A 80 00 60 76 60                 // {HSTS...`v`

                    Stall (0x32)
                }


    73DE: 5B 21 0A 32                                      // [!.2

                If (LNot (Local0))
                {
                    KILL ()

    73E2: A0 09 92 60 4B 49 4C 4C                          // ...`KILL

                    Return (Zero)
                }

                Store (DAT0, 
    73EA: A4 00 70 44 41 54 30                             // ..pDAT0

Index (TBUF, Zero))
                Store (0x80, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
                Store (One, Local1)

    73F1: 88 54 42 55 46 00 00 70 0A 80 48 53 54 53 70 01  // .TBUF..p..HSTSp.
    7401: 61                                               // a

                While (LLess (Local1, 
    7402: A2 43 04 95 61                                   // .C..a

DerefOf (
    7407: 83                                               // .

Index (TBUF, Zero))))
                {
                    Store (0x0FA0, Local0)

    7408: 88 54 42 55 46 00 00 70 0B A0 0F 60              // .TBUF..p...`

                    While (LAnd (LNot (
    7414: A2 12 90 92                                      // ....

And (HSTS, 0x80)), Local0))
                    {
                        Decrement (Local0)

    7418: 7B 48 53 54 53 0A 80 00 60 76 60                 // {HSTS...`v`

                        Stall (0x32)
                    }


    7423: 5B 21 0A 32                                      // [!.2

                    If (LNot (Local0))
                    {
                        KILL ()

    7427: A0 09 92 60 4B 49 4C 4C                          // ...`KILL

                        Return (Zero)
                    }

                    Store (HBDR, 
    742F: A4 00 70 48 42 44 52                             // ..pHBDR

Index (TBUF, Local1))
                    Store (0x80, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    7436: 88 54 42 55 46 61 00 70 0A 80 48 53 54 53        // .TBUFa.p..HSTS

                    Increment (Local1)
                }


    7444: 75 61                                            // ua

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */

    7446: A0 15 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
    7456: 53                                               // S

                    Return (TBUF) /* \_SB_.PCI0.SBUS.SBLR.TBUF */
                }


    7457: A4 54 42 55 46                                   // .TBUF

                Return (Zero)
            }


    745C: A4 00                                            // ..

            Method (STRT, 0, Serialized)
            {
                Store (0xC8, Local0)

    745E: 14 4F 04 53 54 52 54 08 70 0A C8 60              // .O.STRT.p..`

                While (Local0)
                {

    746A: A2 1D 60                                         // ..`

                    If (And (HSTS, 0x40))
                    {
                        Decrement (Local0)
                        Sleep (One)

    746D: A0 15 7B 48 53 54 53 0A 40 00 76 60 5B 22 01     // ..{HSTS.@.v`[".

                        If (LEqual (Local0, Zero))
                        {

    747C: A0 06 93 60 00                                   // ...`.

                            Return (One)
                        }
                    }

    7481: A4 01                                            // ..

                    Else
                    {

    7483: A1 04                                            // ..

                        Store (Zero, Local0)
                    }
                }

                Store (0x0FA0, Local0)

    7485: 70 00 60 70 0B A0 0F 60                          // p.`p...`

                While (Local0)
                {

    748D: A2 1E 60                                         // ..`

                    If (And (HSTS, One))
                    {
                        Decrement (Local0)
                        Stall (0x32)

    7490: A0 17 7B 48 53 54 53 01 00 76 60 5B 21 0A 32     // ..{HSTS..v`[!.2

                        If (LEqual (Local0, Zero))
                        {
                            KILL ()
                        }
                    }

    749F: A0 08 93 60 00 4B 49 4C 4C                       // ...`.KILL

                    Else
                    {

    74A8: A1 03                                            // ..

                        Return (Zero)
                    }
                }


    74AA: A4 00                                            // ..

                Return (One)
            }


    74AC: A4 01                                            // ..

            Method (COMP, 0, Serialized)
            {
                Store (0x0FA0, Local0)

    74AE: 14 2D 43 4F 4D 50 08 70 0B A0 0F 60              // .-COMP.p...`

                While (Local0)
                {

    74BA: A2 1F 60                                         // ..`

                    If (And (HSTS, 0x02))
                    {

    74BD: A0 0B 7B 48 53 54 53 0A 02 00                    // ..{HSTS...

                        Return (One)
                    }

    74C7: A4 01                                            // ..

                    Else
                    {
                        Decrement (Local0)
                        Stall (0x32)

    74C9: A1 10 76 60 5B 21 0A 32                          // ..v`[!.2

                        If (LEqual (Local0, Zero))
                        {
                            KILL ()
                        }
                    }
                }


    74D1: A0 08 93 60 00 4B 49 4C 4C                       // ...`.KILL

                Return (Zero)
            }


    74DA: A4 00                                            // ..

            Method (KILL, 0, Serialized)
            {
                Or (HCON, 0x02, HCON) /* \_SB_.PCI0.SBUS.HCON */

    74DC: 14 1C 4B 49 4C 4C 08 7D 48 43 4F 4E 0A 02 48 43  // ..KILL.}HCON..HC
    74EC: 4F 4E                                            // ON

                Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
            }
        }
    }


    74EE: 7D 48 53 54 53 0A FF 48 53 54 53                 // }HSTS..HSTS

    Scope (_SB.PCI0.LPCB)
    {

    74F9: 10 8D 42 01 2F 03 5F 53 42 5F 50 43 49 30 4C 50  // ..B./._SB_PCI0LP
    7509: 43 42                                            // CB

        Device (EC0)
        {

    750B: 5B 82 49 F9 45 43 30 5F                          // [.I.EC0_

            Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID

    7513: 08 5F 48 49 44 0C 41 D0 0C 09                    // ._HID.A...

            Name (_CRS, 
    751D: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0062,             // Range Minimum
                    0x0062,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0066,             // Range Minimum
                    0x0066,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    )
            })

    7522: 11 15 0A 12 47 01 62 00 62 00 00 01 47 01 66 00  // ....G.b.b...G.f.
    7532: 66 00 00 01 79 00                                // f...y.

            Name (_GPE, One)  // _GPE: General Purpose Events

    7538: 08 5F 47 50 45 01                                // ._GPE.

            Name (SEL0, 0xF0)

    753E: 08 53 45 4C 30 0A F0                             // .SEL0..

            Name (BFLG, Zero)

    7545: 08 42 46 4C 47 00                                // .BFLG.

            Name (RDBT, Zero)

    754B: 08 52 44 42 54 00                                // .RDBT.

            Name (RDWL, Zero)

    7551: 08 52 44 57 4C 00                                // .RDWL.

            Name (RD3G, Zero)

    7557: 08 52 44 33 47 00                                // .RD3G.

            Name (RDRF, Zero)

    755D: 08 52 44 52 46 00                                // .RDRF.

            Name (PB10, Zero)

    7563: 08 50 42 31 30 00                                // .PB10.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                WTGP (0x53, One)
            }


    7569: 14 0D 5F 49 4E 49 00 57 54 47 50 0A 53 01        // .._INI.WTGP.S.

            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {

    7577: 14 48 11 5F 52 45 47 02                          // .H._REG.

                If (LEqual (Arg0, 0x03))
                {
                    Store (Arg1, Local0)

    757F: A0 19 93 68 0A 03 70 69 60                       // ...h..pi`

                    If (Local0)
                    {

    7588: A0 08 60                                         // ..`

                        Store (One, ECOK) /* \_SB_.ECOK */
                    }

    758B: 70 01 45 43 4F 4B                                // p.ECOK

                    Else
                    {

    7591: A1 07                                            // ..

                        Store (Zero, ECOK) /* \_SB_.ECOK */
                    }
                }


    7593: 70 00 45 43 4F 4B                                // p.ECOK

                If (ECOK)
                {
                    Acquire (MUT1, 0xFFFF)

    7599: A0 4B 0B 45 43 4F 4B 5B 23 4D 55 54 31 FF FF     // .K.ECOK[#MUT1..

                    If (
    75A8: A0 2E 92                                         // ...

LGreaterEqual (OSYS, 0x07DC))
                    {
                        Store (One, OSW8) /* \_SB_.PCI0.LPCB.EC0_.OSW8 */
                        Store (One, ^^^^RDWL) /* \_SB_.RDWL */
                        Store (One, ^^^^RDBT) /* \_SB_.RDBT */

    75AB: 95 4F 53 59 53 0B DC 07 70 01 4F 53 57 38 70 01  // .OSYS...p.OSW8p.
    75BB: 5E 5E 5E 5E 52 44 57 4C 70 01 5E 5E 5E 5E 52 44  // ^^^^RDWLp.^^^^RD
    75CB: 42 54                                            // BT

                        Store (One, ^^^^RD3G) /* \_SB_.RD3G */
                    }

    75CD: 70 01 5E 5E 5E 5E 52 44 33 47                    // p.^^^^RD3G

                    Else
                    {

    75D7: A1 07                                            // ..

                        Store (Zero, OSW8) /* \_SB_.PCI0.LPCB.EC0_.OSW8 */
                    }


    75D9: 70 00 4F 53 57 38                                // p.OSW8

                    If (
    75DF: A0 17 92                                         // ...

LGreaterEqual (OSYS, 0x07DD))
                    {
                        Store (0x55, TPRS) /* \_SB_.TPRS */

    75E2: 95 4F 53 59 53 0B DD 07 70 0A 55 54 50 52 53     // .OSYS...p.UTPRS

                        Store (One, W81F) /* \_SB_.W81F */
                    }

    75F1: 70 01 57 38 31 46                                // p.W81F

                    Else
                    {
                        Store (Zero, TPRS) /* \_SB_.TPRS */

    75F7: A1 0D 70 00 54 50 52 53                          // ..p.TPRS

                        Store (Zero, W81F) /* \_SB_.W81F */
                    }


    75FF: 70 00 57 38 31 46                                // p.W81F

                    If (
    7605: A0 10 92                                         // ...

LGreaterEqual (OSYS, 0x07DD))
                    {

    7608: 95 4F 53 59 53 0B DD 07                          // .OSYS...

                        Store (One, OS81) /* \_SB_.PCI0.LPCB.EC0_.OS81 */
                    }

    7610: 70 01 4F 53 38 31                                // p.OS81

                    Else
                    {

    7616: A1 07                                            // ..

                        Store (Zero, OS81) /* \_SB_.PCI0.LPCB.EC0_.OS81 */
                    }

                    ILID ()
                    Store (^^^^RDWL, WLST) /* \_SB_.PCI0.LPCB.EC0_.WLST */
                    Store (^^^^RDBT, BLTS) /* \_SB_.PCI0.LPCB.EC0_.BLTS */
                    Store (^^^^RD3G, ED3G) /* \_SB_.PCI0.LPCB.EC0_.ED3G */
                    Store (One, CPLE) /* \_SB_.PCI0.LPCB.EC0_.CPLE */

    7618: 70 00 4F 53 38 31 49 4C 49 44 70 5E 5E 5E 5E 52  // p.OS81ILIDp^^^^R
    7628: 44 57 4C 57 4C 53 54 70 5E 5E 5E 5E 52 44 42 54  // DWLWLSTp^^^^RDBT
    7638: 42 4C 54 53 70 5E 5E 5E 5E 52 44 33 47 45 44 33  // BLTSp^^^^RD3GED3
    7648: 47 70 01 43 50 4C 45                             // Gp.CPLE

                    Release (MUT1)
                }


    764F: 5B 27 4D 55 54 31                                // ['MUT1

                If (
    7655: A0 21 92                                         // .!.

LNotEqual (LINX, One))
                {

    7658: 93 4C 49 4E 58 01                                // .LINX.

                    If (LAnd (LEqual (BBTP, 0x02), 
    765E: A0 18 90 93 42 42 54 50 0A 02                    // ....BBTP..

LEqual (OSYS, 0x07D9)))
                    {

    7668: 93 4F 53 59 53 0B D9 07                          // .OSYS...

                        Store (0xD9, SSMP) /* \SSMP */
                    }
                }


    7670: 70 0A D9 53 53 4D 50                             // p..SSMP

                If (LEqual (OSYS, 0x07D9))
                {

    7677: A0 10 93 4F 53 59 53 0B D9 07                    // ...OSYS...

                    Store (0x07, CSBM) /* \_SB_.CSBM */
                }

    7681: 70 0A 07 43 53 42 4D                             // p..CSBM

                Else
                {

    7688: A1 07                                            // ..

                    Store (Zero, CSBM) /* \_SB_.CSBM */
                }
            }


    768A: 70 00 43 53 42 4D                                // p.CSBM

            OperationRegion (VERM, EmbeddedControl, Zero, 0xFF)

    7690: 5B 80 56 45 52 4D 03 00 0A FF                    // [.VERM....

            Field (VERM, ByteAcc, NoLock, Preserve)
            {
                LNPS,   8
            }


    769A: 5B 81 0B 56 45 52 4D 01 4C 4E 50 53 08           // [..VERM.LNPS.

            OperationRegion (ERAM, SystemMemory, 0xFF708500, 0x0100)

    76A7: 5B 80 45 52 41 4D 00 0C 00 85 70 FF 0B 00 01     // [.ERAM....p....

            Field (ERAM, ByteAcc, NoLock, Preserve)
            {
                TESM,   8, 
                Offset (0x04), 
                CMCM,   8, 
                CMD1,   8, 
                CMD2,   8, 
                CMD3,   8, 
                Offset (0x18), 
                SMPR,   8, 
                SMST,   8, 
                SMAD,   8, 
                SMCM,   8, 
                SMD0,   256, 
                BCNT,   8, 
                SMAA,   8, 
                BATD,   16, 
                ACDF,   1, 
                Offset (0x41), 
                    ,   1, 
                APBF,   1, 
                    ,   3, 
                FLS4,   1, 
                Offset (0x42), 
                FLS3,   1, 
                    ,   1, 
                S0EF,   1, 
                    ,   4, 
                PECE,   1, 
                    ,   1, 
                LMAT,   1, 
                Offset (0x45), 
                ECPF,   8, 
                Offset (0x48), 
                KBBL,   1, 
                    ,   1, 
                RFST,   1, 
                Offset (0x49), 
                ERCT,   8, 
                Offset (0x4B), 
                TBLV,   8, 
                ARCD,   1, 
                    ,   3, 
                DOCK,   1, 
                LANC,   1, 
                LIDT,   1, 
                CRTS,   1, 
                Offset (0x4E), 
                TJMX,   3, 
                    ,   1, 
                VGAF,   1, 
                EDTS,   1, 
                Offset (0x53), 
                DOFF,   8, 
                Offset (0x58), 
                CTMP,   8, 
                RG59,   8, 
                Offset (0x60), 
                WLAN,   1, 
                BLTH,   1, 
                ST3G,   1, 
                CPLE,   1, 
                    ,   1, 
                ED3G,   1, 
                WLST,   1, 
                BLTS,   1, 
                    ,   1, 
                DPBL,   1, 
                    ,   4, 
                NIWM,   1, 
                TOHP,   1, 
                Offset (0x63), 
                WLPH,   1, 
                BBST,   1, 
                ODST,   1, 
                GPSW,   1, 
                Offset (0x64), 
                Offset (0x70), 
                BTMD,   8, 
                MBTS,   1, 
                MBTF,   1, 
                    ,   1, 
                MFCF,   1, 
                    ,   2, 
                MBDX,   1, 
                MBAD,   1, 
                MBTC,   1, 
                    ,   4, 
                MBPC,   1, 
                Offset (0x77), 
                BA1C,   8, 
                MCYC,   16, 
                MTMP,   16, 
                MDAT,   16, 
                MCUR,   16, 
                MBRM,   16, 
                MBVG,   16, 
                BHVC,   16, 
                BLVC,   16, 
                LFCC,   16, 
                BTSN,   16, 
                BTDC,   16, 
                BTDV,   16, 
                BTMN,   8, 
                Offset (0xBB), 
                TARU,   8, 
                TARN,   8, 
                TARD,   8, 
                Offset (0xC0), 
                ROMD,   8, 
                Offset (0xD0), 
                EBPL,   1, 
                    ,   1, 
                OS81,   1, 
                TPRD,   1, 
                Offset (0xD1), 
                    ,   1, 
                ECS4,   1, 
                ECS3,   1, 
                RFAT,   1, 
                OSW8,   1, 
                WOLF,   1, 
                WOWL,   1, 
                Offset (0xD5), 
                ECDY,   8, 
                DBPL,   8, 
                CPTS,   8
            }


    76B6: 5B 81 4E 20 45 52 41 4D 01 54 45 53 4D 08 00 18  // [.N ERAM.TESM...
    76C6: 43 4D 43 4D 08 43 4D 44 31 08 43 4D 44 32 08 43  // CMCM.CMD1.CMD2.C
    76D6: 4D 44 33 08 00 40 08 53 4D 50 52 08 53 4D 53 54  // MD3..@.SMPR.SMST
    76E6: 08 53 4D 41 44 08 53 4D 43 4D 08 53 4D 44 30 40  // .SMAD.SMCM.SMD0@
    76F6: 10 42 43 4E 54 08 53 4D 41 41 08 42 41 54 44 10  // .BCNT.SMAA.BATD.
    7706: 41 43 44 46 01 00 07 00 01 41 50 42 46 01 00 03  // ACDF.....APBF...
    7716: 46 4C 53 34 01 00 02 46 4C 53 33 01 00 01 53 30  // FLS4...FLS3...S0
    7726: 45 46 01 00 04 50 45 43 45 01 00 01 4C 4D 41 54  // EF...PECE...LMAT
    7736: 01 00 0E 45 43 50 46 08 00 10 4B 42 42 4C 01 00  // ...ECPF...KBBL..
    7746: 01 52 46 53 54 01 00 05 45 52 43 54 08 00 08 54  // .RFST...ERCT...T
    7756: 42 4C 56 08 41 52 43 44 01 00 03 44 4F 43 4B 01  // BLV.ARCD...DOCK.
    7766: 4C 41 4E 43 01 4C 49 44 54 01 43 52 54 53 01 00  // LANC.LIDT.CRTS..
    7776: 08 54 4A 4D 58 03 00 01 56 47 41 46 01 45 44 54  // .TJMX...VGAF.EDT
    7786: 53 01 00 22 44 4F 46 46 08 00 20 43 54 4D 50 08  // S.."DOFF.. CTMP.
    7796: 52 47 35 39 08 00 30 57 4C 41 4E 01 42 4C 54 48  // RG59..0WLAN.BLTH
    77A6: 01 53 54 33 47 01 43 50 4C 45 01 00 01 45 44 33  // .ST3G.CPLE...ED3
    77B6: 47 01 57 4C 53 54 01 42 4C 54 53 01 00 01 44 50  // G.WLST.BLTS...DP
    77C6: 42 4C 01 00 04 4E 49 57 4D 01 54 4F 48 50 01 00  // BL...NIWM.TOHP..
    77D6: 08 57 4C 50 48 01 42 42 53 54 01 4F 44 53 54 01  // .WLPH.BBST.ODST.
    77E6: 47 50 53 57 01 00 04 00 40 06 42 54 4D 44 08 4D  // GPSW....@.BTMD.M
    77F6: 42 54 53 01 4D 42 54 46 01 00 01 4D 46 43 46 01  // BTS.MBTF...MFCF.
    7806: 00 02 4D 42 44 58 01 4D 42 41 44 01 4D 42 54 43  // ..MBDX.MBAD.MBTC
    7816: 01 00 04 4D 42 50 43 01 00 22 42 41 31 43 08 4D  // ...MBPC.."BA1C.M
    7826: 43 59 43 10 4D 54 4D 50 10 4D 44 41 54 10 4D 43  // CYC.MTMP.MDAT.MC
    7836: 55 52 10 4D 42 52 4D 10 4D 42 56 47 10 42 48 56  // UR.MBRM.MBVG.BHV
    7846: 43 10 42 4C 56 43 10 4C 46 43 43 10 42 54 53 4E  // C.BLVC.LFCC.BTSN
    7856: 10 42 54 44 43 10 42 54 44 56 10 42 54 4D 4E 08  // .BTDC.BTDV.BTMN.
    7866: 00 40 15 54 41 52 55 08 54 41 52 4E 08 54 41 52  // .@.TARU.TARN.TAR
    7876: 44 08 00 10 52 4F 4D 44 08 00 48 07 45 42 50 4C  // D...ROMD..H.EBPL
    7886: 01 00 01 4F 53 38 31 01 54 50 52 44 01 00 04 00  // ...OS81.TPRD....
    7896: 01 45 43 53 34 01 45 43 53 33 01 52 46 41 54 01  // .ECS4.ECS3.RFAT.
    78A6: 4F 53 57 38 01 57 4F 4C 46 01 57 4F 57 4C 01 00  // OSW8.WOLF.WOWL..
    78B6: 19 45 43 44 59 08 44 42 50 4C 08 43 50 54 53 08  // .ECDY.DBPL.CPTS.

            Scope (\_SB)
            {

    78C6: 10 46 2C 5C 5F 53 42 5F                          // .F,\_SB_

                OperationRegion (EROM, SystemMemory, 0xFF708900, 0x0100)

    78CE: 5B 80 45 52 4F 4D 00 0C 00 89 70 FF 0B 00 01     // [.EROM....p....

                Field (EROM, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x29), 
                    SPRG,   8, 
                    Offset (0x40), 
                    BCL0,   8, 
                    BCL1,   8, 
                    BCL2,   8, 
                    BCL3,   8, 
                    BCL4,   8, 
                    BCL5,   8, 
                    BCL6,   8, 
                    BCL7,   8, 
                    BCL8,   8, 
                    BCL9,   8, 
                    Offset (0xF6), 
                    C6SW,   8, 
                    Offset (0xFC), 
                    TPVD,   8, 
                    SIMU,   8, 
                    Offset (0xFF), 
                    PJNA,   8
                }


    78DD: 5B 81 4F 05 45 52 4F 4D 01 00 48 14 53 50 52 47  // [.O.EROM..H.SPRG
    78ED: 08 00 40 0B 42 43 4C 30 08 42 43 4C 31 08 42 43  // ..@.BCL0.BCL1.BC
    78FD: 4C 32 08 42 43 4C 33 08 42 43 4C 34 08 42 43 4C  // L2.BCL3.BCL4.BCL
    790D: 35 08 42 43 4C 36 08 42 43 4C 37 08 42 43 4C 38  // 5.BCL6.BCL7.BCL8
    791D: 08 42 43 4C 39 08 00 40 56 43 36 53 57 08 00 28  // .BCL9..@VC6SW..(
    792D: 54 50 56 44 08 53 49 4D 55 08 00 08 50 4A 4E 41  // TPVD.SIMU...PJNA
    793D: 08                                               // .

                OperationRegion (EMBX, SystemMemory, 0xFF708A00, 0x0100)

    793E: 5B 80 45 4D 42 58 00 0C 00 8A 70 FF 0B 00 01     // [.EMBX....p....

                Field (EMBX, ByteAcc, NoLock, Preserve)
                {
                    Offset (0x80), 
                    ODB0,   8, 
                    ODB1,   8, 
                    ODB2,   8, 
                    ODB3,   8, 
                    ODB4,   8, 
                    ODB5,   8, 
                    ODB6,   8, 
                    ODB7,   8, 
                    ODB8,   8, 
                    ODB9,   8, 
                    ODBA,   8, 
                    ODBB,   8, 
                    ODBC,   8, 
                    ODBD,   8, 
                    ODBE,   8, 
                    ODBF,   8, 
                    ODX0,   32, 
                    ODX1,   32, 
                    ODX2,   32, 
                    ODX3,   32, 
                    Offset (0xA5), 
                    BL86,   8, 
                    BL87,   8, 
                    BL88,   8, 
                    BL89,   8, 
                    BL8A,   8, 
                    BLVA,   8, 
                    OSS4,   1, 
                    Offset (0xAC), 
                    Offset (0xAE), 
                    W81F,   1, 
                    Offset (0xAF), 
                    WUSB,   1, 
                    WBLA,   1, 
                    Offset (0xB1), 
                    U3DE,   1, 
                    Offset (0xB4), 
                    VSSD,   16, 
                    Offset (0xB8), 
                    AUES,   1, 
                    CRES,   1, 
                    UPES,   1, 
                    BTES,   1, 
                    CDES,   1, 
                    Offset (0xC0), 
                    VSID,   8, 
                    VRID,   8, 
                    DVID,   16, 
                    Offset (0xC8), 
                    PWSF,   1, 
                    ODEF,   1, 
                        ,   1, 
                        ,   1, 
                        ,   1, 
                        ,   1, 
                    TMLF,   1, 
                    Offset (0xC9), 
                    KBBF,   1, 
                    USCB,   1, 
                    RFBS,   1, 
                    USCF,   1, 
                    HKEY,   1, 
                    ZPOD,   1, 
                        ,   1, 
                    IOAC,   1, 
                    Offset (0xCB), 
                    Offset (0xCC), 
                    Offset (0xD0), 
                    CFID,   8, 
                    CPSI,   8, 
                    PPCD,   8, 
                    CPTB,   1, 
                    DCTB,   1, 
                    Offset (0xD4), 
                    VGAD,   2, 
                    Offset (0xD5), 
                    PPDC,   8, 
                    SGST,   8, 
                    EDSP,   8, 
                    BLVL,   8, 
                    BBTP,   8, 
                    TPRS,   8, 
                    Offset (0xDC), 
                    APS4,   8, 
                    Offset (0xDE), 
                    CDSB,   8, 
                    GPDT,   8, 
                    PMNL,   8, 
                    PMNH,   8, 
                    PPDL,   8, 
                    PPDH,   8, 
                    IPWM,   8, 
                    QPCU,   8, 
                    QPCN,   8, 
                    QPCD,   8, 
                    TPMS,   1, 
                    GSEN,   1, 
                    FPRS,   1, 
                    SMCD,   1, 
                    Offset (0xE9), 
                    DEFL,   1, 
                    Offset (0xEA), 
                        ,   1, 
                        ,   1, 
                        ,   1, 
                        ,   1, 
                    Offset (0xEB), 
                    Offset (0xEC), 
                    PTPS,   8, 
                    Offset (0xEF), 
                    IFIL,   1, 
                    IF3L,   1, 
                    Offset (0xF0), 
                    SRAM,   1, 
                    SDTU,   1, 
                    Offset (0xF1), 
                    DRID,   8, 
                    TPID,   8, 
                        ,   1, 
                    NKST,   1, 
                    BOTY,   1, 
                    Offset (0xF4), 
                    S4CT,   8, 
                    LFCT,   8, 
                    LLCT,   8, 
                    XPS5,   8, 
                    IWLN,   1, 
                    IWWL,   1, 
                    IWS3,   1, 
                    IWS4,   1, 
                    Offset (0xF9), 
                    Offset (0xFB), 
                    WFVD,   8, 
                    ISWR,   8, 
                    IECM,   8
                }
            }


    794D: 5B 81 4E 23 45 4D 42 58 01 00 40 40 4F 44 42 30  // [.N#EMBX..@@ODB0
    795D: 08 4F 44 42 31 08 4F 44 42 32 08 4F 44 42 33 08  // .ODB1.ODB2.ODB3.
    796D: 4F 44 42 34 08 4F 44 42 35 08 4F 44 42 36 08 4F  // ODB4.ODB5.ODB6.O
    797D: 44 42 37 08 4F 44 42 38 08 4F 44 42 39 08 4F 44  // DB7.ODB8.ODB9.OD
    798D: 42 41 08 4F 44 42 42 08 4F 44 42 43 08 4F 44 42  // BA.ODBB.ODBC.ODB
    799D: 44 08 4F 44 42 45 08 4F 44 42 46 08 4F 44 58 30  // D.ODBE.ODBF.ODX0
    79AD: 20 4F 44 58 31 20 4F 44 58 32 20 4F 44 58 33 20  //  ODX1 ODX2 ODX3 
    79BD: 00 28 42 4C 38 36 08 42 4C 38 37 08 42 4C 38 38  // .(BL86.BL87.BL88
    79CD: 08 42 4C 38 39 08 42 4C 38 41 08 42 4C 56 41 08  // .BL89.BL8A.BLVA.
    79DD: 4F 53 53 34 01 00 07 00 10 57 38 31 46 01 00 07  // OSS4.....W81F...
    79ED: 57 55 53 42 01 57 42 4C 41 01 00 0E 55 33 44 45  // WUSB.WBLA...U3DE
    79FD: 01 00 17 56 53 53 44 10 00 10 41 55 45 53 01 43  // ...VSSD...AUES.C
    7A0D: 52 45 53 01 55 50 45 53 01 42 54 45 53 01 43 44  // RES.UPES.BTES.CD
    7A1D: 45 53 01 00 3B 56 53 49 44 08 56 52 49 44 08 44  // ES..;VSID.VRID.D
    7A2D: 56 49 44 10 00 20 50 57 53 46 01 4F 44 45 46 01  // VID.. PWSF.ODEF.
    7A3D: 00 01 00 01 00 01 00 01 54 4D 4C 46 01 00 01 4B  // ........TMLF...K
    7A4D: 42 42 46 01 55 53 43 42 01 52 46 42 53 01 55 53  // BBF.USCB.RFBS.US
    7A5D: 43 46 01 48 4B 45 59 01 5A 50 4F 44 01 00 01 49  // CF.HKEY.ZPOD...I
    7A6D: 4F 41 43 01 00 08 00 08 00 20 43 46 49 44 08 43  // OAC...... CFID.C
    7A7D: 50 53 49 08 50 50 43 44 08 43 50 54 42 01 44 43  // PSI.PPCD.CPTB.DC
    7A8D: 54 42 01 00 06 56 47 41 44 02 00 06 50 50 44 43  // TB...VGAD...PPDC
    7A9D: 08 53 47 53 54 08 45 44 53 50 08 42 4C 56 4C 08  // .SGST.EDSP.BLVL.
    7AAD: 42 42 54 50 08 54 50 52 53 08 00 08 41 50 53 34  // BBTP.TPRS...APS4
    7ABD: 08 00 08 43 44 53 42 08 47 50 44 54 08 50 4D 4E  // ...CDSB.GPDT.PMN
    7ACD: 4C 08 50 4D 4E 48 08 50 50 44 4C 08 50 50 44 48  // L.PMNH.PPDL.PPDH
    7ADD: 08 49 50 57 4D 08 51 50 43 55 08 51 50 43 4E 08  // .IPWM.QPCU.QPCN.
    7AED: 51 50 43 44 08 54 50 4D 53 01 47 53 45 4E 01 46  // QPCD.TPMS.GSEN.F
    7AFD: 50 52 53 01 53 4D 43 44 01 00 04 44 45 46 4C 01  // PRS.SMCD...DEFL.
    7B0D: 00 07 00 01 00 01 00 01 00 01 00 04 00 08 50 54  // ..............PT
    7B1D: 50 53 08 00 10 49 46 49 4C 01 49 46 33 4C 01 00  // PS...IFIL.IF3L..
    7B2D: 06 53 52 41 4D 01 53 44 54 55 01 00 06 44 52 49  // .SRAM.SDTU...DRI
    7B3D: 44 08 54 50 49 44 08 00 01 4E 4B 53 54 01 42 4F  // D.TPID...NKST.BO
    7B4D: 54 59 01 00 05 53 34 43 54 08 4C 46 43 54 08 4C  // TY...S4CT.LFCT.L
    7B5D: 4C 43 54 08 58 50 53 35 08 49 57 4C 4E 01 49 57  // LCT.XPS5.IWLN.IW
    7B6D: 57 4C 01 49 57 53 33 01 49 57 53 34 01 00 04 00  // WL.IWS3.IWS4....
    7B7D: 10 57 46 56 44 08 49 53 57 52 08 49 45 43 4D 08  // .WFVD.ISWR.IECM.

            Mutex (MUT1, 0x00)

    7B8D: 5B 01 4D 55 54 31 00                             // [.MUT1.

            Mutex (MUT0, 0x00)

    7B94: 5B 01 4D 55 54 30 00                             // [.MUT0.

            Method (APOL, 1, NotSerialized)
            {
                Store (Arg0, DBPL) /* \_SB_.PCI0.LPCB.EC0_.DBPL */

    7B9B: 14 12 41 50 4F 4C 01 70 68 44 42 50 4C           // ..APOL.phDBPL

                Store (One, EBPL) /* \_SB_.PCI0.LPCB.EC0_.EBPL */
            }


    7BA8: 70 01 45 42 50 4C                                // p.EBPL

            OperationRegion (ECIO, SystemIO, 0x60, 0x10)

    7BAE: 5B 80 45 43 49 4F 01 0A 60 0A 10                 // [.ECIO..`..

            Field (ECIO, ByteAcc, NoLock, Preserve)
            {
                Offset (0x02), 
                EDAT,   8, 
                Offset (0x06), 
                CMDS,   8, 
                Offset (0x08), 
                EC68,   8, 
                Offset (0x0A), 
                EC6A,   8, 
                Offset (0x0C), 
                EC6C,   8, 
                Offset (0x0E), 
                EC6E,   8
            }


    7BB9: 5B 81 30 45 43 49 4F 01 00 10 45 44 41 54 08 00  // [.0ECIO...EDAT..
    7BC9: 18 43 4D 44 53 08 00 08 45 43 36 38 08 00 08 45  // .CMDS...EC68...E
    7BD9: 43 36 41 08 00 08 45 43 36 43 08 00 08 45 43 36  // C6A...EC6C...EC6
    7BE9: 45 08                                            // E.

            Method (IBE2, 0, Serialized)
            {

    7BEB: 14 14 49 42 45 32 08                             // ..IBE2.

                While (And (EC6E, 0x02))
                {

    7BF2: A2 0D 7B 45 43 36 45 0A 02 00                    // ..{EC6E...

                    Sleep (0x50)
                }
            }


    7BFC: 5B 22 0A 50                                      // [".P

            Method (ECMD, 1, Serialized)
            {
                IBE2 ()
                Store (Arg0, EC6E) /* \_SB_.PCI0.LPCB.EC0_.EC6E */
                IBE2 ()
            }


    7C00: 14 14 45 43 4D 44 09 49 42 45 32 70 68 45 43 36  // ..ECMD.IBE2phEC6
    7C10: 45 49 42 45 32                                   // EIBE2

            Method (ILID, 0, NotSerialized)
            {

    7C15: 14 4D 05 49 4C 49 44 00                          // .M.ILID.

                If (IGDS)
                {

    7C1D: A0 45 05 49 47 44 53                             // .E.IGDS

                    If (LEqual (TESM, 0x08))
                    {
                        Store (One, LIDS) /* External reference */

    7C24: A0 1C 93 54 45 53 4D 0A 08 70 01 4C 49 44 53     // ...TESM..p.LIDS

                        Store (One, ^^^GFX0.CLID) /* External reference */
                    }

    7C33: 70 01 5E 5E 5E 2E 47 46 58 30 43 4C 49 44        // p.^^^.GFX0CLID

                    ElseIf
    7C41: A1 31                                            // .1

 (LIDT)
                    {
                        Store (Zero, LIDS) /* External reference */

    7C43: A0 19 4C 49 44 54 70 00 4C 49 44 53              // ..LIDTp.LIDS

                        Store (Zero, ^^^GFX0.CLID) /* External reference */
                    }

    7C4F: 70 00 5E 5E 5E 2E 47 46 58 30 43 4C 49 44        // p.^^^.GFX0CLID

                    Else
                    {
                        Store (One, LIDS) /* External reference */

    7C5D: A1 15 70 01 4C 49 44 53                          // ..p.LIDS

                        Store (One, ^^^GFX0.CLID) /* External reference */
                    }
                }
            }


    7C65: 70 01 5E 5E 5E 2E 47 46 58 30 43 4C 49 44        // p.^^^.GFX0CLID

            Method (_Q01, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, One)
            }


    7C73: 14 0C 5F 51 30 31 00 48 4B 45 56 01 01           // .._Q01.HKEV..

            Method (_Q02, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (0x02, One)
            }


    7C80: 14 0D 5F 51 30 32 00 48 4B 45 56 0A 02 01        // .._Q02.HKEV...

            Method (_Q04, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x83)
            }


    7C8E: 14 0D 5F 51 30 34 00 48 4B 45 56 01 0A 83        // .._Q04.HKEV...

            Method (_Q05, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x82)
            }


    7C9C: 14 0D 5F 51 30 35 00 48 4B 45 56 01 0A 82        // .._Q05.HKEV...

            Method (_Q06, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x82)
            }


    7CAA: 14 0D 5F 51 30 36 00 48 4B 45 56 01 0A 82        // .._Q06.HKEV...

            Method (_Q0A, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x22)
            }


    7CB8: 14 0D 5F 51 30 41 00 48 4B 45 56 01 0A 22        // .._Q0A.HKEV.."

            Method (_Q0B, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x24)
            }


    7CC6: 14 0D 5F 51 30 42 00 48 4B 45 56 01 0A 24        // .._Q0B.HKEV..$

            Method (_Q0C, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x23)
            }


    7CD4: 14 0D 5F 51 30 43 00 48 4B 45 56 01 0A 23        // .._Q0C.HKEV..#

            Method (_Q0E, 0, NotSerialized)  // _Qxx: EC Query
            {

    7CE2: 14 1B 5F 51 30 45 00                             // .._Q0E.

                If (LEqual (LMAT, One))
                {
                    HKEV (One, 0x64)
                }

    7CE9: A0 0E 93 4C 4D 41 54 01 48 4B 45 56 01 0A 64     // ...LMAT.HKEV..d

                Else
                {
                    HKDS ()
                }
            }


    7CF8: A1 05 48 4B 44 53                                // ..HKDS

            Method (_Q0F, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (0x02, 0x64)
            }


    7CFE: 14 0E 5F 51 30 46 00 48 4B 45 56 0A 02 0A 64     // .._Q0F.HKEV...d

            Method (_Q12, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x21)
            }


    7D0D: 14 0D 5F 51 31 32 00 48 4B 45 56 01 0A 21        // .._Q12.HKEV..!

            Name (BATO, 0x80)

    7D1B: 08 42 41 54 4F 0A 80                             // .BATO..

            Name (BATN, Zero)

    7D22: 08 42 41 54 4E 00                                // .BATN.

            Name (ECEV, 0xC0)

    7D28: 08 45 43 45 56 0A C0                             // .ECEV..

            Name (Q29F, Zero)

    7D2F: 08 51 32 39 46 00                                // .Q29F.

            Method (_Q20, 0, NotSerialized)  // _Qxx: EC Query
            {

    7D35: 14 46 07 5F 51 32 30 00                          // .F._Q20.

                If (And (SMST, 0x40))
                {
                    Store (SMAA, Local0)

    7D3D: A0 4E 06 7B 53 4D 53 54 0A 40 00 70 53 4D 41 41  // .N.{SMST.@.pSMAA
    7D4D: 60                                               // `

                    If (LEqual (Local0, 0x14))
                    {
                        SELE ()

    7D4E: A0 4D 05 93 60 0A 14 53 45 4C 45                 // .M..`..SELE

                        If (And (0x40, ECEV))
                        {
                            Notify (BAT1, 0x81) // Information Change
                            BINH ()
                        }


    7D59: A0 14 7B 0A 40 45 43 45 56 00 86 42 41 54 31 0A  // ..{.@ECEV..BAT1.
    7D69: 81 42 49 4E 48                                   // .BINH

                        If (And (0x02, ECEV))
                        {
                            Notify (ACAD, Zero) // Bus Check
                            AINH ()
                        }

                        Store (Zero, ^^^^BAT1.RCAP) /* \_SB_.BAT1.RCAP */
                        Notify (BAT1, 0x80) // Status Change
                        Store (BATD, BATO) /* \_SB_.PCI0.LPCB.EC0_.BATO */

    7D6E: A0 13 7B 0A 02 45 43 45 56 00 86 41 43 41 44 00  // ..{..ECEV..ACAD.
    7D7E: 41 49 4E 48 70 00 5E 5E 5E 5E 2E 42 41 54 31 52  // AINHp.^^^^.BAT1R
    7D8E: 43 41 50 86 42 41 54 31 0A 80 70 42 41 54 44 42  // CAP.BAT1..pBATDB
    7D9E: 41 54 4F                                         // ATO

                        And (SMST, 0xBF, SMST) /* \_SB_.PCI0.LPCB.EC0_.SMST */
                    }
                }
            }


    7DA1: 7B 53 4D 53 54 0A BF 53 4D 53 54                 // {SMST..SMST

            Method (_Q29, 0, NotSerialized)  // _Qxx: EC Query
            {
            }


    7DAC: 14 06 5F 51 32 39 00                             // .._Q29.

            Method (_Q57, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x84)
            }


    7DB3: 14 0D 5F 51 35 37 00 48 4B 45 56 01 0A 84        // .._Q57.HKEV...

            Method (_Q58, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x84)
            }


    7DC1: 14 0D 5F 51 35 38 00 48 4B 45 56 01 0A 84        // .._Q58.HKEV...

            Method (_Q5B, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x24)
            }


    7DCF: 14 0D 5F 51 35 42 00 48 4B 45 56 01 0A 24        // .._Q5B.HKEV..$

            Method (_Q62, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x25)
            }


    7DDD: 14 0D 5F 51 36 32 00 48 4B 45 56 01 0A 25        // .._Q62.HKEV..%

            Method (_Q63, 0, NotSerialized)  // _Qxx: EC Query
            {

    7DEB: 14 43 07 5F 51 36 33 00                          // .C._Q63.

                If (LEqual (LMAT, One))
                {

    7DF3: A0 44 06 93 4C 4D 41 54 01                       // .D..LMAT.

                    If (
    7DFC: A0 0A                                            // ..


    7DFE: 92                                               // .

LGreaterEqual (OSYS, 0x07DC)){}

    7DFF: 95 4F 53 59 53 0B DC 07                          // .OSYS...

                    ElseIf
    7E07: A1 40 05                                         // .@.

 (LEqual (RFST, Zero))
                    {
                        Store (One, RFST) /* \_SB_.PCI0.LPCB.EC0_.RFST */

    7E0A: A0 29 93 52 46 53 54 00 70 01 52 46 53 54        // .).RFST.p.RFST

                        If (LEqual (WLAN, One))
                        {

    7E18: A0 0D 93 57 4C 41 4E 01                          // ...WLAN.

                            Store (One, WLST) /* \_SB_.PCI0.LPCB.EC0_.WLST */
                        }


    7E20: 70 01 57 4C 53 54                                // p.WLST

                        If (LEqual (ST3G, One))
                        {

    7E26: A0 0D 93 53 54 33 47 01                          // ...ST3G.

                            Store (One, ED3G) /* \_SB_.PCI0.LPCB.EC0_.ED3G */
                        }
                    }

    7E2E: 70 01 45 44 33 47                                // p.ED3G

                    Else
                    {
                        Store (Zero, RFST) /* \_SB_.PCI0.LPCB.EC0_.RFST */

    7E34: A1 23 70 00 52 46 53 54                          // .#p.RFST

                        If (LEqual (WLAN, One))
                        {

    7E3C: A0 0D 93 57 4C 41 4E 01                          // ...WLAN.

                            Store (Zero, WLST) /* \_SB_.PCI0.LPCB.EC0_.WLST */
                        }


    7E44: 70 00 57 4C 53 54                                // p.WLST

                        If (LEqual (ST3G, One))
                        {

    7E4A: A0 0D 93 53 54 33 47 01                          // ...ST3G.

                            Store (Zero, ED3G) /* \_SB_.PCI0.LPCB.EC0_.ED3G */
                        }
                    }
                }

                HKEV (One, 0x02)
            }


    7E52: 70 00 45 44 33 47 48 4B 45 56 01 0A 02           // p.ED3GHKEV...

            Method (_Q68, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (One, 
    7E5F: 14 1E 5F 51 36 38 00 70 01                       // .._Q68.p.

Index (^^^WMID.FEBC, Zero))

    7E68: 88 5E 5E 5E 2E 57 4D 49 44 46 45 42 43 00 00     // .^^^.WMIDFEBC..

                Notify (WMID, 0xBD) // Device-Specific
            }


    7E77: 86 57 4D 49 44 0A BD                             // .WMID..

            Method (_Q80, 0, NotSerialized)  // _Qxx: EC Query
            {

    7E7E: 14 13 5F 51 38 30 00                             // .._Q80.

                Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
            }


    7E85: 86 5C 2E 5F 54 5A 5F 54 5A 30 31 0A 80           // .\._TZ_TZ01..

            Method (_Q81, 0, NotSerialized)  // _Qxx: EC Query
            {

    7E92: 14 13 5F 51 38 31 00                             // .._Q81.

                Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
            }


    7E99: 86 5C 2E 5F 54 5A 5F 54 5A 30 31 0A 80           // .\._TZ_TZ01..

            Name (CPUF, Zero)

    7EA6: 08 43 50 55 46 00                                // .CPUF.

            Mutex (PPCF, 0x00)

    7EAC: 5B 01 50 50 43 46 00                             // [.PPCF.

            Method (_Q83, 0, NotSerialized)  // _Qxx: EC Query
            {

    7EB3: 14 13 5F 51 38 33 00                             // .._Q83.

                Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
            }


    7EBA: 86 5C 2E 5F 54 5A 5F 54 5A 30 31 0A 80           // .\._TZ_TZ01..

            Method (_Q84, 0, NotSerialized)  // _Qxx: EC Query
            {
            }


    7EC7: 14 06 5F 51 38 34 00                             // .._Q84.

            Method (_Q85, 0, NotSerialized)  // _Qxx: EC Query
            {

    7ECE: 14 0D 5F 51 38 35 00                             // .._Q85.

                Notify (BAT1, 0x81) // Information Change
            }


    7ED5: 86 42 41 54 31 0A 81                             // .BAT1..

            Method (_Q8C, 0, NotSerialized)  // _Qxx: EC Query
            {
                UTPS ()

    7EDC: 14 17 5F 51 38 43 00 55 54 50 53                 // .._Q8C.UTPS

                Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
            }


    7EE7: 86 5C 2E 5F 54 5A 5F 54 5A 30 31 0A 80           // .\._TZ_TZ01..

            Method (_Q8D, 0, NotSerialized)  // _Qxx: EC Query
            {
                UTPS ()

    7EF4: 14 17 5F 51 38 44 00 55 54 50 53                 // .._Q8D.UTPS

                Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
            }


    7EFF: 86 5C 2E 5F 54 5A 5F 54 5A 30 31 0A 80           // .\._TZ_TZ01..

            Method (_Q8E, 0, NotSerialized)  // _Qxx: EC Query
            {

    7F0C: 14 4A 04 5F 51 38 45 00                          // .J._Q8E.

                If (LOr (LLess (OSYS, 0x07D6), 
    7F14: A0 22 91 95 4F 53 59 53 0B D6 07                 // ."..OSYS...

LEqual (LINX, One)))
                {

    7F1F: 93 4C 49 4E 58 01                                // .LINX.

                    If (LLess (BLVL, 0x09))
                    {

    7F25: A0 0D 95 42 4C 56 4C 0A 09                       // ...BLVL..

                        Increment (BLVL)
                    }

                    BRXP ()
                }

    7F2E: 75 42 4C 56 4C 42 52 58 50                       // uBLVLBRXP

                Else
                {

    7F37: A1 10                                            // ..

                    Notify (^^^GFX0.DD1F, 0x86) // Device-Specific
                }


    7F39: 86 5E 5E 5E 2E 47 46 58 30 44 44 31 46 0A 86     // .^^^.GFX0DD1F..

                If (LEqual (LMAT, One))
                {
                    HKEV (One, 0x61)
                }
            }


    7F48: A0 0E 93 4C 4D 41 54 01 48 4B 45 56 01 0A 61     // ...LMAT.HKEV..a

            Method (_Q8F, 0, NotSerialized)  // _Qxx: EC Query
            {

    7F57: 14 49 04 5F 51 38 46 00                          // .I._Q8F.

                If (LOr (LLess (OSYS, 0x07D6), 
    7F5F: A0 21 91 95 4F 53 59 53 0B D6 07                 // .!..OSYS...

LEqual (LINX, One)))
                {

    7F6A: 93 4C 49 4E 58 01                                // .LINX.

                    If (LGreater (BLVL, Zero))
                    {

    7F70: A0 0C 94 42 4C 56 4C 00                          // ...BLVL.

                        Decrement (BLVL)
                    }

                    BRXP ()
                }

    7F78: 76 42 4C 56 4C 42 52 58 50                       // vBLVLBRXP

                Else
                {

    7F81: A1 10                                            // ..

                    Notify (^^^GFX0.DD1F, 0x87) // Device-Specific
                }


    7F83: 86 5E 5E 5E 2E 47 46 58 30 44 44 31 46 0A 87     // .^^^.GFX0DD1F..

                If (LEqual (LMAT, One))
                {
                    HKEV (One, 0x62)
                }
            }


    7F92: A0 0E 93 4C 4D 41 54 01 48 4B 45 56 01 0A 62     // ...LMAT.HKEV..b

            Method (_Q90, 0, NotSerialized)  // _Qxx: EC Query
            {

    7FA1: 14 13 5F 51 39 30 00                             // .._Q90.

                Store (WLST, ^^^^RDWL) /* \_SB_.RDWL */
            }


    7FA8: 70 57 4C 53 54 5E 5E 5E 5E 52 44 57 4C           // pWLST^^^^RDWL

            Method (_Q91, 0, NotSerialized)  // _Qxx: EC Query
            {

    7FB5: 14 13 5F 51 39 31 00                             // .._Q91.

                Store (WLST, ^^^^RDWL) /* \_SB_.RDWL */
            }


    7FBC: 70 57 4C 53 54 5E 5E 5E 5E 52 44 57 4C           // pWLST^^^^RDWL

            Method (_Q92, 0, NotSerialized)  // _Qxx: EC Query
            {

    7FC9: 14 13 5F 51 39 32 00                             // .._Q92.

                Store (BLTS, ^^^^RDBT) /* \_SB_.RDBT */
            }


    7FD0: 70 42 4C 54 53 5E 5E 5E 5E 52 44 42 54           // pBLTS^^^^RDBT

            Method (_Q93, 0, NotSerialized)  // _Qxx: EC Query
            {

    7FDD: 14 13 5F 51 39 33 00                             // .._Q93.

                Store (BLTS, ^^^^RDBT) /* \_SB_.RDBT */
            }


    7FE4: 70 42 4C 54 53 5E 5E 5E 5E 52 44 42 54           // pBLTS^^^^RDBT

            Method (_Q9B, 0, NotSerialized)  // _Qxx: EC Query
            {
                ILID ()

    7FF1: 14 11 5F 51 39 42 00 49 4C 49 44                 // .._Q9B.ILID

                Notify (LID0, 0x80) // Status Change
            }


    7FFC: 86 4C 49 44 30 0A 80                             // .LID0..

            Method (_Q9C, 0, NotSerialized)  // _Qxx: EC Query
            {
                ILID ()

    8003: 14 11 5F 51 39 43 00 49 4C 49 44                 // .._Q9C.ILID

                Notify (LID0, 0x80) // Status Change
            }


    800E: 86 4C 49 44 30 0A 80                             // .LID0..

            Method (_Q9D, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x63)
            }


    8015: 14 0D 5F 51 39 44 00 48 4B 45 56 01 0A 63        // .._Q9D.HKEV..c

            Method (_Q9E, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x63)
            }


    8023: 14 0D 5F 51 39 45 00 48 4B 45 56 01 0A 63        // .._Q9E.HKEV..c

            Method (_QA0, 0, NotSerialized)  // _Qxx: EC Query
            {

    8031: 14 13 5F 51 41 30 00                             // .._QA0.

                Store (ED3G, ^^^^RD3G) /* \_SB_.RD3G */
            }


    8038: 70 45 44 33 47 5E 5E 5E 5E 52 44 33 47           // pED3G^^^^RD3G

            Method (_QA1, 0, NotSerialized)  // _Qxx: EC Query
            {

    8045: 14 13 5F 51 41 31 00                             // .._QA1.

                Store (ED3G, ^^^^RD3G) /* \_SB_.RD3G */
            }


    804C: 70 45 44 33 47 5E 5E 5E 5E 52 44 33 47           // pED3G^^^^RD3G

            Method (_QA6, 0, NotSerialized)  // _Qxx: EC Query
            {
            }


    8059: 14 06 5F 51 41 36 00                             // .._QA6.

            Method (_QAC, 0, NotSerialized)  // _Qxx: EC Query
            {
                UTPS ()

    8060: 14 17 5F 51 41 43 00 55 54 50 53                 // .._QAC.UTPS

                Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
            }


    806B: 86 5C 2E 5F 54 5A 5F 54 5A 30 31 0A 80           // .\._TZ_TZ01..

            Method (_QAD, 0, NotSerialized)  // _Qxx: EC Query
            {
                UTPS ()

    8078: 14 17 5F 51 41 44 00 55 54 50 53                 // .._QAD.UTPS

                Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
            }


    8083: 86 5C 2E 5F 54 5A 5F 54 5A 30 31 0A 80           // .\._TZ_TZ01..

            Method (_QC0, 0, NotSerialized)  // _Qxx: EC Query
            {
                HKEV (One, 0x8A)
            }


    8090: 14 0D 5F 51 43 30 00 48 4B 45 56 01 0A 8A        // .._QC0.HKEV...

            Method (SELE, 0, NotSerialized)
            {
                Store (BATD, BATN) /* \_SB_.PCI0.LPCB.EC0_.BATN */
                Store (Zero, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */

    809E: 14 43 11 53 45 4C 45 00 70 42 41 54 44 42 41 54  // .C.SELE.pBATDBAT
    80AE: 4E 70 00 45 43 45 56                             // Np.ECEV

                If (And (0xC0, BATN))
                {
                    Or (ECEV, One, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */

    80B5: A0 29 7B 0A C0 42 41 54 4E 00 7D 45 43 45 56 01  // .){..BATN.}ECEV.
    80C5: 45 43 45 56                                      // ECEV

                    If (And (0x0300, BATN))
                    {

    80C9: A0 15 7B 0B 00 03 42 41 54 4E 00                 // ..{...BATN.

                        Or (ECEV, 0x04, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */
                    }
                }

                And (BATN, One, Local0)
                And (BATO, One, Local1)

    80D4: 7D 45 43 45 56 0A 04 45 43 45 56 7B 42 41 54 4E  // }ECEV..ECEV{BATN
    80E4: 01 60 7B 42 41 54 4F 01 61                       // .`{BATO.a

                If (Local0)
                {

    80ED: A0 0E 60                                         // ..`

                    Or (ECEV, 0x0100, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */
                }

    80F0: 7D 45 43 45 56 0B 00 01 45 43 45 56              // }ECEV...ECEV

                Else
                {

    80FC: A1 0D                                            // ..

                    And (ECEV, 0xFEFF, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */
                }


    80FE: 7B 45 43 45 56 0B FF FE 45 43 45 56              // {ECEV...ECEV

                If (Not (LEqual (Local0, Local1)))
                {

    810A: A0 11 80 93 60 61 00                             // ....`a.

                    Or (ECEV, 0x40, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */
                }

                And (BATN, 0x02, Local0)
                And (BATO, 0x02, Local1)

    8111: 7D 45 43 45 56 0A 40 45 43 45 56 7B 42 41 54 4E  // }ECEV.@ECEV{BATN
    8121: 0A 02 60 7B 42 41 54 4F 0A 02 61                 // ..`{BATO..a

                If (Local0)
                {

    812C: A0 0E 60                                         // ..`

                    Or (ECEV, 0x0200, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */
                }

    812F: 7D 45 43 45 56 0B 00 02 45 43 45 56              // }ECEV...ECEV

                Else
                {

    813B: A1 0D                                            // ..

                    And (ECEV, 0xFDFF, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */
                }


    813D: 7B 45 43 45 56 0B FF FD 45 43 45 56              // {ECEV...ECEV

                If (Not (LEqual (Local0, Local1)))
                {

    8149: A0 11 80 93 60 61 00                             // ....`a.

                    Or (ECEV, 0x80, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */
                }

                And (BATN, 0xC0, Local0)
                And (BATO, 0xC0, Local1)

    8150: 7D 45 43 45 56 0A 80 45 43 45 56 7B 42 41 54 4E  // }ECEV..ECEV{BATN
    8160: 0A C0 60 7B 42 41 54 4F 0A C0 61                 // ..`{BATO..a

                If (Not (LEqual (Local0, Local1)))
                {

    816B: A0 11 80 93 60 61 00                             // ....`a.

                    Or (ECEV, 0x02, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */
                }


    8172: 7D 45 43 45 56 0A 02 45 43 45 56                 // }ECEV..ECEV

                If (And (One, ECEV))
                {

    817D: A0 34 7B 01 45 43 45 56 00                       // .4{.ECEV.

                    If (And (0x04, ECEV))
                    {

    8186: A0 2B 7B 0A 04 45 43 45 56 00                    // .+{..ECEV.

                        If (And (BATN, 0x20))
                        {

    8190: A0 14 7B 42 41 54 4E 0A 20 00                    // ..{BATN. .

                            Or (ECEV, 0x10, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */
                        }

    819A: 7D 45 43 45 56 0A 10 45 43 45 56                 // }ECEV..ECEV

                        Else
                        {

    81A5: A1 0C                                            // ..

                            Or (ECEV, 0x20, ECEV) /* \_SB_.PCI0.LPCB.EC0_.ECEV */
                        }
                    }
                }
            }


    81A7: 7D 45 43 45 56 0A 20 45 43 45 56                 // }ECEV. ECEV

            Method (BINH, 0, NotSerialized)
            {
            }


    81B2: 14 06 42 49 4E 48 00                             // ..BINH.

            Method (AINH, 0, NotSerialized)
            {
                SCTB ()

    81B9: 14 42 06 41 49 4E 48 00 53 43 54 42              // .B.AINH.SCTB

                If (LOr (LLess (OSYS, 0x07D6), 
    81C5: A0 46 05 91 95 4F 53 59 53 0B D6 07              // .F...OSYS...

LEqual (LINX, One)))
                {

    81D1: 93 4C 49 4E 58 01                                // .LINX.

                    If (ACDF)
                    {

    81D7: A0 22 41 43 44 46                                // ."ACDF

                        If (LLess (BLVL, 0x04))
                        {

    81DD: A0 13 95 42 4C 56 4C 0A 04                       // ...BLVL..

                            Add (BLVL, 0x05, BLVL) /* \_SB_.BLVL */
                        }

    81E6: 72 42 4C 56 4C 0A 05 42 4C 56 4C                 // rBLVL..BLVL

                        Else
                        {

    81F1: A1 08                                            // ..

                            Store (0x09, BLVL) /* \_SB_.BLVL */
                        }
                    }

    81F3: 70 0A 09 42 4C 56 4C                             // p..BLVL

                    ElseIf
    81FA: A1 1D                                            // ..

 (LGreater (BLVL, 0x05))
                    {

    81FC: A0 13 94 42 4C 56 4C 0A 05                       // ...BLVL..

                        Subtract (BLVL, 0x05, BLVL) /* \_SB_.BLVL */
                    }

    8205: 74 42 4C 56 4C 0A 05 42 4C 56 4C                 // tBLVL..BLVL

                    Else
                    {

    8210: A1 07                                            // ..

                        Store (Zero, BLVL) /* \_SB_.BLVL */
                    }

                    BRXP ()
                }
            }


    8212: 70 00 42 4C 56 4C 42 52 58 50                    // p.BLVLBRXP

            Method (HKEV, 2, NotSerialized)
            {
                Store (Arg0, 
    821C: 14 44 05 48 4B 45 56 02 70 68                    // .D.HKEV.ph

Index (^^^WMID.FEBC, Zero))
                Store (Arg1, 
    8226: 88 5E 5E 5E 2E 57 4D 49 44 46 45 42 43 00 00 70  // .^^^.WMIDFEBC..p
    8236: 69                                               // i

Index (^^^WMID.FEBC, One))
                Store (Zero, 
    8237: 88 5E 5E 5E 2E 57 4D 49 44 46 45 42 43 01 00 70  // .^^^.WMIDFEBC..p
    8247: 00                                               // .

Index (^^^WMID.FEBC, 0x02))
                Store (Zero, 
    8248: 88 5E 5E 5E 2E 57 4D 49 44 46 45 42 43 0A 02 00  // .^^^.WMIDFEBC...
    8258: 70 00                                            // p.

Index (^^^WMID.FEBC, 0x03))

    825A: 88 5E 5E 5E 2E 57 4D 49 44 46 45 42 43 0A 03 00  // .^^^.WMIDFEBC...

                Notify (WMID, 0xBC) // Device-Specific
            }


    826A: 86 57 4D 49 44 0A BC                             // .WMID..

            Method (HKDS, 0, NotSerialized)
            {
                ^^^GFX0.GHDS (Zero)
            }


    8271: 14 13 48 4B 44 53 00 5E 5E 5E 2E 47 46 58 30 47  // ..HKDS.^^^.GFX0G
    8281: 48 44 53 00                                      // HDS.

            Method (BRXP, 0, NotSerialized)
            {

    8285: 14 3C 42 52 58 50 00                             // .<BRXP.

                If (LOr (LEqual (SGST, 0x04), 
    828C: A0 33 91 93 53 47 53 54 0A 04                    // .3..SGST..

LEqual (SGST, Zero)))
                {
                    Multiply (DerefOf (
    8296: 93 53 47 53 54 00 77 83                          // .SGST.w.

Index (PNLT, BLVL)), 0x64, Local1)
                    Divide (Local1, 0x0100, , Local2)
                    ^^^GFX0.AINT (One, Local2)
                }

    829E: 88 50 4E 4C 54 42 4C 56 4C 00 0A 64 61 78 61 0B  // .PNLTBLVL..daxa.
    82AE: 00 01 00 62 5E 5E 5E 2E 47 46 58 30 41 49 4E 54  // ...b^^^.GFX0AINT
    82BE: 01 62                                            // .b

                Else
                {
                }
            }


    82C0: A1 01                                            // ..

            Mutex (CTBM, 0x00)

    82C2: 5B 01 43 54 42 4D 00                             // [.CTBM.

            Method (SCTB, 0, NotSerialized)
            {
                Acquire (CTBM, 0xFFFF)

    82C9: 14 3B 53 43 54 42 00 5B 23 43 54 42 4D FF FF     // .;SCTB.[#CTBM..

                If (CPTB)
                {

    82D8: A0 26 43 50 54 42                                // .&CPTB

                    If (LAnd (LNot (ACDF), GO49))
                    {

    82DE: A0 11 90 92 41 43 44 46 47 4F 34 39              // ....ACDFGO49

                        Store (One, DCTB) /* \_SB_.DCTB */
                    }

    82EA: 70 01 44 43 54 42                                // p.DCTB

                    Else
                    {

    82F0: A1 07                                            // ..

                        Store (Zero, DCTB) /* \_SB_.DCTB */
                    }


    82F2: 70 00 44 43 54 42                                // p.DCTB

                    Store (0xD8, SSMP) /* \SSMP */
                }


    82F8: 70 0A D8 53 53 4D 50                             // p..SSMP

                Release (CTBM)
            }


    82FF: 5B 27 43 54 42 4D                                // ['CTBM

            Method (TS34, 0, NotSerialized)
            {
                Store (One, CPUF) /* \_SB_.PCI0.LPCB.EC0_.CPUF */
                Acquire (PPCF, 0xFFFF)

    8305: 14 40 05 54 53 33 34 00 70 01 43 50 55 46 5B 23  // .@.TS34.p.CPUF[#
    8315: 50 50 43 46 FF FF                                // PPCF..

                If (LGreater (PPCD, One))
                {
                    Divide (PPCD, 0x02, Local1, Local0)

    831B: A0 21 94 50 50 43 44 01 78 50 50 43 44 0A 02 61  // .!.PPCD.xPPCD..a
    832B: 60                                               // `

                    Store (Local0, \_PR.CPU0._PPC) /* External reference */
                }

                Notify (^^^RP05.PXSX, 0xD2) // Hardware-Specific
                PNOT ()

    832C: 70 60 5C 2F 03 5F 50 52 5F 43 50 55 30 5F 50 50  // p`\/._PR_CPU0_PP
    833C: 43 86 5E 5E 5E 2E 52 50 30 35 50 58 53 58 0A D2  // C.^^^.RP05PXSX..
    834C: 50 4E 4F 54                                      // PNOT

                Release (PPCF)
            }


    8350: 5B 27 50 50 43 46                                // ['PPCF

            Method (TS00, 0, NotSerialized)
            {
                Store (One, CPUF) /* \_SB_.PCI0.LPCB.EC0_.CPUF */
                Acquire (PPCF, 0xFFFF)
                Store (Zero, \_PR.CPU0._PPC) /* External reference */
                Notify (^^^RP05.PXSX, 0xD1) // Hardware-Specific
                PNOT ()

    8356: 14 3E 54 53 30 30 00 70 01 43 50 55 46 5B 23 50  // .>TS00.p.CPUF[#P
    8366: 50 43 46 FF FF 70 00 5C 2F 03 5F 50 52 5F 43 50  // PCF..p.\/._PR_CP
    8376: 55 30 5F 50 50 43 86 5E 5E 5E 2E 52 50 30 35 50  // U0_PPC.^^^.RP05P
    8386: 58 53 58 0A D1 50 4E 4F 54                       // XSX..PNOT

                Release (PPCF)
            }


    838F: 5B 27 50 50 43 46                                // ['PPCF

            Method (CGPT, 0, NotSerialized)
            {

    8395: 14 3E 43 47 50 54 00                             // .>CGPT.

                If (ACDF)
                {
                    Store (0x55, ODB5) /* \_SB_.ODB5 */
                    TS00 ()

    839C: A0 1D 41 43 44 46 70 0A 55 4F 44 42 35 54 53 30  // ..ACDFp.UODB5TS0
    83AC: 30                                               // 0

                    Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
                }

    83AD: 86 5C 2E 5F 54 5A 5F 54 5A 30 31 0A 80           // .\._TZ_TZ01..

                Else
                {
                    Store (0x66, ODB6) /* \_SB_.ODB6 */
                    TS34 ()

    83BA: A1 19 70 0A 66 4F 44 42 36 54 53 33 34           // ..p.fODB6TS34

                    Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
                }
            }


    83C7: 86 5C 2E 5F 54 5A 5F 54 5A 30 31 0A 80           // .\._TZ_TZ01..

            Method (UTPS, 0, NotSerialized)
            {
                Store (One, CPUF) /* \_SB_.PCI0.LPCB.EC0_.CPUF */
                Acquire (PPCF, 0xFFFF)

    83D4: 14 41 0D 55 54 50 53 00 70 01 43 50 55 46 5B 23  // .A.UTPS.p.CPUF[#
    83E4: 50 50 43 46 FF FF                                // PPCF..

                If (LOr (LEqual (CPTS, One), 
    83EA: A0 41 04 91 93 43 50 54 53 01                    // .A...CPTS.

LEqual (CPTS, 0x02)))
                {

    83F4: 93 43 50 54 53 0A 02                             // .CPTS..

                    If (LGreater (PPCD, One))
                    {
                        Divide (PPCD, 0x02, Local1, Local0)

    83FB: A0 21 94 50 50 43 44 01 78 50 50 43 44 0A 02 61  // .!.PPCD.xPPCD..a
    840B: 60                                               // `

                        Store (Local0, \_PR.CPU0._PPC) /* External reference */
                    }


    840C: 70 60 5C 2F 03 5F 50 52 5F 43 50 55 30 5F 50 50  // p`\/._PR_CPU0_PP
    841C: 43                                               // C

                    Notify (^^^RP05.PXSX, 0xD1) // Hardware-Specific
                }

    841D: 86 5E 5E 5E 2E 52 50 30 35 50 58 53 58 0A D1     // .^^^.RP05PXSX..

                ElseIf
    842C: A1 4F 06                                         // .O.

 (LOr (LEqual (CPTS, 0x03), 
    842F: A0 42 04 91 93 43 50 54 53 0A 03                 // .B...CPTS..

LEqual (CPTS, 0x04)))
                {

    843A: 93 43 50 54 53 0A 04                             // .CPTS..

                    If (LGreater (PPCD, One))
                    {
                        Divide (PPCD, 0x02, Local1, Local0)

    8441: A0 21 94 50 50 43 44 01 78 50 50 43 44 0A 02 61  // .!.PPCD.xPPCD..a
    8451: 60                                               // `

                        Store (Local0, \_PR.CPU0._PPC) /* External reference */
                    }


    8452: 70 60 5C 2F 03 5F 50 52 5F 43 50 55 30 5F 50 50  // p`\/._PR_CPU0_PP
    8462: 43                                               // C

                    Notify (^^^RP05.PXSX, 0xD2) // Hardware-Specific
                }

    8463: 86 5E 5E 5E 2E 52 50 30 35 50 58 53 58 0A D2     // .^^^.RP05PXSX..

                ElseIf
    8472: A1 29                                            // .)

 (LEqual (CPTS, Zero))
                {
                    Store (Zero, \_PR.CPU0._PPC) /* External reference */

    8474: A0 27 93 43 50 54 53 00 70 00 5C 2F 03 5F 50 52  // .'.CPTS.p.\/._PR
    8484: 5F 43 50 55 30 5F 50 50 43                       // _CPU0_PPC

                    Notify (^^^RP05.PXSX, 0xD1) // Hardware-Specific
                }

                PNOT ()

    848D: 86 5E 5E 5E 2E 52 50 30 35 50 58 53 58 0A D1 50  // .^^^.RP05PXSX..P
    849D: 4E 4F 54                                         // NOT

                Release (PPCF)
            }
        }


    84A0: 5B 27 50 50 43 46                                // ['PPCF

        Device (DMAC)
        {

    84A6: 5B 82 3D 44 4D 41 43                             // [.=DMAC

            Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID

    84AD: 08 5F 48 49 44 0C 41 D0 02 00                    // ._HID.A...

            Name (_CRS, 
    84B7: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0000,             // Range Minimum
                    0x0000,             // Range Maximum
                    0x01,               // Alignment
                    0x20,               // Length
                    )
                IO (Decode16,
                    0x0081,             // Range Minimum
                    0x0081,             // Range Maximum
                    0x01,               // Alignment
                    0x11,               // Length
                    )
                IO (Decode16,
                    0x0093,             // Range Minimum
                    0x0093,             // Range Maximum
                    0x01,               // Alignment
                    0x0D,               // Length
                    )
                IO (Decode16,
                    0x00C0,             // Range Minimum
                    0x00C0,             // Range Maximum
                    0x01,               // Alignment
                    0x20,               // Length
                    )
                DMA (Compatibility, NotBusMaster, Transfer8_16, )
                    {4}
            })
        }


    84BC: 11 28 0A 25 47 01 00 00 00 00 01 20 47 01 81 00  // .(.%G...... G...
    84CC: 81 00 01 11 47 01 93 00 93 00 01 0D 47 01 C0 00  // ....G.......G...
    84DC: C0 00 01 20 2A 10 01 79 00                       // ... *..y.

        Device (FWHD)
        {

    84E5: 5B 82 26 46 57 48 44                             // [.&FWHD

            Name (_HID, EisaId ("INT0800") /* Intel 82802 Firmware Hub Device */)  // _HID: Hardware ID

    84EC: 08 5F 48 49 44 0C 25 D4 08 00                    // ._HID.%...

            Name (_CRS, 
    84F6: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadOnly,
                    0xFF000000,         // Address Base
                    0x01000000,         // Address Length
                    )
            })
        }


    84FB: 11 11 0A 0E 86 09 00 00 00 00 00 FF 00 00 00 01  // ................
    850B: 79 00                                            // y.

        Device (HPET)
        {

    850D: 5B 82 46 09 48 50 45 54                          // [.F.HPET

            Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID

    8515: 08 5F 48 49 44 0C 41 D0 01 03                    // ._HID.A...

            Name (_UID, Zero)  // _UID: Unique ID

    851F: 08 5F 55 49 44 00                                // ._UID.

            Name (BUF0, 
    8525: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0xFED00000,         // Address Base
                    0x00000400,         // Address Length
                    _Y16)
            })

    852A: 11 11 0A 0E 86 09 00 01 00 00 D0 FE 00 04 00 00  // ................
    853A: 79 00                                            // y.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    853C: 14 11 5F 53 54 41 00                             // .._STA.

                If (HPAE)
                {

    8543: A0 08 48 50 41 45                                // ..HPAE

                    Return (0x0F)
                }


    8549: A4 0A 0F                                         // ...

                Return (Zero)
            }


    854C: A4 00                                            // ..

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    854E: 14 46 05 5F 43 52 53 08                          // .F._CRS.

                If (HPAE)
                {

    8556: A0 49 04 48 50 41 45                             // .I.HPAE

                    CreateDWordField (BUF0, \_SB.PCI0.LPCB.HPET._Y16._BAS, HPT0)  // _BAS: Base Address

    855D: 8A 42 55 46 30 0A 04 48 50 54 30                 // .BUF0..HPT0

                    If (LEqual (HPAS, One))
                    {

    8568: A0 11 93 48 50 41 53 01                          // ...HPAS.

                        Store (0xFED01000, HPT0) /* \_SB_.PCI0.LPCB.HPET._CRS.HPT0 */
                    }


    8570: 70 0C 00 10 D0 FE 48 50 54 30                    // p.....HPT0

                    If (LEqual (HPAS, 0x02))
                    {

    857A: A0 12 93 48 50 41 53 0A 02                       // ...HPAS..

                        Store (0xFED02000, HPT0) /* \_SB_.PCI0.LPCB.HPET._CRS.HPT0 */
                    }


    8583: 70 0C 00 20 D0 FE 48 50 54 30                    // p.. ..HPT0

                    If (LEqual (HPAS, 0x03))
                    {

    858D: A0 12 93 48 50 41 53 0A 03                       // ...HPAS..

                        Store (0xFED03000, HPT0) /* \_SB_.PCI0.LPCB.HPET._CRS.HPT0 */
                    }
                }


    8596: 70 0C 00 30 D0 FE 48 50 54 30                    // p..0..HPT0

                Return (BUF0) /* \_SB_.PCI0.LPCB.HPET.BUF0 */
            }
        }


    85A0: A4 42 55 46 30                                   // .BUF0

        Device (IPIC)
        {

    85A5: 5B 82 45 0A 49 50 49 43                          // [.E.IPIC

            Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID

    85AD: 08 5F 48 49 44 0B 41 D0                          // ._HID.A.

            Name (_CRS, 
    85B5: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0020,             // Range Minimum
                    0x0020,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0024,             // Range Minimum
                    0x0024,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0028,             // Range Minimum
                    0x0028,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x002C,             // Range Minimum
                    0x002C,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0030,             // Range Minimum
                    0x0030,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0034,             // Range Minimum
                    0x0034,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0038,             // Range Minimum
                    0x0038,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x003C,             // Range Minimum
                    0x003C,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A0,             // Range Minimum
                    0x00A0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A4,             // Range Minimum
                    0x00A4,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00A8,             // Range Minimum
                    0x00A8,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00AC,             // Range Minimum
                    0x00AC,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B0,             // Range Minimum
                    0x00B0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B4,             // Range Minimum
                    0x00B4,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00B8,             // Range Minimum
                    0x00B8,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x00BC,             // Range Minimum
                    0x00BC,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x04D0,             // Range Minimum
                    0x04D0,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IRQNoFlags ()
                    {2}
            })
        }


    85BA: 11 41 09 0A 8D 47 01 20 00 20 00 01 02 47 01 24  // .A...G. . ...G.$
    85CA: 00 24 00 01 02 47 01 28 00 28 00 01 02 47 01 2C  // .$...G.(.(...G.,
    85DA: 00 2C 00 01 02 47 01 30 00 30 00 01 02 47 01 34  // .,...G.0.0...G.4
    85EA: 00 34 00 01 02 47 01 38 00 38 00 01 02 47 01 3C  // .4...G.8.8...G.<
    85FA: 00 3C 00 01 02 47 01 A0 00 A0 00 01 02 47 01 A4  // .<...G.......G..
    860A: 00 A4 00 01 02 47 01 A8 00 A8 00 01 02 47 01 AC  // .....G.......G..
    861A: 00 AC 00 01 02 47 01 B0 00 B0 00 01 02 47 01 B4  // .....G.......G..
    862A: 00 B4 00 01 02 47 01 B8 00 B8 00 01 02 47 01 BC  // .....G.......G..
    863A: 00 BC 00 01 02 47 01 D0 04 D0 04 01 02 22 04 00  // .....G......."..
    864A: 79 00                                            // y.

        Device (MATH)
        {

    864C: 5B 82 3B 4D 41 54 48                             // [.;MATH

            Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID

    8653: 08 5F 48 49 44 0C 41 D0 0C 04                    // ._HID.A...

            Name (_CRS, 
    865D: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x00F0,             // Range Minimum
                    0x00F0,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IRQNoFlags ()
                    {13}
            })

    8662: 11 10 0A 0D 47 01 F0 00 F0 00 01 01 22 00 20 79  // ....G.......". y
    8672: 00                                               // .

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    8673: 14 15 5F 53 54 41 00                             // .._STA.

                If (LEqual (PCHS, One))
                {

    867A: A0 0A 93 50 43 48 53 01                          // ...PCHS.

                    Return (0x1F)
                }

    8682: A4 0A 1F                                         // ...

                Else
                {

    8685: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }


    8687: A4 00                                            // ..

        Device (LDRC)
        {

    8689: 5B 82 43 0A 4C 44 52 43                          // [.C.LDRC

            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID

    8691: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, 0x02)  // _UID: Unique ID

    869B: 08 5F 55 49 44 0A 02                             // ._UID..

            Name (_CRS, 
    86A2: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x002E,             // Range Minimum
                    0x002E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x004E,             // Range Minimum
                    0x004E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0061,             // Range Minimum
                    0x0061,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0063,             // Range Minimum
                    0x0063,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0065,             // Range Minimum
                    0x0065,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0067,             // Range Minimum
                    0x0067,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0070,             // Range Minimum
                    0x0070,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0080,             // Range Minimum
                    0x0080,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0092,             // Range Minimum
                    0x0092,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x00B2,             // Range Minimum
                    0x00B2,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
                IO (Decode16,
                    0x0680,             // Range Minimum
                    0x0680,             // Range Maximum
                    0x01,               // Alignment
                    0x20,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0xFFFF,             // Range Minimum
                    0xFFFF,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x1800,             // Range Minimum
                    0x1800,             // Range Maximum
                    0x01,               // Alignment
                    0xFF,               // Length
                    )
                IO (Decode16,
                    0x164E,             // Range Minimum
                    0x164E,             // Range Maximum
                    0x01,               // Alignment
                    0x02,               // Length
                    )
            })
        }


    86A7: 11 46 08 0A 82 47 01 2E 00 2E 00 01 02 47 01 4E  // .F...G.......G.N
    86B7: 00 4E 00 01 02 47 01 61 00 61 00 01 01 47 01 63  // .N...G.a.a...G.c
    86C7: 00 63 00 01 01 47 01 65 00 65 00 01 01 47 01 67  // .c...G.e.e...G.g
    86D7: 00 67 00 01 01 47 01 70 00 70 00 01 01 47 01 80  // .g...G.p.p...G..
    86E7: 00 80 00 01 01 47 01 92 00 92 00 01 01 47 01 B2  // .....G.......G..
    86F7: 00 B2 00 01 02 47 01 80 06 80 06 01 20 47 01 FF  // .....G...... G..
    8707: FF FF FF 01 01 47 01 FF FF FF FF 01 01 47 01 FF  // .....G.......G..
    8717: FF FF FF 01 01 47 01 00 18 00 18 01 FF 47 01 4E  // .....G.......G.N
    8727: 16 4E 16 01 02 79 00                             // .N...y.

        Device (LDR2)
        {

    872E: 5B 82 3F 4C 44 52 32                             // [.?LDR2

            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID

    8735: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, 0x05)  // _UID: Unique ID

    873F: 08 5F 55 49 44 0A 05                             // ._UID..

            Name (_CRS, 
    8746: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0800,             // Range Minimum
                    0x0800,             // Range Maximum
                    0x01,               // Alignment
                    0x80,               // Length
                    )
            })

    874B: 11 0D 0A 0A 47 01 00 08 00 08 01 80 79 00        // ....G.......y.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    8759: 14 15 5F 53 54 41 00                             // .._STA.

                If (LEqual (PCHS, One))
                {

    8760: A0 0A 93 50 43 48 53 01                          // ...PCHS.

                    Return (0x0F)
                }

    8768: A4 0A 0F                                         // ...

                Else
                {

    876B: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }


    876D: A4 00                                            // ..

        Device (RTC)
        {

    876F: 5B 82 25 52 54 43 5F                             // [.%RTC_

            Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID

    8776: 08 5F 48 49 44 0C 41 D0 0B 00                    // ._HID.A...

            Name (_CRS, 
    8780: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0070,             // Range Minimum
                    0x0070,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                IRQNoFlags ()
                    {8}
            })
        }


    8785: 11 10 0A 0D 47 01 70 00 70 00 01 08 22 00 01 79  // ....G.p.p..."..y
    8795: 00                                               // .

        Device (TIMR)
        {

    8796: 5B 82 2D 54 49 4D 52                             // [.-TIMR

            Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID

    879D: 08 5F 48 49 44 0C 41 D0 01 00                    // ._HID.A...

            Name (_CRS, 
    87A7: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0040,             // Range Minimum
                    0x0040,             // Range Maximum
                    0x01,               // Alignment
                    0x04,               // Length
                    )
                IO (Decode16,
                    0x0050,             // Range Minimum
                    0x0050,             // Range Maximum
                    0x10,               // Alignment
                    0x04,               // Length
                    )
                IRQNoFlags ()
                    {0}
            })
        }


    87AC: 11 18 0A 15 47 01 40 00 40 00 01 04 47 01 50 00  // ....G.@.@...G.P.
    87BC: 50 00 10 04 22 01 00 79 00                       // P..."..y.

        Device (CWDT)
        {

    87C5: 5B 82 43 04 43 57 44 54                          // [.C.CWDT

            Name (_HID, EisaId ("INT3F0D") /* ACPI Motherboard Resources */)  // _HID: Hardware ID

    87CD: 08 5F 48 49 44 0C 25 D4 3F 0D                    // ._HID.%.?.

            Name (_CID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _CID: Compatible ID

    87D7: 08 5F 43 49 44 0C 41 D0 0C 02                    // ._CID.A...

            Name (BUF0, 
    87E1: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                IO (Decode16,
                    0x1854,             // Range Minimum
                    0x1854,             // Range Maximum
                    0x04,               // Alignment
                    0x04,               // Length
                    )
            })

    87E6: 11 0D 0A 0A 47 01 54 18 54 18 04 04 79 00        // ....G.T.T...y.

            Method (_STA, 0, Serialized)  // _STA: Status
            {

    87F4: 14 09 5F 53 54 41 08                             // .._STA.

                Return (0x0F)
            }


    87FB: A4 0A 0F                                         // ...

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    87FE: 14 0B 5F 43 52 53 08                             // .._CRS.

                Return (BUF0) /* \_SB_.PCI0.LPCB.CWDT.BUF0 */
            }
        }


    8805: A4 42 55 46 30                                   // .BUF0

        OperationRegion (PKBS, SystemIO, 0x60, 0x05)

    880A: 5B 80 50 4B 42 53 01 0A 60 0A 05                 // [.PKBS..`..

        Field (PKBS, ByteAcc, Lock, Preserve)
        {
            PKBD,   8, 
            Offset (0x02), 
            Offset (0x03), 
            Offset (0x04), 
            PKBC,   8
        }


    8815: 5B 81 16 50 4B 42 53 11 50 4B 42 44 08 00 08 00  // [..PKBS.PKBD....
    8825: 08 00 08 50 4B 42 43 08                          // ...PKBC.

        Device (PS2K)
        {

    882D: 5B 82 47 07 50 53 32 4B                          // [.G.PS2K

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    8835: 14 24 5F 48 49 44 00                             // .$_HID.

                If (
    883C: A0 15 92                                         // ...

LGreaterEqual (OSYS, 0x07DC))
                {

    883F: 95 4F 53 59 53 0B DC 07                          // .OSYS...

                    Return ("10250759")
                }

    8847: A4 0D 31 30 32 35 30 37 35 39 00                 // ..10250759.

                Else
                {

    8852: A1 07                                            // ..

                    Return (0x0303D041)
                }
            }


    8854: A4 0C 41 D0 03 03                                // ..A...

            Name (_CID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _CID: Compatible ID

    885A: 08 5F 43 49 44 0C 41 D0 03 03                    // ._CID.A...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    8864: 14 09 5F 53 54 41 00                             // .._STA.

                Return (0x0F)
            }


    886B: A4 0A 0F                                         // ...

            Name (_CRS, 
    886E: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0060,             // Range Minimum
                    0x0060,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0064,             // Range Minimum
                    0x0064,             // Range Maximum
                    0x01,               // Alignment
                    0x01,               // Length
                    )
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {1}
            })

    8873: 11 19 0A 16 47 01 60 00 60 00 01 01 47 01 64 00  // ....G.`.`...G.d.
    8883: 64 00 01 01 23 02 00 01 79 00                    // d...#...y.

            Name (_PRS, 
    888D: 08 5F 50 52 53                                   // ._PRS

ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                StartDependentFn (0x00, 0x00)
                {
                    FixedIO (
                        0x0060,             // Address
                        0x01,               // Length
                        )
                    FixedIO (
                        0x0064,             // Address
                        0x01,               // Length
                        )
                    IRQNoFlags ()
                        {1}
                }
                EndDependentFn ()
            })
        }


    8892: 11 13 0A 10 31 00 4B 60 00 01 4B 64 00 01 22 02  // ....1.K`..Kd..".
    88A2: 00 38 79 00                                      // .8y.

        Device (PS2M)
        {

    88A6: 5B 82 4F 07 50 53 32 4D                          // [.O.PS2M

            Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
            {

    88AE: 14 1D 5F 48 49 44 00                             // .._HID.

                If (LEqual (TPVD, 0x45))
                {

    88B5: A0 0E 93 54 50 56 44 0A 45                       // ...TPVD.E

                    Return (0x0A058416)
                }

    88BE: A4 0C 16 84 05 0A                                // ......

                Else
                {

    88C4: A1 07                                            // ..

                    Return (0x811B2E4F)
                }
            }


    88C6: A4 0C 4F 2E 1B 81                                // ..O...

            Method (_CID, 0, NotSerialized)  // _CID: Compatible ID
            {

    88CC: 14 14 5F 43 49 44 00                             // .._CID.

                Return (
    88D3: A4                                               // .

Package (0x02)
                {
                    0x130FD041, 
                    0x030FD041
                })
            }


    88D4: 12 0C 02 0C 41 D0 0F 13 0C 41 D0 0F 03           // ....A....A...

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    88E1: 14 25 5F 53 54 41 00                             // .%_STA.

                If (LEqual (PTPS, Zero))
                {

    88E8: A0 0A 93 50 54 50 53 00                          // ...PTPS.

                    Return (0x0F)
                }

    88F0: A4 0A 0F                                         // ...

                ElseIf
    88F3: A1 13                                            // ..

 (
    88F5: A0 0C 92                                         // ...

LGreaterEqual (OSYS, 0x07DD))
                {

    88F8: 95 4F 53 59 53 0B DD 07                          // .OSYS...

                    Return (Zero)
                }

    8900: A4 00                                            // ..

                Else
                {

    8902: A1 04                                            // ..

                    Return (0x0F)
                }
            }


    8904: A4 0A 0F                                         // ...

            Name (_CRS, 
    8907: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IRQ (Edge, ActiveHigh, Exclusive, )
                    {12}
            })

    890C: 11 09 0A 06 23 00 10 01 79 00                    // ....#...y.

            Name (_PRS, 
    8916: 08 5F 50 52 53                                   // ._PRS

ResourceTemplate ()  // _PRS: Possible Resource Settings
            {
                StartDependentFn (0x00, 0x00)
                {
                    IRQNoFlags ()
                        {12}
                }
                EndDependentFn ()
            })
        }
    }


    891B: 11 0B 0A 08 31 00 22 00 10 38 79 00              // ....1."..8y.

    Mutex (EHLD, 0x00)

    8927: 5B 01 45 48 4C 44 00                             // [.EHLD.

    Mutex (MUTX, 0x00)

    892E: 5B 01 4D 55 54 58 00                             // [.MUTX.

    Mutex (OSUM, 0x00)

    8935: 5B 01 4F 53 55 4D 00                             // [.OSUM.

    Event (WFEV)

    893C: 5B 02 57 46 45 56                                // [.WFEV

    Name (H2OE, One)

    8942: 08 48 32 4F 45 01                                // .H2OE.

    Name (P8XE, Zero)

    8948: 08 50 38 58 45 00                                // .P8XE.

    Name (PFDP, 0x80)

    894E: 08 50 46 44 50 0A 80                             // .PFDP..

    OperationRegion (PRTD, SystemIO, PFDP, 0x04)

    8955: 5B 80 50 52 54 44 01 50 46 44 50 0A 04           // [.PRTD.PFDP..

    Field (PRTD, DWordAcc, Lock, Preserve)
    {
        H2OD,   32
    }


    8962: 5B 81 0B 50 52 54 44 13 48 32 4F 44 20           // [..PRTD.H2OD 

    Method (H2OP, 1, Serialized)
    {

    896F: 14 15 48 32 4F 50 09                             // ..H2OP.

        If (
    8976: A0 0E 92                                         // ...

LNotEqual (H2OE, Zero))
        {

    8979: 93 48 32 4F 45 00                                // .H2OE.

            Store (Arg0, H2OD) /* \H2OD */
        }
    }


    897F: 70 68 48 32 4F 44                                // phH2OD

    OperationRegion (PRT0, SystemIO, 0x80, 0x04)

    8985: 5B 80 50 52 54 30 01 0A 80 0A 04                 // [.PRT0.....

    Field (PRT0, DWordAcc, Lock, Preserve)
    {
        P80H,   32
    }


    8990: 5B 81 0B 50 52 54 30 13 50 38 30 48 20           // [..PRT0.P80H 

    Method (P8XH, 2, Serialized)
    {

    899D: 14 47 08 50 38 58 48 0A                          // .G.P8XH.

        If (LEqual (Arg0, Zero))
        {

    89A5: A0 17 93 68 00                                   // ...h.

            Store (Or (And (P80D, 0xFFFFFF00), Arg1), P80D) /* \P80D */
        }


    89AA: 70 7D 7B 50 38 30 44 0C 00 FF FF FF 00 69 00 50  // p}{P80D......i.P
    89BA: 38 30 44                                         // 80D

        If (LEqual (Arg0, One))
        {

    89BD: A0 1B 93 68 01                                   // ...h.

            Store (Or (And (P80D, 0xFFFF00FF), ShiftLeft (Arg1, 0x08)), P80D) /* \P80D */
        }


    89C2: 70 7D 7B 50 38 30 44 0C FF 00 FF FF 00 79 69 0A  // p}{P80D......yi.
    89D2: 08 00 00 50 38 30 44                             // ...P80D

        If (LEqual (Arg0, 0x02))
        {

    89D9: A0 1C 93 68 0A 02                                // ...h..

            Store (Or (And (P80D, 0xFF00FFFF), ShiftLeft (Arg1, 0x10)), P80D) /* \P80D */
        }


    89DF: 70 7D 7B 50 38 30 44 0C FF FF 00 FF 00 79 69 0A  // p}{P80D......yi.
    89EF: 10 00 00 50 38 30 44                             // ...P80D

        If (LEqual (Arg0, 0x03))
        {

    89F6: A0 1C 93 68 0A 03                                // ...h..

            Store (Or (And (P80D, 0x00FFFFFF), ShiftLeft (Arg1, 0x18)), P80D) /* \P80D */
        }


    89FC: 70 7D 7B 50 38 30 44 0C FF FF FF 00 00 79 69 0A  // p}{P80D......yi.
    8A0C: 18 00 00 50 38 30 44                             // ...P80D

        If (
    8A13: A0 11 92                                         // ...

LNotEqual (P8XE, Zero))
        {

    8A16: 93 50 38 58 45 00                                // .P8XE.

            Store (P80D, P80H) /* \P80H */
        }
    }


    8A1C: 70 50 38 30 44 50 38 30 48                       // pP80DP80H

    OperationRegion (SPRT, SystemIO, 0xB2, 0x02)

    8A25: 5B 80 53 50 52 54 01 0A B2 0A 02                 // [.SPRT.....

    Field (SPRT, ByteAcc, Lock, Preserve)
    {
        SSMP,   8, 
        SSDP,   8
    }


    8A30: 5B 81 10 53 50 52 54 11 53 53 4D 50 08 53 53 44  // [..SPRT.SSMP.SSD
    8A40: 50 08                                            // P.

    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        Store (Arg0, GPIC) /* \GPIC */

    8A42: 14 12 5F 50 49 43 01 70 68 47 50 49 43           // .._PIC.phGPIC

        Store (Arg0, PICM) /* \PICM */
    }


    8A4F: 70 68 50 49 43 4D                                // phPICM

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        Store (Zero, P80D) /* \P80D */
        P8XH (Zero, Arg0)
        \_SB.WTGP (0x53, Zero)

    8A55: 14 49 1C 5F 50 54 53 01 70 00 50 38 30 44 50 38  // .I._PTS.p.P80DP8
    8A65: 58 48 00 68 5C 2E 5F 53 42 5F 57 54 47 50 0A 53  // XH.h\._SB_WTGP.S
    8A75: 00                                               // .

        If (LEqual (Arg0, One))
        {
            H2OP (0x51)
        }


    8A76: A0 0A 93 68 01 48 32 4F 50 0A 51                 // ...h.H2OP.Q

        If (LEqual (Arg0, 0x03))
        {
            H2OP (0x53)
        }


    8A81: A0 0B 93 68 0A 03 48 32 4F 50 0A 53              // ...h..H2OP.S

        If (LEqual (Arg0, 0x04))
        {
            H2OP (0x54)
            Store (One, \_SB.PCI0.LPCB.EC0.FLS4)
            Store (One, \_SB.OSS4)

    8A8D: A0 43 05 93 68 0A 04 48 32 4F 50 0A 54 70 01 5C  // .C..h..H2OP.Tp.\
    8A9D: 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 43  // /._SB_PCI0LPCBEC
    8AAD: 30 5F 46 4C 53 34 70 01 5C 2E 5F 53 42 5F 4F 53  // 0_FLS4p.\._SB_OS
    8ABD: 53 34                                            // S4

            Store (\_SB.PCI0.LPCB.EC0.APBF, \_SB.APS4)
        }


    8ABF: 70 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // p\/._SB_PCI0LPCB
    8ACF: 45 43 30 5F 41 50 42 46 5C 2E 5F 53 42 5F 41 50  // EC0_APBF\._SB_AP
    8ADF: 53 34                                            // S4

        If (LEqual (Arg0, 0x05))
        {
            H2OP (0x55)
        }


    8AE1: A0 0B 93 68 0A 05 48 32 4F 50 0A 55              // ...h..H2OP.U

        If (LEqual (TBTS, One))
        {

    8AED: A0 0D 93 54 42 54 53 01                          // ...TBTS.

            Reset (WFEV)
        }


    8AF5: 5B 26 57 46 45 56                                // [&WFEV

        If (LEqual (Arg0, 0x03))
        {

    8AFB: A0 20 93 68 0A 03                                // . .h..

            If (LAnd (\_PR.DTSE, 
    8B01: A0 1A 90 5C 2E 5F 50 52 5F 44 54 53 45           // ...\._PR_DTSE

LGreater (TCNT, One)))
            {
                TRAP (0x02, 0x1E)
            }
        }


    8B0E: 94 54 43 4E 54 01 54 52 41 50 0A 02 0A 1E        // .TCNT.TRAP....

        If (
    8B1C: A0 0A                                            // ..

LOr (LEqual (Arg0, 0x03), 
    8B1E: 91 93 68 0A 03                                   // ..h..

LEqual (Arg0, 0x04))){}

    8B23: 93 68 0A 04                                      // .h..

        If (
    8B27: A0 07                                            // ..

LEqual (DBGS, Zero)){}

    8B29: 93 44 42 47 53 00                                // .DBGS.

        If (CondRefOf (\_SB.TPM.PTS))
        {
            \_SB.TPM.PTS (Arg0)
        }

        Store (\_SB.PCI0.LPCB.EC0.WLAN, \_SB.PTWL)
        Store (\_SB.PCI0.LPCB.EC0.BLTH, \_SB.PTBT)
        Store (\_SB.PCI0.LPCB.EC0.ST3G, \_SB.PT3G)
        Store (\_SB.PCI0.LPCB.EC0.WLST, \_SB.RDWL)
        Store (\_SB.PCI0.LPCB.EC0.BLTS, \_SB.RDBT)

    8B2F: A0 23 5B 12 5C 2F 03 5F 53 42 5F 54 50 4D 5F 50  // .#[.\/._SB_TPM_P
    8B3F: 54 53 5F 00 5C 2F 03 5F 53 42 5F 54 50 4D 5F 50  // TS_.\/._SB_TPM_P
    8B4F: 54 53 5F 68 70 5C 2F 05 5F 53 42 5F 50 43 49 30  // TS_hp\/._SB_PCI0
    8B5F: 4C 50 43 42 45 43 30 5F 57 4C 41 4E 5C 2E 5F 53  // LPCBEC0_WLAN\._S
    8B6F: 42 5F 50 54 57 4C 70 5C 2F 05 5F 53 42 5F 50 43  // B_PTWLp\/._SB_PC
    8B7F: 49 30 4C 50 43 42 45 43 30 5F 42 4C 54 48 5C 2E  // I0LPCBEC0_BLTH\.
    8B8F: 5F 53 42 5F 50 54 42 54 70 5C 2F 05 5F 53 42 5F  // _SB_PTBTp\/._SB_
    8B9F: 50 43 49 30 4C 50 43 42 45 43 30 5F 53 54 33 47  // PCI0LPCBEC0_ST3G
    8BAF: 5C 2E 5F 53 42 5F 50 54 33 47 70 5C 2F 05 5F 53  // \._SB_PT3Gp\/._S
    8BBF: 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 57 4C  // B_PCI0LPCBEC0_WL
    8BCF: 53 54 5C 2E 5F 53 42 5F 52 44 57 4C 70 5C 2F 05  // ST\._SB_RDWLp\/.
    8BDF: 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F  // _SB_PCI0LPCBEC0_
    8BEF: 42 4C 54 53 5C 2E 5F 53 42 5F 52 44 42 54        // BLTS\._SB_RDBT

        Store (\_SB.PCI0.LPCB.EC0.ED3G, \_SB.RD3G)
    }


    8BFD: 70 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // p\/._SB_PCI0LPCB
    8C0D: 45 43 30 5F 45 44 33 47 5C 2E 5F 53 42 5F 52 44  // EC0_ED3G\._SB_RD
    8C1D: 33 47                                            // 3G

    Method (_WAK, 1, Serialized)  // _WAK: Wake
    {
        P8XH (One, 0xAB)
        \_SB.WTGP (0x53, One)

    8C1F: 14 44 45 5F 57 41 4B 09 50 38 58 48 01 0A AB 5C  // .DE_WAK.P8XH...\
    8C2F: 2E 5F 53 42 5F 57 54 47 50 0A 53 01              // ._SB_WTGP.S.

        If (LEqual (Arg0, One))
        {
            H2OP (0xE1)
        }


    8C3B: A0 0A 93 68 01 48 32 4F 50 0A E1                 // ...h.H2OP..

        If (LEqual (Arg0, 0x03))
        {
            H2OP (0xE3)
        }


    8C46: A0 0B 93 68 0A 03 48 32 4F 50 0A E3              // ...h..H2OP..

        If (LEqual (Arg0, 0x04))
        {
            H2OP (0xE4)

    8C52: A0 2D 93 68 0A 04 48 32 4F 50 0A E4              // .-.h..H2OP..

            Store (\_SB.APS4, \_SB.PCI0.LPCB.EC0.APBF)
        }


    8C5E: 70 5C 2E 5F 53 42 5F 41 50 53 34 5C 2F 05 5F 53  // p\._SB_APS4\/._S
    8C6E: 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 41 50  // B_PCI0LPCBEC0_AP
    8C7E: 42 46                                            // BF

        If (LEqual (Arg0, 0x05))
        {
            H2OP (0xE5)
        }

        \_SB.PCI0.LPCB.EC0.ILID ()

    8C80: A0 0B 93 68 0A 05 48 32 4F 50 0A E5 5C 2F 05 5F  // ...h..H2OP..\/._
    8C90: 53 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 49  // SB_PCI0LPCBEC0_I
    8CA0: 4C 49 44                                         // LID

        If (
    8CA3: A0 23 92                                         // .#.

LGreaterEqual (OSYS, 0x07DC))
        {

    8CA6: 95 4F 53 59 53 0B DC 07                          // .OSYS...

            Store (One, \_SB.PCI0.LPCB.EC0.OSW8)
        }

    8CAE: 70 01 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // p.\/._SB_PCI0LPC
    8CBE: 42 45 43 30 5F 4F 53 57 38                       // BEC0_OSW8

        Else
        {

    8CC7: A1 1A                                            // ..

            Store (Zero, \_SB.PCI0.LPCB.EC0.OSW8)
        }


    8CC9: 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // p.\/._SB_PCI0LPC
    8CD9: 42 45 43 30 5F 4F 53 57 38                       // BEC0_OSW8

        If (
    8CE2: A0 17 92                                         // ...

LGreaterEqual (OSYS, 0x07DD))
        {

    8CE5: 95 4F 53 59 53 0B DD 07                          // .OSYS...

            Store (0x55, \_SB.TPRS)
        }

    8CED: 70 0A 55 5C 2E 5F 53 42 5F 54 50 52 53           // p.U\._SB_TPRS

        Else
        {

    8CFA: A1 0D                                            // ..

            Store (Zero, \_SB.TPRS)
        }


    8CFC: 70 00 5C 2E 5F 53 42 5F 54 50 52 53              // p.\._SB_TPRS

        If (
    8D08: A0 23 92                                         // .#.

LGreaterEqual (OSYS, 0x07DD))
        {

    8D0B: 95 4F 53 59 53 0B DD 07                          // .OSYS...

            Store (One, \_SB.PCI0.LPCB.EC0.OS81)
        }

    8D13: 70 01 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // p.\/._SB_PCI0LPC
    8D23: 42 45 43 30 5F 4F 53 38 31                       // BEC0_OS81

        Else
        {

    8D2C: A1 1A                                            // ..

            Store (Zero, \_SB.PCI0.LPCB.EC0.OS81)
        }


    8D2E: 70 00 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // p.\/._SB_PCI0LPC
    8D3E: 42 45 43 30 5F 4F 53 38 31                       // BEC0_OS81

        If (LOr (LEqual (Arg0, 0x03), 
    8D47: A0 38 91 93 68 0A 03                             // .8..h..

LEqual (Arg0, 0x04)))
        {

    8D4E: 93 68 0A 04                                      // .h..

            If (
    8D52: A0 2D 92                                         // .-.

LGreaterEqual (OSYS, 0x07DD))
            {

    8D55: 95 4F 53 59 53 0B DD 07                          // .OSYS...

                If (CondRefOf (\_SB.PCI0.EPON))
                {
                    \_SB.PCI0.EPON ()
                }
            }
        }


    8D5D: A0 22 5B 12 5C 2F 03 5F 53 42 5F 50 43 49 30 45  // ."[.\/._SB_PCI0E
    8D6D: 50 4F 4E 00 5C 2F 03 5F 53 42 5F 50 43 49 30 45  // PON.\/._SB_PCI0E
    8D7D: 50 4F 4E                                         // PON

        If (LAnd (
    8D80: A0 48 06 90 92                                   // .H...

LNotEqual (And (\_SB.PCI0.B0D3.ABAR, 0xFFFFC004), 0xFFFFC004), 
    8D85: 93 7B 5C 2F 04 5F 53 42 5F 50 43 49 30 42 30 44  // .{\/._SB_PCI0B0D
    8D95: 33 41 42 41 52 0C 04 C0 FF FF 00 0C 04 C0 FF FF  // 3ABAR...........


    8DA5: 92                                               // .

LNotEqual (And (
            \_SB.PCI0.B0D3.ABAR, 0xFFFFC000), Zero)))
        {

    8DA6: 93 7B 5C 2F 04 5F 53 42 5F 50 43 49 30 42 30 44  // .{\/._SB_PCI0B0D
    8DB6: 33 41 42 41 52 0C 00 C0 FF FF 00 00              // 3ABAR.......

            Store (\_SB.PCI0.B0D3.ABAR, \_SB.PCI0.B0D3.BARA) /* External reference */
        }


    8DC2: 70 5C 2F 04 5F 53 42 5F 50 43 49 30 42 30 44 33  // p\/._SB_PCI0B0D3
    8DD2: 41 42 41 52 5C 2F 04 5F 53 42 5F 50 43 49 30 42  // ABAR\/._SB_PCI0B
    8DE2: 30 44 33 42 41 52 41                             // 0D3BARA

        If (NEXP)
        {

    8DE9: A0 36 4E 45 58 50                                // .6NEXP

            If (And (OSCC, One))
            {
                \_SB.PCI0.NHPG ()
            }


    8DEF: A0 17 7B 4F 53 43 43 01 00 5C 2F 03 5F 53 42 5F  // ..{OSCC..\/._SB_
    8DFF: 50 43 49 30 4E 48 50 47                          // PCI0NHPG

            If (And (OSCC, 0x04))
            {
                \_SB.PCI0.NPME ()
            }
        }


    8E07: A0 18 7B 4F 53 43 43 0A 04 00 5C 2F 03 5F 53 42  // ..{OSCC...\/._SB
    8E17: 5F 50 43 49 30 4E 50 4D 45                       // _PCI0NPME

        If (
    8E20: A0 05                                            // ..

LEqual (Arg0, 0x03)){}

    8E22: 93 68 0A 03                                      // .h..

        If (LOr (LEqual (Arg0, 0x03), 
    8E26: A0 42 13 91 93 68 0A 03                          // .B...h..

LEqual (Arg0, 0x04)))
        {

    8E2E: 93 68 0A 04                                      // .h..

            If (LAnd (\_PR.DTSE, 
    8E32: A0 1A 90 5C 2E 5F 50 52 5F 44 54 53 45           // ...\._PR_DTSE

LGreater (TCNT, One)))
            {
                TRAP (0x02, 0x14)
            }


    8E3F: 94 54 43 4E 54 01 54 52 41 50 0A 02 0A 14        // .TCNT.TRAP....

            If (LEqual (RP1D, Zero))
            {

    8E4D: A0 18 93 52 50 31 44 00                          // ...RP1D.

                Notify (\_SB.PCI0.RP01, Zero) // Bus Check
            }


    8E55: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
    8E65: 00                                               // .

            If (LEqual (RP2D, Zero))
            {

    8E66: A0 18 93 52 50 32 44 00                          // ...RP2D.

                Notify (\_SB.PCI0.RP02, Zero) // Bus Check
            }


    8E6E: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
    8E7E: 00                                               // .

            If (LEqual (RP3D, Zero))
            {

    8E7F: A0 18 93 52 50 33 44 00                          // ...RP3D.

                Notify (\_SB.PCI0.RP03, Zero) // Bus Check
            }


    8E87: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
    8E97: 00                                               // .

            If (LEqual (RP4D, Zero))
            {

    8E98: A0 18 93 52 50 34 44 00                          // ...RP4D.

                Notify (\_SB.PCI0.RP04, Zero) // Bus Check
            }


    8EA0: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
    8EB0: 00                                               // .

            If (LEqual (RP5D, Zero))
            {

    8EB1: A0 18 93 52 50 35 44 00                          // ...RP5D.

                Notify (\_SB.PCI0.RP05, Zero) // Bus Check
            }


    8EB9: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
    8EC9: 00                                               // .

            If (LEqual (RP6D, Zero))
            {

    8ECA: A0 18 93 52 50 36 44 00                          // ...RP6D.

                Notify (\_SB.PCI0.RP06, Zero) // Bus Check
            }


    8ED2: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
    8EE2: 00                                               // .

            If (LEqual (RP7D, Zero))
            {

    8EE3: A0 20 93 52 50 37 44 00                          // . .RP7D.

                If (LEqual (DSTS, Zero))
                {

    8EEB: A0 18 93 44 53 54 53 00                          // ...DSTS.

                    Notify (\_SB.PCI0.RP07, Zero) // Bus Check
                }
            }


    8EF3: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
    8F03: 00                                               // .

            If (LEqual (RP8D, Zero))
            {

    8F04: A0 20 93 52 50 38 44 00                          // . .RP8D.

                If (LEqual (DSTS, Zero))
                {

    8F0C: A0 18 93 44 53 54 53 00                          // ...DSTS.

                    Notify (\_SB.PCI0.RP08, Zero) // Bus Check
                }
            }


    8F14: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
    8F24: 00                                               // .

            If (
    8F25: A0 0D                                            // ..

LEqual (\_SB.WBLA, One)){}

    8F27: 93 5C 2E 5F 53 42 5F 57 42 4C 41 01              // .\._SB_WBLA.

            Else
            {

    8F33: A1 0E                                            // ..

                Notify (\_SB.PWRB, 0x02) // Device Wake
            }

            \_SB.PCI0.LPCB.EC0.SCTB ()
        }


    8F35: 86 5C 2E 5F 53 42 5F 50 57 52 42 0A 02 5C 2F 05  // .\._SB_PWRB..\/.
    8F45: 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F  // _SB_PCI0LPCBEC0_
    8F55: 53 43 54 42                                      // SCTB

        If (LOr (LEqual (Arg0, 0x03), 
    8F59: A0 1D 91 93 68 0A 03                             // ....h..

LEqual (Arg0, 0x04)))
        {
            \_SB.PCI0.XHC.XWAK ()
        }


    8F60: 93 68 0A 04 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // .h..\/._SB_PCI0X
    8F70: 48 43 5F 58 57 41 4B                             // HC_XWAK

        If (LEqual (TBTS, One))
        {

    8F77: A0 0D 93 54 42 54 53 01                          // ...TBTS.

            Signal (WFEV)
        }

        Store (\_SB.PTWL, \_SB.PCI0.LPCB.EC0.WLAN)
        Store (\_SB.PTBT, \_SB.PCI0.LPCB.EC0.BLTH)
        Store (\_SB.PT3G, \_SB.PCI0.LPCB.EC0.ST3G)
        Sleep (0x0A)
        Store (\_SB.RDWL, \_SB.PCI0.LPCB.EC0.WLST)
        Store (\_SB.RDBT, \_SB.PCI0.LPCB.EC0.BLTS)
        Store (\_SB.RD3G, \_SB.PCI0.LPCB.EC0.ED3G)
        Store (One, \_SB.PCI0.LPCB.EC0.CPLE)

    8F7F: 5B 24 57 46 45 56 70 5C 2E 5F 53 42 5F 50 54 57  // [$WFEVp\._SB_PTW
    8F8F: 4C 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // L\/._SB_PCI0LPCB
    8F9F: 45 43 30 5F 57 4C 41 4E 70 5C 2E 5F 53 42 5F 50  // EC0_WLANp\._SB_P
    8FAF: 54 42 54 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // TBT\/._SB_PCI0LP
    8FBF: 43 42 45 43 30 5F 42 4C 54 48 70 5C 2E 5F 53 42  // CBEC0_BLTHp\._SB
    8FCF: 5F 50 54 33 47 5C 2F 05 5F 53 42 5F 50 43 49 30  // _PT3G\/._SB_PCI0
    8FDF: 4C 50 43 42 45 43 30 5F 53 54 33 47 5B 22 0A 0A  // LPCBEC0_ST3G["..
    8FEF: 70 5C 2E 5F 53 42 5F 52 44 57 4C 5C 2F 05 5F 53  // p\._SB_RDWL\/._S
    8FFF: 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F 57 4C  // B_PCI0LPCBEC0_WL
    900F: 53 54 70 5C 2E 5F 53 42 5F 52 44 42 54 5C 2F 05  // STp\._SB_RDBT\/.
    901F: 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F  // _SB_PCI0LPCBEC0_
    902F: 42 4C 54 53 70 5C 2E 5F 53 42 5F 52 44 33 47 5C  // BLTSp\._SB_RD3G\
    903F: 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 43  // /._SB_PCI0LPCBEC
    904F: 30 5F 45 44 33 47 70 01 5C 2F 05 5F 53 42 5F 50  // 0_ED3Gp.\/._SB_P
    905F: 43 49 30 4C 50 43 42 45 43 30 5F 43 50 4C 45     // CI0LPCBEC0_CPLE

        Return (
    906E: A4                                               // .

Package (0x02)
        {
            Zero, 
            Zero
        })
    }


    906F: 12 04 02 00 00                                   // .....

    Method (GETB, 3, Serialized)
    {
        Multiply (Arg0, 0x08, Local0)
        Multiply (Arg1, 0x08, Local1)

    9074: 14 1E 47 45 54 42 0B 77 68 0A 08 60 77 69 0A 08  // ..GETB.wh..`wi..
    9084: 61                                               // a

        CreateField (Arg2, Local0, Local1, TBF3)

    9085: 5B 13 6A 60 61 54 42 46 33                       // [.j`aTBF3

        Return (TBF3) /* \GETB.TBF3 */
    }


    908E: A4 54 42 46 33                                   // .TBF3

    Method (PNOT, 0, Serialized)
    {

    9093: 14 43 21 50 4E 4F 54 08                          // .C!PNOT.

        If (CondRefOf (\_SB.PCCD.PENB))
        {

    909B: A0 20 5B 12 5C 2F 03 5F 53 42 5F 50 43 43 44 50  // . [.\/._SB_PCCDP
    90AB: 45 4E 42 00                                      // ENB.

            Notify (\_SB.PCCD, 0x82) // Device-Specific Change
        }

    90AF: 86 5C 2E 5F 53 42 5F 50 43 43 44 0A 82           // .\._SB_PCCD..

        ElseIf
    90BC: A1 42 0D                                         // .B.

 (LGreater (TCNT, One))
        {

    90BF: A0 40 0C 94 54 43 4E 54 01                       // .@..TCNT.

            If (And (PDC0, 0x08))
            {

    90C8: A0 16 7B 50 44 43 30 0A 08 00                    // ..{PDC0...

                Notify (\_PR.CPU0, 0x80) // Performance Capability Change
            }


    90D2: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 80           // .\._PR_CPU0..

            If (And (PDC1, 0x08))
            {

    90DF: A0 16 7B 50 44 43 31 0A 08 00                    // ..{PDC1...

                Notify (\_PR.CPU1, 0x80) // Performance Capability Change
            }


    90E9: 86 5C 2E 5F 50 52 5F 43 50 55 31 0A 80           // .\._PR_CPU1..

            If (And (PDC2, 0x08))
            {

    90F6: A0 16 7B 50 44 43 32 0A 08 00                    // ..{PDC2...

                Notify (\_PR.CPU2, 0x80) // Performance Capability Change
            }


    9100: 86 5C 2E 5F 50 52 5F 43 50 55 32 0A 80           // .\._PR_CPU2..

            If (And (PDC3, 0x08))
            {

    910D: A0 16 7B 50 44 43 33 0A 08 00                    // ..{PDC3...

                Notify (\_PR.CPU3, 0x80) // Performance Capability Change
            }


    9117: 86 5C 2E 5F 50 52 5F 43 50 55 33 0A 80           // .\._PR_CPU3..

            If (And (PDC4, 0x08))
            {

    9124: A0 16 7B 50 44 43 34 0A 08 00                    // ..{PDC4...

                Notify (\_PR.CPU4, 0x80) // Performance Capability Change
            }


    912E: 86 5C 2E 5F 50 52 5F 43 50 55 34 0A 80           // .\._PR_CPU4..

            If (And (PDC5, 0x08))
            {

    913B: A0 16 7B 50 44 43 35 0A 08 00                    // ..{PDC5...

                Notify (\_PR.CPU5, 0x80) // Performance Capability Change
            }


    9145: 86 5C 2E 5F 50 52 5F 43 50 55 35 0A 80           // .\._PR_CPU5..

            If (And (PDC6, 0x08))
            {

    9152: A0 16 7B 50 44 43 36 0A 08 00                    // ..{PDC6...

                Notify (\_PR.CPU6, 0x80) // Performance Capability Change
            }


    915C: 86 5C 2E 5F 50 52 5F 43 50 55 36 0A 80           // .\._PR_CPU6..

            If (And (PDC7, 0x08))
            {

    9169: A0 16 7B 50 44 43 37 0A 08 00                    // ..{PDC7...

                Notify (\_PR.CPU7, 0x80) // Performance Capability Change
            }
        }

    9173: 86 5C 2E 5F 50 52 5F 43 50 55 37 0A 80           // .\._PR_CPU7..

        Else
        {

    9180: A1 0E                                            // ..

            Notify (\_PR.CPU0, 0x80) // Performance Capability Change
        }


    9182: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 80           // .\._PR_CPU0..

        If (LGreater (TCNT, One))
        {

    918F: A0 48 10 94 54 43 4E 54 01                       // .H..TCNT.

            If (LAnd (And (PDC0, 0x08), 
    9198: A0 1F 90 7B 50 44 43 30 0A 08 00                 // ...{PDC0...

And (PDC0, 0x10)))
            {

    91A3: 7B 50 44 43 30 0A 10 00                          // {PDC0...

                Notify (\_PR.CPU0, 0x81) // C-State Change
            }


    91AB: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 81           // .\._PR_CPU0..

            If (LAnd (And (PDC1, 0x08), 
    91B8: A0 1F 90 7B 50 44 43 31 0A 08 00                 // ...{PDC1...

And (PDC1, 0x10)))
            {

    91C3: 7B 50 44 43 31 0A 10 00                          // {PDC1...

                Notify (\_PR.CPU1, 0x81) // C-State Change
            }


    91CB: 86 5C 2E 5F 50 52 5F 43 50 55 31 0A 81           // .\._PR_CPU1..

            If (LAnd (And (PDC2, 0x08), 
    91D8: A0 1F 90 7B 50 44 43 32 0A 08 00                 // ...{PDC2...

And (PDC2, 0x10)))
            {

    91E3: 7B 50 44 43 32 0A 10 00                          // {PDC2...

                Notify (\_PR.CPU2, 0x81) // C-State Change
            }


    91EB: 86 5C 2E 5F 50 52 5F 43 50 55 32 0A 81           // .\._PR_CPU2..

            If (LAnd (And (PDC3, 0x08), 
    91F8: A0 1F 90 7B 50 44 43 33 0A 08 00                 // ...{PDC3...

And (PDC3, 0x10)))
            {

    9203: 7B 50 44 43 33 0A 10 00                          // {PDC3...

                Notify (\_PR.CPU3, 0x81) // C-State Change
            }


    920B: 86 5C 2E 5F 50 52 5F 43 50 55 33 0A 81           // .\._PR_CPU3..

            If (LAnd (And (PDC4, 0x08), 
    9218: A0 1F 90 7B 50 44 43 34 0A 08 00                 // ...{PDC4...

And (PDC4, 0x10)))
            {

    9223: 7B 50 44 43 34 0A 10 00                          // {PDC4...

                Notify (\_PR.CPU4, 0x81) // C-State Change
            }


    922B: 86 5C 2E 5F 50 52 5F 43 50 55 34 0A 81           // .\._PR_CPU4..

            If (LAnd (And (PDC5, 0x08), 
    9238: A0 1F 90 7B 50 44 43 35 0A 08 00                 // ...{PDC5...

And (PDC5, 0x10)))
            {

    9243: 7B 50 44 43 35 0A 10 00                          // {PDC5...

                Notify (\_PR.CPU5, 0x81) // C-State Change
            }


    924B: 86 5C 2E 5F 50 52 5F 43 50 55 35 0A 81           // .\._PR_CPU5..

            If (LAnd (And (PDC6, 0x08), 
    9258: A0 1F 90 7B 50 44 43 36 0A 08 00                 // ...{PDC6...

And (PDC6, 0x10)))
            {

    9263: 7B 50 44 43 36 0A 10 00                          // {PDC6...

                Notify (\_PR.CPU6, 0x81) // C-State Change
            }


    926B: 86 5C 2E 5F 50 52 5F 43 50 55 36 0A 81           // .\._PR_CPU6..

            If (LAnd (And (PDC7, 0x08), 
    9278: A0 1F 90 7B 50 44 43 37 0A 08 00                 // ...{PDC7...

And (PDC7, 0x10)))
            {

    9283: 7B 50 44 43 37 0A 10 00                          // {PDC7...

                Notify (\_PR.CPU7, 0x81) // C-State Change
            }
        }

    928B: 86 5C 2E 5F 50 52 5F 43 50 55 37 0A 81           // .\._PR_CPU7..

        Else
        {

    9298: A1 0E                                            // ..

            Notify (\_PR.CPU0, 0x81) // C-State Change
        }
    }


    929A: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 81           // .\._PR_CPU0..

    OperationRegion (MBAR, SystemMemory, Add (\_SB.PCI0.GMHB (), 0x5000), 0x1000)

    92A7: 5B 80 4D 42 41 52 00 72 5C 2F 03 5F 53 42 5F 50  // [.MBAR.r\/._SB_P
    92B7: 43 49 30 47 4D 48 42 0B 00 50 00 0B 00 10        // CI0GMHB..P....

    Field (MBAR, ByteAcc, NoLock, Preserve)
    {
        Offset (0x938), 
        PWRU,   4, 
        Offset (0x9A0), 
        PPL1,   15, 
        PL1E,   1, 
        CLP1,   1
    }


    92C5: 5B 81 21 4D 42 41 52 01 00 80 9C 04 50 57 52 55  // [.!MBAR.....PWRU
    92D5: 04 00 4C 33 50 50 4C 31 0F 50 4C 31 45 01 43 4C  // ..L3PPL1.PL1E.CL
    92E5: 50 31 01                                         // P1.

    Name (CLMP, Zero)

    92E8: 08 43 4C 4D 50 00                                // .CLMP.

    Name (PLEN, Zero)

    92EE: 08 50 4C 45 4E 00                                // .PLEN.

    Name (PLSV, 0x8000)

    92F4: 08 50 4C 53 56 0B 00 80                          // .PLSV...

    Name (CSEM, Zero)

    92FC: 08 43 53 45 4D 00                                // .CSEM.

    Method (SPL1, 0, Serialized)
    {

    9302: 14 47 07 53 50 4C 31 08                          // .G.SPL1.

        Name (PPUU, Zero)

    930A: 08 50 50 55 55 00                                // .PPUU.

        If (LEqual (CSEM, One))
        {

    9310: A0 09 93 43 53 45 4D 01                          // ...CSEM.

            Return (Zero)
        }

        Store (One, CSEM) /* \CSEM */
        Store (PPL1, PLSV) /* \PLSV */
        Store (PL1E, PLEN) /* \PLEN */
        Store (CLP1, CLMP) /* \CLMP */

    9318: A4 00 70 01 43 53 45 4D 70 50 50 4C 31 50 4C 53  // ..p.CSEMpPPL1PLS
    9328: 56 70 50 4C 31 45 50 4C 45 4E 70 43 4C 50 31 43  // VpPL1EPLENpCLP1C
    9338: 4C 4D 50                                         // LMP

        If (LEqual (PWRU, Zero))
        {

    933B: A0 0D 93 50 57 52 55 00                          // ...PWRU.

            Store (One, PPUU) /* \SPL1.PPUU */
        }

    9343: 70 01 50 50 55 55                                // p.PPUU

        Else
        {

    9349: A1 0D                                            // ..

            ShiftLeft (Decrement (PWRU), 0x02, PPUU) /* \SPL1.PPUU */
        }

        Multiply (PLVL, PPUU, Local0)
        Divide (Local0, 0x03E8, , Local1)
        Store (Local1, PPL1) /* \PPL1 */
        Store (One, PL1E) /* \PL1E */

    934B: 79 76 50 57 52 55 0A 02 50 50 55 55 77 50 4C 56  // yvPWRU..PPUUwPLV
    935B: 4C 50 50 55 55 60 78 60 0B E8 03 00 61 70 61 50  // LPPUU`x`....apaP
    936B: 50 4C 31 70 01 50 4C 31 45                       // PL1p.PL1E

        Store (One, CLP1) /* \CLP1 */
    }


    9374: 70 01 43 4C 50 31                                // p.CLP1

    Method (RPL1, 0, Serialized)
    {
        Store (PLSV, PPL1) /* \PPL1 */
        Store (PLEN, PL1E) /* \PL1E */
        Store (CLMP, CLP1) /* \CLP1 */

    937A: 14 27 52 50 4C 31 08 70 50 4C 53 56 50 50 4C 31  // .'RPL1.pPLSVPPL1
    938A: 70 50 4C 45 4E 50 4C 31 45 70 43 4C 4D 50 43 4C  // pPLENPL1EpCLMPCL
    939A: 50 31                                            // P1

        Store (Zero, CSEM) /* \CSEM */
    }


    939C: 70 00 43 53 45 4D                                // p.CSEM

    Name (DDPS, Zero)

    93A2: 08 44 44 50 53 00                                // .DDPS.

    Name (UAMS, Zero)

    93A8: 08 55 41 4D 53 00                                // .UAMS.

    Name (VBOK, Zero)

    93AE: 08 56 42 4F 4B 00                                // .VBOK.

    Method (GUAM, 1, Serialized)
    {

    93B4: 14 42 0F 47 55 41 4D 09                          // .B.GUAM.

        If (
    93BC: A0 4A 0E 92                                      // .J..

LNotEqual (Arg0, DDPS))
        {
            Store (Arg0, DDPS) /* \DDPS */
            Store (LAnd (Arg0, 
    93C0: 93 68 44 44 50 53 70 68 44 44 50 53 70 90 68     // .hDDPSphDDPSp.h

LNot (PWRS)), UAMS) /* \UAMS */

    93CF: 92 50 57 52 53 55 41 4D 53                       // .PWRSUAMS

            If (Arg0)
            {
                P8XH (Zero, 0xC5)
                P8XH (One, Zero)

    93D8: A0 4E 06 68 50 38 58 48 00 0A C5 50 38 58 48 01  // .N.hP8XH...P8XH.
    93E8: 00                                               // .

                If (PSCP)
                {

    93E9: A0 43 05 50 53 43 50                             // .C.PSCP

                    If (LAnd (CondRefOf (\_PR.CPU0._PSS), 
    93F0: A0 4C 04 90 5B 12 5C 2F 03 5F 50 52 5F 43 50 55  // .L..[.\/._PR_CPU
    9400: 30 5F 50 53 53 00                                // 0_PSS.

CondRefOf (\_PR.CPU0._PPC)))
                    {
                        Subtract (SizeOf (\_PR.CPU0._PSS), One, \_PR.CPU0._PPC) /* External reference */
                        PNOT ()
                    }
                }


    9406: 5B 12 5C 2F 03 5F 50 52 5F 43 50 55 30 5F 50 50  // [.\/._PR_CPU0_PP
    9416: 43 00 74 87 5C 2F 03 5F 50 52 5F 43 50 55 30 5F  // C.t.\/._PR_CPU0_
    9426: 50 53 53 01 5C 2F 03 5F 50 52 5F 43 50 55 30 5F  // PSS.\/._PR_CPU0_
    9436: 50 50 43 50 4E 4F 54                             // PPCPNOT

                If (PLCS)
                {
                    SPL1 ()
                }
            }

    943D: A0 09 50 4C 43 53 53 50 4C 31                    // ..PLCSSPL1

            Else
            {

    9447: A1 4B 05                                         // .K.

                If (LEqual (ECNO, One))
                {

    944A: A0 11 93 45 43 4E 4F 01                          // ...ECNO.

                    Store (Acquire (EHLD, 0xFFFF), Local0)
                }

                P8XH (Zero, 0xC5)
                P8XH (One, 0xAB)

    9452: 70 5B 23 45 48 4C 44 FF FF 60 50 38 58 48 00 0A  // p[#EHLD..`P8XH..
    9462: C5 50 38 58 48 01 0A AB                          // .P8XH...

                If (PSCP)
                {

    946A: A0 2E 50 53 43 50                                // ..PSCP

                    If (CondRefOf (\_PR.CPU0._PPC))
                    {
                        Store (Zero, \_PR.CPU0._PPC) /* External reference */
                        PNOT ()
                    }
                }


    9470: A0 28 5B 12 5C 2F 03 5F 50 52 5F 43 50 55 30 5F  // .([.\/._PR_CPU0_
    9480: 50 50 43 00 70 00 5C 2F 03 5F 50 52 5F 43 50 55  // PPC.p.\/._PR_CPU
    9490: 30 5F 50 50 43 50 4E 4F 54                       // 0_PPCPNOT

                If (PLCS)
                {
                    RPL1 ()
                }
            }

            P_CS ()
        }
    }


    9499: A0 09 50 4C 43 53 52 50 4C 31 50 5F 43 53        // ..PLCSRPL1P_CS

    Method (P_CS, 0, Serialized)
    {

    94A7: 14 47 06 50 5F 43 53 08                          // .G.P_CS.

        If (CondRefOf (\_SB.PCI0.PAUD.PUAM))
        {
            \_SB.PCI0.PAUD.PUAM ()
        }


    94AF: A0 2A 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 50  // .*[.\/._SB_PCI0P
    94BF: 41 55 44 50 55 41 4D 00 5C 2F 04 5F 53 42 5F 50  // AUDPUAM.\/._SB_P
    94CF: 43 49 30 50 41 55 44 50 55 41 4D                 // CI0PAUDPUAM

        If (LEqual (OSYS, 0x07DC))
        {

    94DA: A0 34 93 4F 53 59 53 0B DC 07                    // .4.OSYS...

            If (CondRefOf (\_SB.PCI0.XHC.DUAM))
            {
                \_SB.PCI0.XHC.DUAM ()
            }
        }
    }


    94E4: A0 2A 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // .*[.\/._SB_PCI0X
    94F4: 48 43 5F 44 55 41 4D 00 5C 2F 04 5F 53 42 5F 50  // HC_DUAM.\/._SB_P
    9504: 43 49 30 58 48 43 5F 44 55 41 4D                 // CI0XHC_DUAM

    Scope (\)
    {

    950F: 10 1C 5C 00                                      // ..\.

        OperationRegion (IO_H, SystemIO, 0x1000, 0x04)

    9513: 5B 80 49 4F 5F 48 01 0B 00 10 0A 04              // [.IO_H......

        Field (IO_H, ByteAcc, NoLock, Preserve)
        {
            TRPH,   8
        }
    }


    951F: 5B 81 0B 49 4F 5F 48 01 54 52 50 48 08           // [..IO_H.TRPH.

    Method (TRAP, 2, Serialized)
    {
        Store (Arg1, SMIF) /* \SMIF */

    952C: 14 49 05 54 52 41 50 0A 70 69 53 4D 49 46        // .I.TRAP.piSMIF

        If (LEqual (Arg0, 0x02))
        {
            Store (Arg1, \_PR.DTSF) /* External reference */
            Store (Zero, \_PR.TRPD) /* External reference */

    953A: A0 28 93 68 0A 02 70 69 5C 2E 5F 50 52 5F 44 54  // .(.h..pi\._PR_DT
    954A: 53 46 70 00 5C 2E 5F 50 52 5F 54 52 50 44        // SFp.\._PR_TRPD

            Return (\_PR.DTSF) /* External reference */
        }


    9558: A4 5C 2E 5F 50 52 5F 44 54 53 46                 // .\._PR_DTSF

        If (LEqual (Arg0, 0x03))
        {

    9563: A0 0B 93 68 0A 03                                // ...h..

            Store (Zero, TRPH) /* \TRPH */
        }


    9569: 70 00 54 52 50 48                                // p.TRPH

        If (LEqual (Arg0, 0x04))
        {

    956F: A0 11 93 68 0A 04                                // ...h..

            Store (Zero, \_PR.TRPF) /* External reference */
        }


    9575: 70 00 5C 2E 5F 50 52 5F 54 52 50 46              // p.\._PR_TRPF

        Return (SMIF) /* \SMIF */
    }


    9581: A4 53 4D 49 46                                   // .SMIF

    Scope (_SB.PCI0)
    {

    9586: 10 41 2A 2E 5F 53 42 5F 50 43 49 30              // .A*._SB_PCI0

        Method (PTMA, 0, NotSerialized)
        {

    9592: 14 11 50 54 4D 41 00                             // ..PTMA.

            Return (\_PR.BGMA) /* External reference */
        }


    9599: A4 5C 2E 5F 50 52 5F 42 47 4D 41                 // .\._PR_BGMA

        Method (PTMS, 0, NotSerialized)
        {

    95A4: 14 11 50 54 4D 53 00                             // ..PTMS.

            Return (\_PR.BGMS) /* External reference */
        }


    95AB: A4 5C 2E 5F 50 52 5F 42 47 4D 53                 // .\._PR_BGMS

        Method (PTIA, 0, NotSerialized)
        {

    95B6: 14 11 50 54 49 41 00                             // ..PTIA.

            Return (\_PR.BGIA) /* External reference */
        }


    95BD: A4 5C 2E 5F 50 52 5F 42 47 49 41                 // .\._PR_BGIA

        Method (_INI, 0, Serialized)  // _INI: Initialize
        {
            Store (0x07D9, OSYS) /* \OSYS */

    95C8: 14 4F 0C 5F 49 4E 49 08 70 0B D9 07 4F 53 59 53  // .O._INI.p...OSYS

            If (CondRefOf (\_OSI, Local0))
            {

    95D8: A0 45 09 5B 12 5C 5F 4F 53 49 60                 // .E.[.\_OSI`

                If (_OSI ("Linux"))
                {
                    Store (0x03E8, OSYS) /* \OSYS */

    95E3: A0 1A 5F 4F 53 49 0D 4C 69 6E 75 78 00 70 0B E8  // .._OSI.Linux.p..
    95F3: 03 4F 53 59 53                                   // .OSYS

                    Store (One, LINX) /* \LINX */
                }


    95F8: 70 01 4C 49 4E 58                                // p.LINX

                If (_OSI ("Windows 2009"))
                {

    95FE: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    960E: 30 30 39 00                                      // 009.

                    Store (0x07D9, OSYS) /* \OSYS */
                }


    9612: 70 0B D9 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2012"))
                {

    961A: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    962A: 30 31 32 00                                      // 012.

                    Store (0x07DC, OSYS) /* \OSYS */
                }


    962E: 70 0B DC 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2013"))
                {

    9636: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    9646: 30 31 33 00                                      // 013.

                    Store (0x07DD, OSYS) /* \OSYS */
                }


    964A: 70 0B DD 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2015"))
                {

    9652: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
    9662: 30 31 35 00                                      // 015.

                    Store (0x07DF, OSYS) /* \OSYS */
                }
            }


    9666: 70 0B DF 07 4F 53 59 53                          // p...OSYS

            If (CondRefOf (\_PR.DTSE))
            {

    966E: A0 29 5B 12 5C 2E 5F 50 52 5F 44 54 53 45 00     // .)[.\._PR_DTSE.

                If (
    967D: A0 1A 92                                         // ...

LGreaterEqual (\_PR.DTSE, One))
                {

    9680: 95 5C 2E 5F 50 52 5F 44 54 53 45 01              // .\._PR_DTSE.

                    Store (One, \_PR.DSAE) /* External reference */
                }
            }
        }


    968C: 70 01 5C 2E 5F 50 52 5F 44 53 41 45              // p.\._PR_DSAE

        Method (NHPG, 0, Serialized)
        {
            Store (Zero, ^RP01.HPEX) /* \_SB_.PCI0.RP01.HPEX */
            Store (Zero, ^RP02.HPEX) /* \_SB_.PCI0.RP02.HPEX */
            Store (Zero, ^RP03.HPEX) /* \_SB_.PCI0.RP03.HPEX */
            Store (Zero, ^RP04.HPEX) /* \_SB_.PCI0.RP04.HPEX */
            Store (Zero, ^RP05.HPEX) /* \_SB_.PCI0.RP05.HPEX */
            Store (Zero, ^RP06.HPEX) /* \_SB_.PCI0.RP06.HPEX */
            Store (Zero, ^RP07.HPEX) /* \_SB_.PCI0.RP07.HPEX */
            Store (Zero, ^RP08.HPEX) /* \_SB_.PCI0.RP08.HPEX */
            Store (One, ^RP01.HPSX) /* \_SB_.PCI0.RP01.HPSX */
            Store (One, ^RP02.HPSX) /* \_SB_.PCI0.RP02.HPSX */
            Store (One, ^RP03.HPSX) /* \_SB_.PCI0.RP03.HPSX */
            Store (One, ^RP04.HPSX) /* \_SB_.PCI0.RP04.HPSX */
            Store (One, ^RP05.HPSX) /* \_SB_.PCI0.RP05.HPSX */
            Store (One, ^RP06.HPSX) /* \_SB_.PCI0.RP06.HPSX */
            Store (One, ^RP07.HPSX) /* \_SB_.PCI0.RP07.HPSX */

    9698: 14 47 0C 4E 48 50 47 08 70 00 5E 2E 52 50 30 31  // .G.NHPG.p.^.RP01
    96A8: 48 50 45 58 70 00 5E 2E 52 50 30 32 48 50 45 58  // HPEXp.^.RP02HPEX
    96B8: 70 00 5E 2E 52 50 30 33 48 50 45 58 70 00 5E 2E  // p.^.RP03HPEXp.^.
    96C8: 52 50 30 34 48 50 45 58 70 00 5E 2E 52 50 30 35  // RP04HPEXp.^.RP05
    96D8: 48 50 45 58 70 00 5E 2E 52 50 30 36 48 50 45 58  // HPEXp.^.RP06HPEX
    96E8: 70 00 5E 2E 52 50 30 37 48 50 45 58 70 00 5E 2E  // p.^.RP07HPEXp.^.
    96F8: 52 50 30 38 48 50 45 58 70 01 5E 2E 52 50 30 31  // RP08HPEXp.^.RP01
    9708: 48 50 53 58 70 01 5E 2E 52 50 30 32 48 50 53 58  // HPSXp.^.RP02HPSX
    9718: 70 01 5E 2E 52 50 30 33 48 50 53 58 70 01 5E 2E  // p.^.RP03HPSXp.^.
    9728: 52 50 30 34 48 50 53 58 70 01 5E 2E 52 50 30 35  // RP04HPSXp.^.RP05
    9738: 48 50 53 58 70 01 5E 2E 52 50 30 36 48 50 53 58  // HPSXp.^.RP06HPSX
    9748: 70 01 5E 2E 52 50 30 37 48 50 53 58              // p.^.RP07HPSX

            Store (One, ^RP08.HPSX) /* \_SB_.PCI0.RP08.HPSX */
        }


    9754: 70 01 5E 2E 52 50 30 38 48 50 53 58              // p.^.RP08HPSX

        Method (NPME, 0, Serialized)
        {
            Store (Zero, ^RP01.PMEX) /* \_SB_.PCI0.RP01.PMEX */
            Store (Zero, ^RP02.PMEX) /* \_SB_.PCI0.RP02.PMEX */
            Store (Zero, ^RP03.PMEX) /* \_SB_.PCI0.RP03.PMEX */
            Store (Zero, ^RP04.PMEX) /* \_SB_.PCI0.RP04.PMEX */
            Store (Zero, ^RP05.PMEX) /* \_SB_.PCI0.RP05.PMEX */
            Store (Zero, ^RP06.PMEX) /* \_SB_.PCI0.RP06.PMEX */
            Store (Zero, ^RP07.PMEX) /* \_SB_.PCI0.RP07.PMEX */
            Store (Zero, ^RP08.PMEX) /* \_SB_.PCI0.RP08.PMEX */
            Store (One, ^RP01.PMSX) /* \_SB_.PCI0.RP01.PMSX */
            Store (One, ^RP02.PMSX) /* \_SB_.PCI0.RP02.PMSX */
            Store (One, ^RP03.PMSX) /* \_SB_.PCI0.RP03.PMSX */
            Store (One, ^RP04.PMSX) /* \_SB_.PCI0.RP04.PMSX */
            Store (One, ^RP05.PMSX) /* \_SB_.PCI0.RP05.PMSX */
            Store (One, ^RP06.PMSX) /* \_SB_.PCI0.RP06.PMSX */
            Store (One, ^RP07.PMSX) /* \_SB_.PCI0.RP07.PMSX */

    9760: 14 47 0C 4E 50 4D 45 08 70 00 5E 2E 52 50 30 31  // .G.NPME.p.^.RP01
    9770: 50 4D 45 58 70 00 5E 2E 52 50 30 32 50 4D 45 58  // PMEXp.^.RP02PMEX
    9780: 70 00 5E 2E 52 50 30 33 50 4D 45 58 70 00 5E 2E  // p.^.RP03PMEXp.^.
    9790: 52 50 30 34 50 4D 45 58 70 00 5E 2E 52 50 30 35  // RP04PMEXp.^.RP05
    97A0: 50 4D 45 58 70 00 5E 2E 52 50 30 36 50 4D 45 58  // PMEXp.^.RP06PMEX
    97B0: 70 00 5E 2E 52 50 30 37 50 4D 45 58 70 00 5E 2E  // p.^.RP07PMEXp.^.
    97C0: 52 50 30 38 50 4D 45 58 70 01 5E 2E 52 50 30 31  // RP08PMEXp.^.RP01
    97D0: 50 4D 53 58 70 01 5E 2E 52 50 30 32 50 4D 53 58  // PMSXp.^.RP02PMSX
    97E0: 70 01 5E 2E 52 50 30 33 50 4D 53 58 70 01 5E 2E  // p.^.RP03PMSXp.^.
    97F0: 52 50 30 34 50 4D 53 58 70 01 5E 2E 52 50 30 35  // RP04PMSXp.^.RP05
    9800: 50 4D 53 58 70 01 5E 2E 52 50 30 36 50 4D 53 58  // PMSXp.^.RP06PMSX
    9810: 70 01 5E 2E 52 50 30 37 50 4D 53 58              // p.^.RP07PMSX

            Store (One, ^RP08.PMSX) /* \_SB_.PCI0.RP08.PMSX */
        }
    }


    981C: 70 01 5E 2E 52 50 30 38 50 4D 53 58              // p.^.RP08PMSX

    Scope (\)
    {

    9828: 10 4A 09 5C 00                                   // .J.\.

        Name (PICM, Zero)

    982D: 08 50 49 43 4D 00                                // .PICM.

        Name (PRWP, 
    9833: 08 50 52 57 50                                   // .PRWP

Package (0x02)
        {
            Zero, 
            Zero
        })

    9838: 12 04 02 00 00                                   // .....

        Method (GPRW, 2, Serialized)
        {
            Store (Arg0, 
    983D: 14 45 08 47 50 52 57 0A 70 68                    // .E.GPRW.ph

Index (PRWP, Zero))
            Store (ShiftLeft (SS1, One), Local0)
            Or (Local0, ShiftLeft (SS2, 0x02), Local0)
            Or (Local0, ShiftLeft (SS3, 0x03), Local0)
            Or (Local0, ShiftLeft (SS4, 0x04), Local0)

    9847: 88 50 52 57 50 00 00 70 79 53 53 31 5F 01 00 60  // .PRWP..pySS1_..`
    9857: 7D 60 79 53 53 32 5F 0A 02 00 60 7D 60 79 53 53  // }`ySS2_...`}`ySS
    9867: 33 5F 0A 03 00 60 7D 60 79 53 53 34 5F 0A 04 00  // 3_...`}`ySS4_...
    9877: 60                                               // `

            If (And (ShiftLeft (One, Arg1), Local0))
            {

    9878: A0 11 7B 79 01 69 00 60 00                       // ..{y.i.`.

                Store (Arg1, 
    9881: 70 69                                            // pi

Index (PRWP, One))
            }

    9883: 88 50 52 57 50 01 00                             // .PRWP..

            Else
            {
                ShiftRight (Local0, One, Local0)

    988A: A1 0E 7A 60 01 60                                // ..z`.`

                FindSetLeftBit (Local0, 
    9890: 81 60                                            // .`

Index (PRWP, One))
            }


    9892: 88 50 52 57 50 01 00                             // .PRWP..

            If (ULTP)
            {

    9899: A0 09 55 4C 54 50                                // ..ULTP

                Store (0x69, Local1)
            }

    989F: 70 0A 69 61                                      // p.ia

            Else
            {

    98A3: A1 05                                            // ..

                Store (0x09, Local1)
            }


    98A5: 70 0A 09 61                                      // p..a

            If (LAnd (LEqual (PMEE, Zero), 
    98A9: A0 14 90 93 50 4D 45 45 00                       // ....PMEE.

LEqual (Arg0, Local1)))
            {

    98B2: 93 68 61                                         // .ha

                Store (Zero, 
    98B5: 70 00                                            // p.

Index (PRWP, One))
            }


    98B7: 88 50 52 57 50 01 00                             // .PRWP..

            Return (PRWP) /* \PRWP */
        }
    }


    98BE: A4 50 52 57 50                                   // .PRWP

    Scope (_SB)
    {

    98C3: 10 48 11 5F 53 42 5F                             // .H._SB_

        Name (OSCI, Zero)

    98CA: 08 4F 53 43 49 00                                // .OSCI.

        Name (OSCO, Zero)

    98D0: 08 4F 53 43 4F 00                                // .OSCO.

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {

    98D6: 14 45 10 5F 4F 53 43 0C                          // .E._OSC.

            CreateDWordField (Arg3, Zero, STS0)

    98DE: 8A 6B 00 53 54 53 30                             // .k.STS0

            CreateDWordField (Arg3, 0x04, CAP0)

    98E5: 8A 6B 0A 04 43 41 50 30                          // .k..CAP0

            If (LEqual (Arg0, 
    98ED: A0 41 0D 93 68                                   // .A..h

ToUUID ("0811b06e-4a27-44f9-8d60-3cbbc22e7b48") /* Platform-wide Capabilities */))
            {

    98F2: 11 13 0A 10 6E B0 11 08 27 4A F9 44 8D 60 3C BB  // ....n...'J.D.`<.
    9902: C2 2E 7B 48                                      // ..{H

                If (LEqual (Arg1, One))
                {

    9906: A0 4D 09 93 69 01                                // .M..i.

                    If (And (CAP0, 0x04))
                    {
                        Store (0x04, OSCO) /* \_SB_.OSCO */

    990C: A0 3C 7B 43 41 50 30 0A 04 00 70 0A 04 4F 53 43  // .<{CAP0...p..OSC
    991C: 4F                                               // O

                        If (
    991D: A0 2B 92                                         // .+.

LNotEqual (And (SGMD, 0x0F), 0x02))
                        {

    9920: 93 7B 53 47 4D 44 0A 0F 00 0A 02                 // .{SGMD.....

                            If (LEqual (RTD3, Zero))
                            {
                                And (CAP0, 0x3B, CAP0) /* \_SB_._OSC.CAP0 */

    992B: A0 1D 93 52 54 44 33 00 7B 43 41 50 30 0A 3B 43  // ...RTD3.{CAP0.;C
    993B: 41 50 30                                         // AP0

                                Or (STS0, 0x10, STS0) /* \_SB_._OSC.STS0 */
                            }
                        }
                    }


    993E: 7D 53 54 53 30 0A 10 53 54 53 30                 // }STS0..STS0

                    If (And (CAP0, 0x20))
                    {

    9949: A0 4A 05 7B 43 41 50 30 0A 20 00                 // .J.{CAP0. .

                        If (CondRefOf (\_SB.PCCD.PENB))
                        {

    9954: A0 37 5B 12 5C 2F 03 5F 53 42 5F 50 43 43 44 50  // .7[.\/._SB_PCCDP
    9964: 45 4E 42 00                                      // ENB.

                            If (LEqual (^PCCD.PENB, Zero))
                            {
                                And (CAP0, 0x1F, CAP0) /* \_SB_._OSC.CAP0 */

    9968: A0 23 93 5E 2E 50 43 43 44 50 45 4E 42 00 7B 43  // .#.^.PCCDPENB.{C
    9978: 41 50 30 0A 1F 43 41 50 30                       // AP0..CAP0

                                Or (STS0, 0x10, STS0) /* \_SB_._OSC.STS0 */
                            }
                        }

    9981: 7D 53 54 53 30 0A 10 53 54 53 30                 // }STS0..STS0

                        Else
                        {
                            And (CAP0, 0x1F, CAP0) /* \_SB_._OSC.CAP0 */

    998C: A1 17 7B 43 41 50 30 0A 1F 43 41 50 30           // ..{CAP0..CAP0

                            Or (STS0, 0x10, STS0) /* \_SB_._OSC.STS0 */
                        }
                    }
                }

    9999: 7D 53 54 53 30 0A 10 53 54 53 30                 // }STS0..STS0

                Else
                {
                    And (STS0, 0xFFFFFF00, STS0) /* \_SB_._OSC.STS0 */

    99A4: A1 1A 7B 53 54 53 30 0C 00 FF FF FF 53 54 53 30  // ..{STS0.....STS0

                    Or (STS0, 0x0A, STS0) /* \_SB_._OSC.STS0 */
                }
            }

    99B4: 7D 53 54 53 30 0A 0A 53 54 53 30                 // }STS0..STS0

            Else
            {
                And (STS0, 0xFFFFFF00, STS0) /* \_SB_._OSC.STS0 */

    99BF: A1 1A 7B 53 54 53 30 0C 00 FF FF FF 53 54 53 30  // ..{STS0.....STS0

                Or (STS0, 0x06, STS0) /* \_SB_._OSC.STS0 */
            }


    99CF: 7D 53 54 53 30 0A 06 53 54 53 30                 // }STS0..STS0

            Return (Arg3)
        }
    }


    99DA: A4 6B                                            // .k

    Scope (_PR)
    {

    99DC: 10 4E 06 5F 50 52 5F                             // .N._PR_

        Processor (CPU0, 0x01, 0x00001810, 0x06){}

    99E3: 5B 83 0B 43 50 55 30 01 10 18 00 00 06           // [..CPU0......

        Processor (CPU1, 0x02, 0x00001810, 0x06){}

    99F0: 5B 83 0B 43 50 55 31 02 10 18 00 00 06           // [..CPU1......

        Processor (CPU2, 0x03, 0x00001810, 0x06){}

    99FD: 5B 83 0B 43 50 55 32 03 10 18 00 00 06           // [..CPU2......

        Processor (CPU3, 0x04, 0x00001810, 0x06){}

    9A0A: 5B 83 0B 43 50 55 33 04 10 18 00 00 06           // [..CPU3......

        Processor (CPU4, 0x05, 0x00001810, 0x06){}

    9A17: 5B 83 0B 43 50 55 34 05 10 18 00 00 06           // [..CPU4......

        Processor (CPU5, 0x06, 0x00001810, 0x06){}

    9A24: 5B 83 0B 43 50 55 35 06 10 18 00 00 06           // [..CPU5......

        Processor (CPU6, 0x07, 0x00001810, 0x06){}

    9A31: 5B 83 0B 43 50 55 36 07 10 18 00 00 06           // [..CPU6......

        Processor (CPU7, 0x08, 0x00001810, 0x06){}
    }


    9A3E: 5B 83 0B 43 50 55 37 08 10 18 00 00 06           // [..CPU7......

    Scope (_SB)
    {

    9A4B: 10 44 06 5F 53 42 5F                             // .D._SB_

        Device (PAGD)
        {

    9A52: 5B 82 4C 05 50 41 47 44                          // [.L.PAGD

            Name (_HID, "ACPI000C" /* Processor Aggregator Device */)  // _HID: Hardware ID

    9A5A: 08 5F 48 49 44 0D 41 43 50 49 30 30 30 43 00     // ._HID.ACPI000C.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    9A69: 14 30 5F 53 54 41 00                             // .0_STA.

                If (_OSI ("Processor Aggregator Device"))
                {

    9A70: A0 25 5F 4F 53 49 0D 50 72 6F 63 65 73 73 6F 72  // .%_OSI.Processor
    9A80: 20 41 67 67 72 65 67 61 74 6F 72 20 44 65 76 69  //  Aggregator Devi
    9A90: 63 65 00                                         // ce.

                    Return (0x0F)
                }

    9A93: A4 0A 0F                                         // ...

                Else
                {

    9A96: A1 03                                            // ..

                    Return (Zero)
                }
            }


    9A98: A4 00                                            // ..

            Name (PURX, 
    9A9A: 08 50 55 52 58                                   // .PURX

Package (0x02)
            {
                One, 
                Zero
            })

    9A9F: 12 04 02 01 00                                   // .....

            Method (_PUR, 0, NotSerialized)  // _PUR: Processor Utilization Request
            {

    9AA4: 14 0B 5F 50 55 52 00                             // .._PUR.

                Return (PURX) /* \_SB_.PAGD.PURX */
            }
        }
    }


    9AAB: A4 50 55 52 58                                   // .PURX

    Scope (_SB.PCI0)
    {

    9AB0: 10 45 17 2E 5F 53 42 5F 50 43 49 30              // .E.._SB_PCI0

        Device (PDRC)
        {

    9ABC: 5B 82 48 16 50 44 52 43                          // [.H.PDRC

            Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID

    9AC4: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, One)  // _UID: Unique ID

    9ACE: 08 5F 55 49 44 01                                // ._UID.

            Name (BUF0, 
    9AD4: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00004000,         // Address Length
                    _Y17)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00008000,         // Address Length
                    _Y1A)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y1B)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y1C)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y1D)
                Memory32Fixed (ReadWrite,
                    0xFED20000,         // Address Base
                    0x00020000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFED90000,         // Address Base
                    0x00004000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFED45000,         // Address Base
                    0x0004B000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFF000000,         // Address Base
                    0x01000000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFEE00000,         // Address Base
                    0x00100000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00010000,         // Address Length
                    _Y18)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00010000,         // Address Length
                    _Y19)
            })

    9AD9: 11 46 09 0A 92 86 09 00 01 00 00 00 00 00 40 00  // .F............@.
    9AE9: 00 86 09 00 01 00 00 00 00 00 80 00 00 86 09 00  // ................
    9AF9: 01 00 00 00 00 00 10 00 00 86 09 00 01 00 00 00  // ................
    9B09: 00 00 10 00 00 86 09 00 01 00 00 00 00 00 00 00  // ................
    9B19: 00 86 09 00 01 00 00 D2 FE 00 00 02 00 86 09 00  // ................
    9B29: 00 00 00 D9 FE 00 40 00 00 86 09 00 01 00 50 D4  // ......@.......P.
    9B39: FE 00 B0 04 00 86 09 00 00 00 00 00 FF 00 00 00  // ................
    9B49: 01 86 09 00 00 00 00 E0 FE 00 00 10 00 86 09 00  // ................
    9B59: 01 00 00 00 00 00 00 01 00 86 09 00 01 00 00 00  // ................
    9B69: 00 00 00 01 00 79 00                             // .....y.

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

    9B70: 14 45 0B 5F 43 52 53 08                          // .E._CRS.

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y17._BAS, RBR0)  // _BAS: Base Address
                ShiftLeft (^^LPCB.RCBA, 0x0E, RBR0) /* \_SB_.PCI0.PDRC._CRS.RBR0 */

    9B78: 8A 42 55 46 30 0A 04 52 42 52 30 79 5E 5E 2E 4C  // .BUF0..RBR0y^^.L
    9B88: 50 43 42 52 43 42 41 0A 0E 52 42 52 30           // PCBRCBA..RBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y18._BAS, SNR0)  // _BAS: Base Address
                Store (SRMB, SNR0) /* \_SB_.PCI0.PDRC._CRS.SNR0 */

    9B95: 8A 42 55 46 30 0A 7C 53 4E 52 30 70 53 52 4D 42  // .BUF0.|SNR0pSRMB
    9BA5: 53 4E 52 30                                      // SNR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y19._BAS, XWT0)  // _BAS: Base Address
                Store (XWMB, XWT0) /* \_SB_.PCI0.PDRC._CRS.XWT0 */

    9BA9: 8A 42 55 46 30 0A 88 58 57 54 30 70 58 57 4D 42  // .BUF0..XWT0pXWMB
    9BB9: 58 57 54 30                                      // XWT0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y1A._BAS, MBR0)  // _BAS: Base Address
                Store (GMHB (), MBR0) /* \_SB_.PCI0.PDRC._CRS.MBR0 */

    9BBD: 8A 42 55 46 30 0A 10 4D 42 52 30 70 47 4D 48 42  // .BUF0..MBR0pGMHB
    9BCD: 4D 42 52 30                                      // MBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y1B._BAS, DBR0)  // _BAS: Base Address
                Store (GDMB (), DBR0) /* \_SB_.PCI0.PDRC._CRS.DBR0 */

    9BD1: 8A 42 55 46 30 0A 1C 44 42 52 30 70 47 44 4D 42  // .BUF0..DBR0pGDMB
    9BE1: 44 42 52 30                                      // DBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y1C._BAS, EBR0)  // _BAS: Base Address
                Store (GEPB (), EBR0) /* \_SB_.PCI0.PDRC._CRS.EBR0 */

    9BE5: 8A 42 55 46 30 0A 28 45 42 52 30 70 47 45 50 42  // .BUF0.(EBR0pGEPB
    9BF5: 45 42 52 30                                      // EBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y1D._BAS, XBR0)  // _BAS: Base Address
                Store (GPCB (), XBR0) /* \_SB_.PCI0.PDRC._CRS.XBR0 */

    9BF9: 8A 42 55 46 30 0A 34 58 42 52 30 70 47 50 43 42  // .BUF0.4XBR0pGPCB
    9C09: 58 42 52 30                                      // XBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y1D._LEN, XSZ0)  // _LEN: Length
                Store (GPCL (), XSZ0) /* \_SB_.PCI0.PDRC._CRS.XSZ0 */

    9C0D: 8A 42 55 46 30 0A 38 58 53 5A 30 70 47 50 43 4C  // .BUF0.8XSZ0pGPCL
    9C1D: 58 53 5A 30                                      // XSZ0

                Return (BUF0) /* \_SB_.PCI0.PDRC.BUF0 */
            }
        }
    }


    9C21: A4 42 55 46 30                                   // .BUF0

    Method (BRTN, 1, Serialized)
    {

    9C26: 14 2A 42 52 54 4E 09                             // .*BRTN.

        If (LEqual (And (DIDX, 0x0F00), 0x0400))
        {

    9C2D: A0 23 93 7B 44 49 44 58 0B 00 0F 00 0B 00 04     // .#.{DIDX.......

            Notify (\_SB.PCI0.GFX0.DD1F, Arg0)
        }
    }


    9C3C: 86 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46 58 30  // .\/._SB_PCI0GFX0
    9C4C: 44 44 31 46 68                                   // DD1Fh

    Scope (_GPE)
    {

    9C51: 10 4C 9E 5F 47 50 45                             // .L._GPE

        Method (_L69, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {

    9C58: 14 4D 20 5F 4C 36 39 00                          // .M _L69.

            If (LEqual (RP1D, Zero))
            {
                \_SB.PCI0.RP01.HPME ()

    9C60: A0 2C 93 52 50 31 44 00 5C 2F 04 5F 53 42 5F 50  // .,.RP1D.\/._SB_P
    9C70: 43 49 30 52 50 30 31 48 50 4D 45                 // CI0RP01HPME

                Notify (\_SB.PCI0.RP01, 0x02) // Device Wake
            }


    9C7B: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
    9C8B: 0A 02                                            // ..

            If (LEqual (RP2D, Zero))
            {
                \_SB.PCI0.RP02.HPME ()

    9C8D: A0 2C 93 52 50 32 44 00 5C 2F 04 5F 53 42 5F 50  // .,.RP2D.\/._SB_P
    9C9D: 43 49 30 52 50 30 32 48 50 4D 45                 // CI0RP02HPME

                Notify (\_SB.PCI0.RP02, 0x02) // Device Wake
            }


    9CA8: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
    9CB8: 0A 02                                            // ..

            If (LEqual (RP3D, Zero))
            {
                \_SB.PCI0.RP03.HPME ()

    9CBA: A0 2C 93 52 50 33 44 00 5C 2F 04 5F 53 42 5F 50  // .,.RP3D.\/._SB_P
    9CCA: 43 49 30 52 50 30 33 48 50 4D 45                 // CI0RP03HPME

                Notify (\_SB.PCI0.RP03, 0x02) // Device Wake
            }


    9CD5: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
    9CE5: 0A 02                                            // ..

            If (LEqual (RP4D, Zero))
            {
                \_SB.PCI0.RP04.HPME ()

    9CE7: A0 2C 93 52 50 34 44 00 5C 2F 04 5F 53 42 5F 50  // .,.RP4D.\/._SB_P
    9CF7: 43 49 30 52 50 30 34 48 50 4D 45                 // CI0RP04HPME

                Notify (\_SB.PCI0.RP04, 0x02) // Device Wake
            }


    9D02: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
    9D12: 0A 02                                            // ..

            If (LEqual (RP5D, Zero))
            {
                \_SB.PCI0.RP05.HPME ()

    9D14: A0 2C 93 52 50 35 44 00 5C 2F 04 5F 53 42 5F 50  // .,.RP5D.\/._SB_P
    9D24: 43 49 30 52 50 30 35 48 50 4D 45                 // CI0RP05HPME

                Notify (\_SB.PCI0.RP05, 0x02) // Device Wake
            }


    9D2F: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
    9D3F: 0A 02                                            // ..

            If (LEqual (RP6D, Zero))
            {
                \_SB.PCI0.RP06.HPME ()

    9D41: A0 2C 93 52 50 36 44 00 5C 2F 04 5F 53 42 5F 50  // .,.RP6D.\/._SB_P
    9D51: 43 49 30 52 50 30 36 48 50 4D 45                 // CI0RP06HPME

                Notify (\_SB.PCI0.RP06, 0x02) // Device Wake
            }


    9D5C: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
    9D6C: 0A 02                                            // ..

            If (LEqual (RP7D, Zero))
            {
                \_SB.PCI0.RP07.HPME ()

    9D6E: A0 2C 93 52 50 37 44 00 5C 2F 04 5F 53 42 5F 50  // .,.RP7D.\/._SB_P
    9D7E: 43 49 30 52 50 30 37 48 50 4D 45                 // CI0RP07HPME

                Notify (\_SB.PCI0.RP07, 0x02) // Device Wake
            }


    9D89: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
    9D99: 0A 02                                            // ..

            If (LEqual (RP8D, Zero))
            {
                \_SB.PCI0.RP08.HPME ()

    9D9B: A0 2C 93 52 50 38 44 00 5C 2F 04 5F 53 42 5F 50  // .,.RP8D.\/._SB_P
    9DAB: 43 49 30 52 50 30 38 48 50 4D 45                 // CI0RP08HPME

                Notify (\_SB.PCI0.RP08, 0x02) // Device Wake
            }


    9DB6: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
    9DC6: 0A 02                                            // ..

            If (LEqual (D1F0, One))
            {
                \_SB.PCI0.PEG0.HPME ()
                Notify (\_SB.PCI0.PEG0, 0x02) // Device Wake

    9DC8: A0 43 04 93 44 31 46 30 01 5C 2F 04 5F 53 42 5F  // .C..D1F0.\/._SB_
    9DD8: 50 43 49 30 50 45 47 30 48 50 4D 45 86 5C 2F 03  // PCI0PEG0HPME.\/.
    9DE8: 5F 53 42 5F 50 43 49 30 50 45 47 30 0A 02        // _SB_PCI0PEG0..

                Notify (\_SB.PCI0.PEG0.PEGP, 0x02) // Device Wake
            }


    9DF6: 86 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
    9E06: 50 45 47 50 0A 02                                // PEGP..

            If (LEqual (D1F1, One))
            {
                \_SB.PCI0.PEG1.HPME ()

    9E0C: A0 2C 93 44 31 46 31 01 5C 2F 04 5F 53 42 5F 50  // .,.D1F1.\/._SB_P
    9E1C: 43 49 30 50 45 47 31 48 50 4D 45                 // CI0PEG1HPME

                Notify (\_SB.PCI0.PEG1, 0x02) // Device Wake
            }


    9E27: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 50 45 47 31  // .\/._SB_PCI0PEG1
    9E37: 0A 02                                            // ..

            If (LEqual (D1F2, One))
            {
                \_SB.PCI0.PEG2.HPME ()

    9E39: A0 2C 93 44 31 46 32 01 5C 2F 04 5F 53 42 5F 50  // .,.D1F2.\/._SB_P
    9E49: 43 49 30 50 45 47 32 48 50 4D 45                 // CI0PEG2HPME

                Notify (\_SB.PCI0.PEG2, 0x02) // Device Wake
            }
        }


    9E54: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 50 45 47 32  // .\/._SB_PCI0PEG2
    9E64: 0A 02                                            // ..

        Method (_L61, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {
            Add (L01C, One, L01C) /* \L01C */
            P8XH (Zero, One)
            P8XH (One, L01C)

    9E66: 14 44 6F 5F 4C 36 31 00 72 4C 30 31 43 01 4C 30  // .Do_L61.rL01C.L0
    9E76: 31 43 50 38 58 48 00 01 50 38 58 48 01 4C 30 31  // 1CP8XH..P8XH.L01
    9E86: 43                                               // C

            If (LAnd (LEqual (RP1D, Zero), \_SB.PCI0.RP01.HPSX))
            {

    9E87: A0 45 0D 90 93 52 50 31 44 00 5C 2F 04 5F 53 42  // .E...RP1D.\/._SB
    9E97: 5F 50 43 49 30 52 50 30 31 48 50 53 58           // _PCI0RP01HPSX

                If (LOr (
    9EA4: A0 14 91 92                                      // ....

LNotEqual (TBTS, One), 
    9EA8: 93 54 42 54 53 01                                // .TBTS.


    9EAE: 92                                               // .

LNotEqual (TBSE, One)))
                {

    9EAF: 93 54 42 53 45 01                                // .TBSE.

                    Sleep (0x64)
                }


    9EB5: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP01.PDCX)
                {
                    Store (One, \_SB.PCI0.RP01.PDCX)
                    Store (One, \_SB.PCI0.RP01.HPSX)

    9EB9: A0 4C 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .L.\/._SB_PCI0RP
    9EC9: 30 31 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 01PDCXp.\/._SB_P
    9ED9: 43 49 30 52 50 30 31 50 44 43 58 70 01 5C 2F 04  // CI0RP01PDCXp.\/.
    9EE9: 5F 53 42 5F 50 43 49 30 52 50 30 31 48 50 53 58  // _SB_PCI0RP01HPSX

                    If (LNot (\_SB.PCI0.RP01.PDSX))
                    {

    9EF9: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
    9F09: 30 31 50 44 53 58                                // 01PDSX

                        Store (Zero, \_SB.PCI0.RP01.L0SE)
                    }


    9F0F: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    9F1F: 31 4C 30 53 45                                   // 1L0SE

                    If (LOr (
    9F24: A0 21 91 92                                      // .!..

LNotEqual (TBTS, One), 
    9F28: 93 54 42 54 53 01                                // .TBTS.


    9F2E: 92                                               // .

LNotEqual (TBSE, One)))
                    {

    9F2F: 93 54 42 53 45 01                                // .TBSE.

                        Notify (\_SB.PCI0.RP01, Zero) // Bus Check
                    }
                }

    9F35: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
    9F45: 00                                               // .

                Else
                {

    9F46: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP01.HPSX)
                }
            }


    9F48: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    9F58: 31 48 50 53 58                                   // 1HPSX

            If (LAnd (LEqual (RP2D, Zero), \_SB.PCI0.RP02.HPSX))
            {

    9F5D: A0 47 0D 90 93 52 50 32 44 00 5C 2F 04 5F 53 42  // .G...RP2D.\/._SB
    9F6D: 5F 50 43 49 30 52 50 30 32 48 50 53 58           // _PCI0RP02HPSX

                If (LOr (
    9F7A: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
    9F7E: 93 54 42 54 53 01                                // .TBTS.


    9F84: 92                                               // .

LNotEqual (TBSE, 0x02)))
                {

    9F85: 93 54 42 53 45 0A 02                             // .TBSE..

                    Sleep (0x64)
                }


    9F8C: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP02.PDCX)
                {
                    Store (One, \_SB.PCI0.RP02.PDCX)
                    Store (One, \_SB.PCI0.RP02.HPSX)

    9F90: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
    9FA0: 30 32 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 02PDCXp.\/._SB_P
    9FB0: 43 49 30 52 50 30 32 50 44 43 58 70 01 5C 2F 04  // CI0RP02PDCXp.\/.
    9FC0: 5F 53 42 5F 50 43 49 30 52 50 30 32 48 50 53 58  // _SB_PCI0RP02HPSX

                    If (LNot (\_SB.PCI0.RP02.PDSX))
                    {

    9FD0: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
    9FE0: 30 32 50 44 53 58                                // 02PDSX

                        Store (Zero, \_SB.PCI0.RP02.L0SE)
                    }


    9FE6: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    9FF6: 32 4C 30 53 45                                   // 2L0SE

                    If (LOr (
    9FFB: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
    9FFF: 93 54 42 54 53 01                                // .TBTS.


    A005: 92                                               // .

LNotEqual (TBSE, 0x02)))
                    {

    A006: 93 54 42 53 45 0A 02                             // .TBSE..

                        Notify (\_SB.PCI0.RP02, Zero) // Bus Check
                    }
                }

    A00D: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
    A01D: 00                                               // .

                Else
                {

    A01E: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP02.HPSX)
                }
            }


    A020: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A030: 32 48 50 53 58                                   // 2HPSX

            If (LAnd (LEqual (RP3D, Zero), \_SB.PCI0.RP03.HPSX))
            {

    A035: A0 47 0D 90 93 52 50 33 44 00 5C 2F 04 5F 53 42  // .G...RP3D.\/._SB
    A045: 5F 50 43 49 30 52 50 30 33 48 50 53 58           // _PCI0RP03HPSX

                If (LOr (
    A052: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
    A056: 93 54 42 54 53 01                                // .TBTS.


    A05C: 92                                               // .

LNotEqual (TBSE, 0x03)))
                {

    A05D: 93 54 42 53 45 0A 03                             // .TBSE..

                    Sleep (0x64)
                }


    A064: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP03.PDCX)
                {
                    Store (One, \_SB.PCI0.RP03.PDCX)
                    Store (One, \_SB.PCI0.RP03.HPSX)

    A068: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
    A078: 30 33 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 03PDCXp.\/._SB_P
    A088: 43 49 30 52 50 30 33 50 44 43 58 70 01 5C 2F 04  // CI0RP03PDCXp.\/.
    A098: 5F 53 42 5F 50 43 49 30 52 50 30 33 48 50 53 58  // _SB_PCI0RP03HPSX

                    If (LNot (\_SB.PCI0.RP03.PDSX))
                    {

    A0A8: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
    A0B8: 30 33 50 44 53 58                                // 03PDSX

                        Store (Zero, \_SB.PCI0.RP03.L0SE)
                    }


    A0BE: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A0CE: 33 4C 30 53 45                                   // 3L0SE

                    If (LOr (
    A0D3: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
    A0D7: 93 54 42 54 53 01                                // .TBTS.


    A0DD: 92                                               // .

LNotEqual (TBSE, 0x03)))
                    {

    A0DE: 93 54 42 53 45 0A 03                             // .TBSE..

                        Notify (\_SB.PCI0.RP03, Zero) // Bus Check
                    }
                }

    A0E5: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
    A0F5: 00                                               // .

                Else
                {

    A0F6: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP03.HPSX)
                }
            }


    A0F8: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A108: 33 48 50 53 58                                   // 3HPSX

            If (LAnd (LEqual (RP4D, Zero), \_SB.PCI0.RP04.HPSX))
            {

    A10D: A0 47 0D 90 93 52 50 34 44 00 5C 2F 04 5F 53 42  // .G...RP4D.\/._SB
    A11D: 5F 50 43 49 30 52 50 30 34 48 50 53 58           // _PCI0RP04HPSX

                If (LOr (
    A12A: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
    A12E: 93 54 42 54 53 01                                // .TBTS.


    A134: 92                                               // .

LNotEqual (TBSE, 0x04)))
                {

    A135: 93 54 42 53 45 0A 04                             // .TBSE..

                    Sleep (0x64)
                }


    A13C: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP04.PDCX)
                {
                    Store (One, \_SB.PCI0.RP04.PDCX)
                    Store (One, \_SB.PCI0.RP04.HPSX)

    A140: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
    A150: 30 34 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 04PDCXp.\/._SB_P
    A160: 43 49 30 52 50 30 34 50 44 43 58 70 01 5C 2F 04  // CI0RP04PDCXp.\/.
    A170: 5F 53 42 5F 50 43 49 30 52 50 30 34 48 50 53 58  // _SB_PCI0RP04HPSX

                    If (LNot (\_SB.PCI0.RP04.PDSX))
                    {

    A180: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
    A190: 30 34 50 44 53 58                                // 04PDSX

                        Store (Zero, \_SB.PCI0.RP04.L0SE)
                    }


    A196: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A1A6: 34 4C 30 53 45                                   // 4L0SE

                    If (LOr (
    A1AB: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
    A1AF: 93 54 42 54 53 01                                // .TBTS.


    A1B5: 92                                               // .

LNotEqual (TBSE, 0x04)))
                    {

    A1B6: 93 54 42 53 45 0A 04                             // .TBSE..

                        Notify (\_SB.PCI0.RP04, Zero) // Bus Check
                    }
                }

    A1BD: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
    A1CD: 00                                               // .

                Else
                {

    A1CE: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP04.HPSX)
                }
            }


    A1D0: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A1E0: 34 48 50 53 58                                   // 4HPSX

            If (LAnd (LEqual (RP5D, Zero), \_SB.PCI0.RP05.HPSX))
            {

    A1E5: A0 47 0D 90 93 52 50 35 44 00 5C 2F 04 5F 53 42  // .G...RP5D.\/._SB
    A1F5: 5F 50 43 49 30 52 50 30 35 48 50 53 58           // _PCI0RP05HPSX

                If (LOr (
    A202: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
    A206: 93 54 42 54 53 01                                // .TBTS.


    A20C: 92                                               // .

LNotEqual (TBSE, 0x05)))
                {

    A20D: 93 54 42 53 45 0A 05                             // .TBSE..

                    Sleep (0x64)
                }


    A214: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP05.PDCX)
                {
                    Store (One, \_SB.PCI0.RP05.PDCX)
                    Store (One, \_SB.PCI0.RP05.HPSX)

    A218: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
    A228: 30 35 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 05PDCXp.\/._SB_P
    A238: 43 49 30 52 50 30 35 50 44 43 58 70 01 5C 2F 04  // CI0RP05PDCXp.\/.
    A248: 5F 53 42 5F 50 43 49 30 52 50 30 35 48 50 53 58  // _SB_PCI0RP05HPSX

                    If (LNot (\_SB.PCI0.RP05.PDSX))
                    {

    A258: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
    A268: 30 35 50 44 53 58                                // 05PDSX

                        Store (Zero, \_SB.PCI0.RP05.L0SE)
                    }


    A26E: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A27E: 35 4C 30 53 45                                   // 5L0SE

                    If (LOr (
    A283: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
    A287: 93 54 42 54 53 01                                // .TBTS.


    A28D: 92                                               // .

LNotEqual (TBSE, 0x05)))
                    {

    A28E: 93 54 42 53 45 0A 05                             // .TBSE..

                        Notify (\_SB.PCI0.RP05, Zero) // Bus Check
                    }
                }

    A295: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
    A2A5: 00                                               // .

                Else
                {

    A2A6: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP05.HPSX)
                }
            }


    A2A8: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A2B8: 35 48 50 53 58                                   // 5HPSX

            If (LAnd (LEqual (RP6D, Zero), \_SB.PCI0.RP06.HPSX))
            {

    A2BD: A0 47 0D 90 93 52 50 36 44 00 5C 2F 04 5F 53 42  // .G...RP6D.\/._SB
    A2CD: 5F 50 43 49 30 52 50 30 36 48 50 53 58           // _PCI0RP06HPSX

                If (LOr (
    A2DA: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
    A2DE: 93 54 42 54 53 01                                // .TBTS.


    A2E4: 92                                               // .

LNotEqual (TBSE, 0x06)))
                {

    A2E5: 93 54 42 53 45 0A 06                             // .TBSE..

                    Sleep (0x64)
                }


    A2EC: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP06.PDCX)
                {
                    Store (One, \_SB.PCI0.RP06.PDCX)
                    Store (One, \_SB.PCI0.RP06.HPSX)

    A2F0: A0 4D 08 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .M.\/._SB_PCI0RP
    A300: 30 36 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 06PDCXp.\/._SB_P
    A310: 43 49 30 52 50 30 36 50 44 43 58 70 01 5C 2F 04  // CI0RP06PDCXp.\/.
    A320: 5F 53 42 5F 50 43 49 30 52 50 30 36 48 50 53 58  // _SB_PCI0RP06HPSX

                    If (LNot (\_SB.PCI0.RP06.PDSX))
                    {

    A330: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
    A340: 30 36 50 44 53 58                                // 06PDSX

                        Store (Zero, \_SB.PCI0.RP06.L0SE)
                    }


    A346: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A356: 36 4C 30 53 45                                   // 6L0SE

                    If (LOr (
    A35B: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
    A35F: 93 54 42 54 53 01                                // .TBTS.


    A365: 92                                               // .

LNotEqual (TBSE, 0x06)))
                    {

    A366: 93 54 42 53 45 0A 06                             // .TBSE..

                        Notify (\_SB.PCI0.RP06, Zero) // Bus Check
                    }
                }

    A36D: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
    A37D: 00                                               // .

                Else
                {

    A37E: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP06.HPSX)
                }
            }


    A380: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A390: 36 48 50 53 58                                   // 6HPSX

            If (LAnd (LEqual (RP7D, Zero), \_SB.PCI0.RP07.HPSX))
            {

    A395: A0 42 0E 90 93 52 50 37 44 00 5C 2F 04 5F 53 42  // .B...RP7D.\/._SB
    A3A5: 5F 50 43 49 30 52 50 30 37 48 50 53 58           // _PCI0RP07HPSX

                If (LOr (
    A3B2: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
    A3B6: 93 54 42 54 53 01                                // .TBTS.


    A3BC: 92                                               // .

LNotEqual (TBSE, 0x07)))
                {

    A3BD: 93 54 42 53 45 0A 07                             // .TBSE..

                    Sleep (0x64)
                }


    A3C4: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP07.PDCX)
                {
                    Store (One, \_SB.PCI0.RP07.PDCX)
                    Store (One, \_SB.PCI0.RP07.HPSX)

    A3C8: A0 48 09 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .H.\/._SB_PCI0RP
    A3D8: 30 37 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 07PDCXp.\/._SB_P
    A3E8: 43 49 30 52 50 30 37 50 44 43 58 70 01 5C 2F 04  // CI0RP07PDCXp.\/.
    A3F8: 5F 53 42 5F 50 43 49 30 52 50 30 37 48 50 53 58  // _SB_PCI0RP07HPSX

                    If (LNot (\_SB.PCI0.RP07.PDSX))
                    {

    A408: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
    A418: 30 37 50 44 53 58                                // 07PDSX

                        Store (Zero, \_SB.PCI0.RP07.L0SE)
                    }


    A41E: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A42E: 37 4C 30 53 45                                   // 7L0SE

                    If (LEqual (PFLV, 0x02))
                    {

    A433: A0 2B 93 50 46 4C 56 0A 02                       // .+.PFLV..

                        If (LOr (
    A43C: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
    A440: 93 54 42 54 53 01                                // .TBTS.


    A446: 92                                               // .

LNotEqual (TBSE, 0x07)))
                        {

    A447: 93 54 42 53 45 0A 07                             // .TBSE..

                            Notify (\_SB.PCI0.RP07, Zero) // Bus Check
                        }
                    }

    A44E: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
    A45E: 00                                               // .

                    Else
                    {
                    }
                }

    A45F: A1 01                                            // ..

                Else
                {

    A461: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP07.HPSX)
                }
            }


    A463: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A473: 37 48 50 53 58                                   // 7HPSX

            If (LAnd (LEqual (RP8D, Zero), \_SB.PCI0.RP08.HPSX))
            {

    A478: A0 42 0E 90 93 52 50 38 44 00 5C 2F 04 5F 53 42  // .B...RP8D.\/._SB
    A488: 5F 50 43 49 30 52 50 30 38 48 50 53 58           // _PCI0RP08HPSX

                If (LOr (
    A495: A0 15 91 92                                      // ....

LNotEqual (TBTS, One), 
    A499: 93 54 42 54 53 01                                // .TBTS.


    A49F: 92                                               // .

LNotEqual (TBSE, 0x08)))
                {

    A4A0: 93 54 42 53 45 0A 08                             // .TBSE..

                    Sleep (0x64)
                }


    A4A7: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP08.PDCX)
                {
                    Store (One, \_SB.PCI0.RP08.PDCX)
                    Store (One, \_SB.PCI0.RP08.HPSX)

    A4AB: A0 48 09 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .H.\/._SB_PCI0RP
    A4BB: 30 38 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 08PDCXp.\/._SB_P
    A4CB: 43 49 30 52 50 30 38 50 44 43 58 70 01 5C 2F 04  // CI0RP08PDCXp.\/.
    A4DB: 5F 53 42 5F 50 43 49 30 52 50 30 38 48 50 53 58  // _SB_PCI0RP08HPSX

                    If (LNot (\_SB.PCI0.RP08.PDSX))
                    {

    A4EB: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
    A4FB: 30 38 50 44 53 58                                // 08PDSX

                        Store (Zero, \_SB.PCI0.RP08.L0SE)
                    }


    A501: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A511: 38 4C 30 53 45                                   // 8L0SE

                    If (LEqual (PFLV, 0x02))
                    {

    A516: A0 2B 93 50 46 4C 56 0A 02                       // .+.PFLV..

                        If (LOr (
    A51F: A0 22 91 92                                      // ."..

LNotEqual (TBTS, One), 
    A523: 93 54 42 54 53 01                                // .TBTS.


    A529: 92                                               // .

LNotEqual (TBSE, 0x08)))
                        {

    A52A: 93 54 42 53 45 0A 08                             // .TBSE..

                            Notify (\_SB.PCI0.RP08, Zero) // Bus Check
                        }
                    }

    A531: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
    A541: 00                                               // .

                    Else
                    {
                    }
                }

    A542: A1 01                                            // ..

                Else
                {

    A544: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP08.HPSX)
                }
            }
        }


    A546: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
    A556: 38 48 50 53 58                                   // 8HPSX

        Method (_L62, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {
            Store (Zero, GPEC) /* \GPEC */

    A55B: 14 49 07 5F 4C 36 32 00 70 00 47 50 45 43        // .I._L62.p.GPEC

            If (CondRefOf (\_PR.DTSE))
            {

    A569: A0 37 5B 12 5C 2E 5F 50 52 5F 44 54 53 45 00     // .7[.\._PR_DTSE.

                If (
    A578: A0 28 92                                         // .(.

LGreaterEqual (\_PR.DTSE, One))
                {
                    Notify (\_TZ.TZ00, 0x80) // Status Change

    A57B: 95 5C 2E 5F 50 52 5F 44 54 53 45 01 86 5C 2E 5F  // .\._PR_DTSE..\._
    A58B: 54 5A 5F 54 5A 30 30 0A 80                       // TZ_TZ00..

                    Notify (\_TZ.TZ01, 0x80) // Thermal Status Change
                }
            }


    A594: 86 5C 2E 5F 54 5A 5F 54 5A 30 31 0A 80           // .\._TZ_TZ01..

            If (CondRefOf (\_SB.PCCD.PENB))
            {

    A5A1: A0 33 5B 12 5C 2F 03 5F 53 42 5F 50 43 43 44 50  // .3[.\/._SB_PCCDP
    A5B1: 45 4E 42 00                                      // ENB.

                If (LEqual (\_SB.PCCD.PENB, One))
                {

    A5B5: A0 1F 93 5C 2F 03 5F 53 42 5F 50 43 43 44 50 45  // ...\/._SB_PCCDPE
    A5C5: 4E 42 01                                         // NB.

                    Notify (\_SB.PCCD, 0x80) // Status Change
                }
            }
        }


    A5C8: 86 5C 2E 5F 53 42 5F 50 43 43 44 0A 80           // .\._SB_PCCD..

        Method (_L66, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {

    A5D5: 14 34 5F 4C 36 36 00                             // .4_L66.

            If (LAnd (\_SB.PCI0.GFX0.GSSE, 
    A5DC: A0 2D 90 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46  // .-.\/._SB_PCI0GF
    A5EC: 58 30 47 53 53 45                                // X0GSSE

LNot (GSMI)))
            {
                \_SB.PCI0.GFX0.GSCI ()
            }
        }


    A5F2: 92 47 53 4D 49 5C 2F 04 5F 53 42 5F 50 43 49 30  // .GSMI\/._SB_PCI0
    A602: 47 46 58 30 47 53 43 49                          // GFX0GSCI

        Method (_L67, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {

    A60A: 14 1C 5F 4C 36 37 00                             // .._L67.

            Store (0x20, \_SB.PCI0.SBUS.HSTS)
        }


    A611: 70 0A 20 5C 2F 04 5F 53 42 5F 50 43 49 30 53 42  // p. \/._SB_PCI0SB
    A621: 55 53 48 53 54 53                                // USHSTS

        Method (_L68, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {
        }


    A627: 14 06 5F 4C 36 38 00                             // .._L68.

        Method (_L1B, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {

    A62E: 14 08 5F 4C 31 42 00                             // .._L1B.

            Return (Zero)
        }


    A635: A4 00                                            // ..

        Method (_L00, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {
        }
    }


    A637: 14 06 5F 4C 30 30 00                             // .._L00.

    Scope (_SB.PCI0.SAT0.PRT0)
    {

    A63E: 10 49 09 2F 04 5F 53 42 5F 50 43 49 30 53 41 54  // .I./._SB_PCI0SAT
    A64E: 30 50 52 54 30                                   // 0PRT0

        Name (FDEV, Zero)

    A653: 08 46 44 45 56 00                                // .FDEV.

        Name (FDRP, Zero)

    A659: 08 46 44 52 50 00                                // .FDRP.

        Method (_SDD, 1, Serialized)  // _SDD: Set Device Data
        {

    A65F: 14 28 5F 53 44 44 09                             // .(_SDD.

            CreateByteField (Arg0, 0x9D, BFDS)
            ToInteger (BFDS, FDEV) /* \_SB_.PCI0.SAT0.PRT0.FDEV */

    A666: 8C 68 0A 9D 42 46 44 53 99 42 46 44 53 46 44 45  // .h..BFDS.BFDSFDE
    A676: 56                                               // V

            CreateByteField (Arg0, 0x9A, BFRP)

    A677: 8C 68 0A 9A 42 46 52 50                          // .h..BFRP

            ToInteger (BFRP, FDRP) /* \_SB_.PCI0.SAT0.PRT0.FDRP */
        }


    A67F: 99 42 46 52 50 46 44 52 50                       // .BFRPFDRP

        Method (_GTF, 0, Serialized)  // _GTF: Get Task File
        {

    A688: 14 4F 04 5F 47 54 46 08                          // .O._GTF.

            If (LAnd (LAnd (LEqual (DVS0, One), 
    A690: A0 32 90 90 93 44 56 53 30 01                    // .2...DVS0.

LEqual (And (FDEV, One), One)), 
    A69A: 93 7B 46 44 45 56 01 00 01                       // .{FDEV...


                LEqual (And (FDRP, 0x80), 0x80)))
            {

    A6A3: 93 7B 46 44 52 50 0A 80 00 0A 80                 // .{FDRP.....

                Name (PIB1, 
    A6AE: 08 50 49 42 31                                   // .PIB1

Buffer (0x07)
                {
                     0x10, 0x09, 0x00, 0x00, 0x00, 0xB0, 0xEF         // .......
                })

    A6B3: 11 0A 0A 07 10 09 00 00 00 B0 EF                 // ...........

                Return (PIB1) /* \_SB_.PCI0.SAT0.PRT0._GTF.PIB1 */
            }


    A6BE: A4 50 49 42 31                                   // .PIB1

            Name (PIB2, 
    A6C3: 08 50 49 42 32                                   // .PIB2

Buffer (0x07)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00         // .......
            })

    A6C8: 11 0A 0A 07 00 00 00 00 00 00 00                 // ...........

            Return (PIB2) /* \_SB_.PCI0.SAT0.PRT0._GTF.PIB2 */
        }
    }


    A6D3: A4 50 49 42 32                                   // .PIB2

    Scope (_SB.PCI0.SAT0.PRT1)
    {

    A6D8: 10 4D 0E 2F 04 5F 53 42 5F 50 43 49 30 53 41 54  // .M./._SB_PCI0SAT
    A6E8: 30 50 52 54 31                                   // 0PRT1

        Name (FDEV, Zero)

    A6ED: 08 46 44 45 56 00                                // .FDEV.

        Name (FDRP, Zero)

    A6F3: 08 46 44 52 50 00                                // .FDRP.

        Name (SSDF, Zero)

    A6F9: 08 53 53 44 46 00                                // .SSDF.

        Method (_SDD, 1, Serialized)  // _SDD: Set Device Data
        {

    A6FF: 14 46 07 5F 53 44 44 09                          // .F._SDD.

            CreateWordField (Arg0, 0xA0, W080)

    A707: 8B 68 0A A0 57 30 38 30                          // .h..W080

            CreateWordField (Arg0, 0x01B2, W217)

    A70F: 8B 68 0B B2 01 57 32 31 37                       // .h...W217

            If (LEqual (SDPO, One))
            {

    A718: A0 0D 93 53 44 50 4F 01                          // ...SDPO.

                Store (One, SSDF) /* \_SB_.PCI0.SAT0.PRT1.SSDF */
            }

    A720: 70 01 53 53 44 46                                // p.SSDF

            ElseIf
    A726: A1 2D                                            // .-

 (LEqual (SDPO, 0x02))
            {

    A728: A0 2B 93 53 44 50 4F 0A 02                       // .+.SDPO..

                If (
    A731: A0 22 92                                         // .".

LNotEqual (W080, 0xFFFF))
                {

    A734: 93 57 30 38 30 0B FF FF                          // .W080...

                    If (LAnd (W080, 0x0100))
                    {

    A73C: A0 17 90 57 30 38 30 0B 00 01                    // ...W080...

                        If (LEqual (W217, One))
                        {

    A746: A0 0D 93 57 32 31 37 01                          // ...W217.

                            Store (One, SSDF) /* \_SB_.PCI0.SAT0.PRT1.SSDF */
                        }
                    }
                }
            }


    A74E: 70 01 53 53 44 46                                // p.SSDF

            CreateByteField (Arg0, 0x9D, BFDS)
            ToInteger (BFDS, FDEV) /* \_SB_.PCI0.SAT0.PRT1.FDEV */

    A754: 8C 68 0A 9D 42 46 44 53 99 42 46 44 53 46 44 45  // .h..BFDS.BFDSFDE
    A764: 56                                               // V

            CreateByteField (Arg0, 0x9A, BFRP)

    A765: 8C 68 0A 9A 42 46 52 50                          // .h..BFRP

            ToInteger (BFRP, FDRP) /* \_SB_.PCI0.SAT0.PRT1.FDRP */
        }


    A76D: 99 42 46 52 50 46 44 52 50                       // .BFRPFDRP

        Method (_GTF, 0, Serialized)  // _GTF: Get Task File
        {

    A776: 14 4F 04 5F 47 54 46 08                          // .O._GTF.

            If (LAnd (LAnd (LEqual (DVS1, One), 
    A77E: A0 32 90 90 93 44 56 53 31 01                    // .2...DVS1.

LEqual (And (FDEV, One), One)), 
    A788: 93 7B 46 44 45 56 01 00 01                       // .{FDEV...


                LEqual (And (FDRP, 0x80), 0x80)))
            {

    A791: 93 7B 46 44 52 50 0A 80 00 0A 80                 // .{FDRP.....

                Name (PIB1, 
    A79C: 08 50 49 42 31                                   // .PIB1

Buffer (0x07)
                {
                     0x10, 0x09, 0x00, 0x00, 0x00, 0xB0, 0xEF         // .......
                })

    A7A1: 11 0A 0A 07 10 09 00 00 00 B0 EF                 // ...........

                Return (PIB1) /* \_SB_.PCI0.SAT0.PRT1._GTF.PIB1 */
            }


    A7AC: A4 50 49 42 31                                   // .PIB1

            Name (PIB2, 
    A7B1: 08 50 49 42 32                                   // .PIB2

Buffer (0x07)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00         // .......
            })

    A7B6: 11 0A 0A 07 00 00 00 00 00 00 00                 // ...........

            Return (PIB2) /* \_SB_.PCI0.SAT0.PRT1._GTF.PIB2 */
        }
    }


    A7C1: A4 50 49 42 32                                   // .PIB2

    Scope (_SB.PCI0.SAT0.PRT2)
    {

    A7C6: 10 4D 0E 2F 04 5F 53 42 5F 50 43 49 30 53 41 54  // .M./._SB_PCI0SAT
    A7D6: 30 50 52 54 32                                   // 0PRT2

        Name (FDEV, Zero)

    A7DB: 08 46 44 45 56 00                                // .FDEV.

        Name (FDRP, Zero)

    A7E1: 08 46 44 52 50 00                                // .FDRP.

        Name (SSDF, Zero)

    A7E7: 08 53 53 44 46 00                                // .SSDF.

        Method (_SDD, 1, Serialized)  // _SDD: Set Device Data
        {

    A7ED: 14 46 07 5F 53 44 44 09                          // .F._SDD.

            CreateWordField (Arg0, 0xA0, W080)

    A7F5: 8B 68 0A A0 57 30 38 30                          // .h..W080

            CreateWordField (Arg0, 0x01B2, W217)

    A7FD: 8B 68 0B B2 01 57 32 31 37                       // .h...W217

            If (LEqual (SDPO, One))
            {

    A806: A0 0D 93 53 44 50 4F 01                          // ...SDPO.

                Store (One, SSDF) /* \_SB_.PCI0.SAT0.PRT2.SSDF */
            }

    A80E: 70 01 53 53 44 46                                // p.SSDF

            ElseIf
    A814: A1 2D                                            // .-

 (LEqual (SDPO, 0x02))
            {

    A816: A0 2B 93 53 44 50 4F 0A 02                       // .+.SDPO..

                If (
    A81F: A0 22 92                                         // .".

LNotEqual (W080, 0xFFFF))
                {

    A822: 93 57 30 38 30 0B FF FF                          // .W080...

                    If (LAnd (W080, 0x0100))
                    {

    A82A: A0 17 90 57 30 38 30 0B 00 01                    // ...W080...

                        If (LEqual (W217, One))
                        {

    A834: A0 0D 93 57 32 31 37 01                          // ...W217.

                            Store (One, SSDF) /* \_SB_.PCI0.SAT0.PRT2.SSDF */
                        }
                    }
                }
            }


    A83C: 70 01 53 53 44 46                                // p.SSDF

            CreateByteField (Arg0, 0x9D, BFDS)
            ToInteger (BFDS, FDEV) /* \_SB_.PCI0.SAT0.PRT2.FDEV */

    A842: 8C 68 0A 9D 42 46 44 53 99 42 46 44 53 46 44 45  // .h..BFDS.BFDSFDE
    A852: 56                                               // V

            CreateByteField (Arg0, 0x9A, BFRP)

    A853: 8C 68 0A 9A 42 46 52 50                          // .h..BFRP

            ToInteger (BFRP, FDRP) /* \_SB_.PCI0.SAT0.PRT2.FDRP */
        }


    A85B: 99 42 46 52 50 46 44 52 50                       // .BFRPFDRP

        Method (_GTF, 0, Serialized)  // _GTF: Get Task File
        {

    A864: 14 4F 04 5F 47 54 46 08                          // .O._GTF.

            If (LAnd (LAnd (LEqual (DVS2, One), 
    A86C: A0 32 90 90 93 44 56 53 32 01                    // .2...DVS2.

LEqual (And (FDEV, One), One)), 
    A876: 93 7B 46 44 45 56 01 00 01                       // .{FDEV...


                LEqual (And (FDRP, 0x80), 0x80)))
            {

    A87F: 93 7B 46 44 52 50 0A 80 00 0A 80                 // .{FDRP.....

                Name (PIB1, 
    A88A: 08 50 49 42 31                                   // .PIB1

Buffer (0x07)
                {
                     0x10, 0x09, 0x00, 0x00, 0x00, 0xB0, 0xEF         // .......
                })

    A88F: 11 0A 0A 07 10 09 00 00 00 B0 EF                 // ...........

                Return (PIB1) /* \_SB_.PCI0.SAT0.PRT2._GTF.PIB1 */
            }


    A89A: A4 50 49 42 31                                   // .PIB1

            Name (PIB2, 
    A89F: 08 50 49 42 32                                   // .PIB2

Buffer (0x07)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00         // .......
            })

    A8A4: 11 0A 0A 07 00 00 00 00 00 00 00                 // ...........

            Return (PIB2) /* \_SB_.PCI0.SAT0.PRT2._GTF.PIB2 */
        }
    }


    A8AF: A4 50 49 42 32                                   // .PIB2

    Scope (_SB.PCI0.SAT0.PRT3)
    {

    A8B4: 10 49 09 2F 04 5F 53 42 5F 50 43 49 30 53 41 54  // .I./._SB_PCI0SAT
    A8C4: 30 50 52 54 33                                   // 0PRT3

        Name (FDEV, Zero)

    A8C9: 08 46 44 45 56 00                                // .FDEV.

        Name (FDRP, Zero)

    A8CF: 08 46 44 52 50 00                                // .FDRP.

        Method (_SDD, 1, Serialized)  // _SDD: Set Device Data
        {

    A8D5: 14 28 5F 53 44 44 09                             // .(_SDD.

            CreateByteField (Arg0, 0x9D, BFDS)
            ToInteger (BFDS, FDEV) /* \_SB_.PCI0.SAT0.PRT3.FDEV */

    A8DC: 8C 68 0A 9D 42 46 44 53 99 42 46 44 53 46 44 45  // .h..BFDS.BFDSFDE
    A8EC: 56                                               // V

            CreateByteField (Arg0, 0x9A, BFRP)

    A8ED: 8C 68 0A 9A 42 46 52 50                          // .h..BFRP

            ToInteger (BFRP, FDRP) /* \_SB_.PCI0.SAT0.PRT3.FDRP */
        }


    A8F5: 99 42 46 52 50 46 44 52 50                       // .BFRPFDRP

        Method (_GTF, 0, Serialized)  // _GTF: Get Task File
        {

    A8FE: 14 4F 04 5F 47 54 46 08                          // .O._GTF.

            If (LAnd (LAnd (LEqual (DVS3, One), 
    A906: A0 32 90 90 93 44 56 53 33 01                    // .2...DVS3.

LEqual (And (FDEV, One), One)), 
    A910: 93 7B 46 44 45 56 01 00 01                       // .{FDEV...


                LEqual (And (FDRP, 0x80), 0x80)))
            {

    A919: 93 7B 46 44 52 50 0A 80 00 0A 80                 // .{FDRP.....

                Name (PIB1, 
    A924: 08 50 49 42 31                                   // .PIB1

Buffer (0x07)
                {
                     0x10, 0x09, 0x00, 0x00, 0x00, 0xB0, 0xEF         // .......
                })

    A929: 11 0A 0A 07 10 09 00 00 00 B0 EF                 // ...........

                Return (PIB1) /* \_SB_.PCI0.SAT0.PRT3._GTF.PIB1 */
            }


    A934: A4 50 49 42 31                                   // .PIB1

            Name (PIB2, 
    A939: 08 50 49 42 32                                   // .PIB2

Buffer (0x07)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00         // .......
            })

    A93E: 11 0A 0A 07 00 00 00 00 00 00 00                 // ...........

            Return (PIB2) /* \_SB_.PCI0.SAT0.PRT3._GTF.PIB2 */
        }
    }


    A949: A4 50 49 42 32                                   // .PIB2

    Scope (_SB.PCI0.HDEF)
    {

    A94E: 10 4A 0C 2F 03 5F 53 42 5F 50 43 49 30 48 44 45  // .J./._SB_PCI0HDE
    A95E: 46                                               // F

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

    A95F: 14 49 0B 5F 44 53 4D 0C                          // .I._DSM.


    A967: 08 5F 54 5F 30 00                                // ._T_0.

            If (LEqual (Arg0, 
    A96D: A0 4F 05 93 68                                   // .O..h

ToUUID ("c5c5d98d-360e-43af-b7c1-3ede8f669ad3")))
            {

    A972: 11 13 0A 10 8D D9 C5 C5 0E 36 AF 43 B7 C1 3E DE  // .........6.C..>.
    A982: 8F 66 9A D3                                      // .f..

                Switch (Arg2)
                {

    A986: A2 44 04 01 70 6A 5F 54 5F 30                    // .D..pj_T_0

                    Case (Zero)
                    {

    A990: A0 18 93 5F 54 5F 30 00                          // ..._T_0.

                        If (LEqual (Arg1, Zero))
                        {

    A998: A0 09 93 69 00                                   // ...i.

                            Return (
    A99D: A4                                               // .

Buffer (One)
                            {
                                 0x03                                             // .
                            })
                        }

    A99E: 11 03 01 03                                      // ....

                        Else
                        {

    A9A2: A1 06                                            // ..

                            Return (
    A9A4: A4                                               // .

Buffer (One)
                            {
                                 0x00                                             // .
                            })
                        }
                    }

    A9A5: 11 03 01 00                                      // ....

                    Case
    A9A9: A1 20                                            // . 

 (One)
                    {

    A9AB: A0 1E 93 5F 54 5F 30 01                          // ..._T_0.

                        If (LEqual (DerefOf (
    A9B3: A0 0E 93 83                                      // ....

Index (Arg3, Zero)), Zero))
                        {

    A9B7: 88 6B 00 00 00                                   // .k...

                            Store (Zero, VBOK) /* \VBOK */
                        }

    A9BC: 70 00 56 42 4F 4B                                // p.VBOK

                        Else
                        {

    A9C2: A1 07                                            // ..

                            Store (One, VBOK) /* \VBOK */
                        }
                    }


    A9C4: 70 01 56 42 4F 4B                                // p.VBOK

                }


    A9CA: A5                                               // .

                Return (Zero)
            }


    A9CB: A4 00                                            // ..

            If (LEqual (ECR1, One))
            {

    A9CD: A0 46 04 93 45 43 52 31 01                       // .F..ECR1.

                If (LEqual (Arg0, 
    A9D6: A0 3D 93 68                                      // .=.h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
                {

    A9DA: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
    A9EA: 19 C3 43 4D                                      // ..CM

                    If (
    A9EE: A0 25 92                                         // .%.

LGreaterEqual (Arg1, 0x03))
                    {

    A9F1: 95 69 0A 03                                      // .i..

                        If (LEqual (Arg2, Zero))
                        {

    A9F5: A0 0B 93 6A 00                                   // ...j.

                            Return (
    A9FA: A4                                               // .

Buffer (0x02)
                            {
                                 0x01, 0x02                                       // ..
                            })
                        }


    A9FB: 11 05 0A 02 01 02                                // ......

                        If (LEqual (Arg2, 0x09))
                        {

    AA01: A0 12 93 6A 0A 09                                // ...j..

                            Return (
    AA07: A4                                               // .

Package (0x05)
                            {
                                0xC350, 
                                Ones, 
                                Ones, 
                                0xC350, 
                                Ones
                            })
                        }
                    }
                }
            }


    AA08: 12 0B 05 0B 50 C3 FF FF 0B 50 C3 FF              // ....P....P..

            Return (
    AA14: A4                                               // .

Buffer (One)
            {
                 0x00                                             // .
            })
        }
    }


    AA15: 11 03 01 00                                      // ....

    Scope (_SB.PCI0.XHC.RHUB)
    {

    AA19: 10 45 3B 2F 04 5F 53 42 5F 50 43 49 30 58 48 43  // .E;/._SB_PCI0XHC
    AA29: 5F 52 48 55 42                                   // _RHUB

        Name (UPCN, 
    AA2E: 08 55 50 43 4E                                   // .UPCN

Package (0x04)
        {
            Zero, 
            Zero, 
            Zero, 
            Zero
        })

    AA33: 12 06 04 00 00 00 00                             // .......

        Name (UPC3, 
    AA3A: 08 55 50 43 33                                   // .UPC3

Package (0x04)
        {
            0xFF, 
            0x03, 
            Zero, 
            Zero
        })

    AA3F: 12 08 04 0A FF 0A 03 00 00                       // .........

        Name (UPC2, 
    AA48: 08 55 50 43 32                                   // .UPC2

Package (0x04)
        {
            0xFF, 
            Zero, 
            Zero, 
            Zero
        })

    AA4D: 12 07 04 0A FF 00 00 00                          // ........

        Name (UPCP, 
    AA55: 08 55 50 43 50                                   // .UPCP

Package (0x04)
        {
            0xFF, 
            0xFF, 
            Zero, 
            Zero
        })

    AA5A: 12 08 04 0A FF 0A FF 00 00                       // .........

        Name (UPCI, 
    AA63: 08 55 50 43 49                                   // .UPCI

Package (0x04)
        {
            Zero, 
            0xFF, 
            Zero, 
            Zero
        })

    AA68: 12 07 04 00 0A FF 00 00                          // ........

        Name (PLDN, 
    AA70: 08 50 4C 44 4E                                   // .PLDN

Package (0x01)
        {

    AA75: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            }
        })

    AA78: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
    AA88: 00 00 00 00                                      // ....

        Name (PLDV, 
    AA8C: 08 50 4C 44 56                                   // .PLDV

Package (0x01)
        {

    AA91: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            }
        })

    AA94: 11 13 0A 10 81 00 00 00 00 00 00 00 00 00 00 00  // ................
    AAA4: 00 00 00 00                                      // ....

        Name (PLDR, 
    AAA8: 08 50 4C 44 52                                   // .PLDR

Package (0x01)
        {

    AAAD: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
            }
        })

    AAB0: 11 13 0A 10 81 00 00 00 00 00 00 00 00 00 00 00  // ................
    AAC0: 00 00 00 00                                      // ....

        Name (PLD1, 
    AAC4: 08 50 4C 44 31                                   // .PLD1

Package (0x01)
        {

    AAC9: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..r.....
                /* 0008 */  0x69, 0x0C, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00   // i.......
            }
        })

    AACC: 11 13 0A 10 01 C6 72 00 00 00 00 00 69 0C 80 00  // ......r.....i...
    AADC: 00 00 00 00                                      // ....

        Name (PLD2, 
    AAE0: 08 50 4C 44 32                                   // .PLD2

Package (0x01)
        {

    AAE5: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..r.....
                /* 0008 */  0x69, 0x0C, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00   // i.......
            }
        })

    AAE8: 11 13 0A 10 01 C6 72 00 00 00 00 00 69 0C 00 01  // ......r.....i...
    AAF8: 00 00 00 00                                      // ....

        Name (PLD3, 
    AAFC: 08 50 4C 44 33                                   // .PLD3

Package (0x01)
        {

    AB01: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..r.....
                /* 0008 */  0x71, 0x0C, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00   // q.......
            }
        })

    AB04: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 80 01  // ......r.....q...
    AB14: 00 00 00 00                                      // ....

        Name (PL23, 
    AB18: 08 50 4C 32 33                                   // .PL23

Package (0x01)
        {

    AB1D: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x70, 0x0C, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00   // p.......
            }
        })

    AB20: 11 13 0A 10 81 00 00 00 00 00 00 00 70 0C 80 01  // ............p...
    AB30: 00 00 00 00                                      // ....

        Name (PLD4, 
    AB34: 08 50 4C 44 34                                   // .PLD4

Package (0x01)
        {

    AB39: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..r.....
                /* 0008 */  0x71, 0x0C, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00   // q.......
            }
        })

    AB3C: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 00 02  // ......r.....q...
    AB4C: 00 00 00 00                                      // ....

        Name (PL24, 
    AB50: 08 50 4C 32 34                                   // .PL24

Package (0x01)
        {

    AB55: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x70, 0x0C, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00   // p.......
            }
        })

    AB58: 11 13 0A 10 81 00 00 00 00 00 00 00 70 0C 00 02  // ............p...
    AB68: 00 00 00 00                                      // ....

        Name (PLD5, 
    AB6C: 08 50 4C 44 35                                   // .PLD5

Package (0x01)
        {

    AB71: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x71, 0x0C, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00   // q.......
            }
        })

    AB74: 11 13 0A 10 81 00 00 00 00 00 00 00 71 0C 80 02  // ............q...
    AB84: 00 00 00 00                                      // ....

        Name (PL25, 
    AB88: 08 50 4C 32 35                                   // .PL25

Package (0x01)
        {

    AB8D: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x70, 0x0C, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00   // p.......
            }
        })

    AB90: 11 13 0A 10 81 00 00 00 00 00 00 00 70 0C 80 02  // ............p...
    ABA0: 00 00 00 00                                      // ....

        Name (PLD6, 
    ABA4: 08 50 4C 44 36                                   // .PLD6

Package (0x01)
        {

    ABA9: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x69, 0x0C, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00   // i.......
            }
        })

    ABAC: 11 13 0A 10 81 00 00 00 00 00 00 00 69 0C 00 03  // ............i...
    ABBC: 00 00 00 00                                      // ....

        Name (PL26, 
    ABC0: 08 50 4C 32 36                                   // .PL26

Package (0x01)
        {

    ABC5: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x70, 0x0C, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00   // p.......
            }
        })

    ABC8: 11 13 0A 10 81 00 00 00 00 00 00 00 70 0C 00 03  // ............p...
    ABD8: 00 00 00 00                                      // ....

        Name (PLD7, 
    ABDC: 08 50 4C 44 37                                   // .PLD7

Package (0x01)
        {

    ABE1: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x71, 0x0C, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00   // q.......
            }
        })

    ABE4: 11 13 0A 10 81 00 00 00 00 00 00 00 71 0C 80 03  // ............q...
    ABF4: 00 00 00 00                                      // ....

        Name (PL27, 
    ABF8: 08 50 4C 32 37                                   // .PL27

Package (0x01)
        {

    ABFD: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x70, 0x0C, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00   // p.......
            }
        })

    AC00: 11 13 0A 10 81 00 00 00 00 00 00 00 70 0C 80 03  // ............p...
    AC10: 00 00 00 00                                      // ....

        Name (PLD8, 
    AC14: 08 50 4C 44 38                                   // .PLD8

Package (0x01)
        {

    AC19: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x71, 0x0C, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00   // q.......
            }
        })

    AC1C: 11 13 0A 10 81 00 00 00 00 00 00 00 71 0C 00 04  // ............q...
    AC2C: 00 00 00 00                                      // ....

        Name (PL28, 
    AC30: 08 50 4C 32 38                                   // .PL28

Package (0x01)
        {

    AC35: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x70, 0x0C, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00   // p.......
            }
        })

    AC38: 11 13 0A 10 81 00 00 00 00 00 00 00 70 0C 00 04  // ............p...
    AC48: 00 00 00 00                                      // ....

        Name (PLD9, 
    AC4C: 08 50 4C 44 39                                   // .PLD9

Package (0x01)
        {

    AC51: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..r.....
                /* 0008 */  0x71, 0x0C, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00   // q.......
            }
        })

    AC54: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 80 04  // ......r.....q...
    AC64: 00 00 00 00                                      // ....

        Name (PLDA, 
    AC68: 08 50 4C 44 41                                   // .PLDA

Package (0x01)
        {

    AC6D: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..r.....
                /* 0008 */  0x71, 0x0C, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00   // q.......
            }
        })

    AC70: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 00 05  // ......r.....q...
    AC80: 00 00 00 00                                      // ....

        Name (PLDB, 
    AC84: 08 50 4C 44 42                                   // .PLDB

Package (0x01)
        {

    AC89: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x31, 0x1C, 0x80, 0x05, 0x00, 0x00, 0x00, 0x00   // 1.......
            }
        })

    AC8C: 11 13 0A 10 81 00 00 00 00 00 00 00 31 1C 80 05  // ............1...
    AC9C: 00 00 00 00                                      // ....

        Name (PLDC, 
    ACA0: 08 50 4C 44 43                                   // .PLDC

Package (0x01)
        {

    ACA5: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x31, 0x1C, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00   // 1.......
            }
        })

    ACA8: 11 13 0A 10 81 00 00 00 00 00 00 00 31 1C 00 06  // ............1...
    ACB8: 00 00 00 00                                      // ....

        Name (PLDD, 
    ACBC: 08 50 4C 44 44                                   // .PLDD

Package (0x01)
        {

    ACC1: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x31, 0x1C, 0x80, 0x06, 0x00, 0x00, 0x00, 0x00   // 1.......
            }
        })

    ACC4: 11 13 0A 10 81 00 00 00 00 00 00 00 31 1C 80 06  // ............1...
    ACD4: 00 00 00 00                                      // ....

        Name (PLDE, 
    ACD8: 08 50 4C 44 45                                   // .PLDE

Package (0x01)
        {

    ACDD: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x31, 0x1C, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00   // 1.......
            }
        })

    ACE0: 11 13 0A 10 81 00 00 00 00 00 00 00 31 1C 00 07  // ............1...
    ACF0: 00 00 00 00                                      // ....

        Name (PL2E, 
    ACF4: 08 50 4C 32 45                                   // .PL2E

Package (0x01)
        {

    ACF9: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x30, 0x1C, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00   // 0.......
            }
        })

    ACFC: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 00 07  // ............0...
    AD0C: 00 00 00 00                                      // ....

        Name (PL2F, 
    AD10: 08 50 4C 32 46                                   // .PL2F

Package (0x01)
        {

    AD15: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x30, 0x1C, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00   // 0.......
            }
        })

    AD18: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 80 07  // ............0...
    AD28: 00 00 00 00                                      // ....

        Name (PLDF, 
    AD2C: 08 50 4C 44 46                                   // .PLDF

Package (0x01)
        {

    AD31: 12 16 01                                         // ...

            Buffer (0x10)
            {
                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x30, 0x1C, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00   // 0.......
            }
        })

    AD34: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 80 07  // ............0...
    AD44: 00 00 00 00                                      // ....

        Name (PLDG, 
    AD48: 08 50 4C 44 47                                   // .PLDG

Package (0x01)
        {

    AD4D: 12 1A 01                                         // ...

            Buffer (0x14)
            {
                /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x24, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,  // $.......
                /* 0010 */  0xC8, 0x00, 0xA0, 0x00                           // ....
            }
        })

    AD50: 11 17 0A 14 82 00 00 00 00 00 00 00 24 01 00 02  // ............$...
    AD60: 00 00 00 00 C8 00 A0 00                          // ........

        Name (PLDH, 
    AD68: 08 50 4C 44 48                                   // .PLDH

Package (0x01)
        {

    AD6D: 12 1A 01                                         // ...

            Buffer (0x14)
            {
                /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x28, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,  // (.......
                /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
            }
        })

    AD70: 11 17 0A 14 82 00 00 00 00 00 00 00 28 00 00 07  // ............(...
    AD80: 00 00 00 00 FF FF FF FF                          // ........

        Name (PLDI, 
    AD88: 08 50 4C 44 49                                   // .PLDI

Package (0x01)
        {

    AD8D: 12 1A 01                                         // ...

            Buffer (0x14)
            {
                /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                /* 0008 */  0x24, 0x01, 0x80, 0x07, 0x00, 0x00, 0x00, 0x00,  // $.......
                /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                           // ....
            }
        })

    AD90: 11 17 0A 14 82 00 00 00 00 00 00 00 24 01 80 07  // ............$...
    ADA0: 00 00 00 00 FF FF FF FF                          // ........

        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {

    ADA8: 14 26 5F 49 4E 49 00                             // .&_INI.

            If (CondRefOf (\_SB.PCI0.XHC.RHUB.INIR))
            {
                INIR ()
            }
        }
    }


    ADAF: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
    ADBF: 48 43 5F 52 48 55 42 49 4E 49 52 00 49 4E 49 52  // HC_RHUBINIR.INIR

    Scope (_SB.PCI0.XHC.RHUB.HS01)
    {

    ADCF: 10 2F 2F 05 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    ADDF: 52 48 55 42 48 53 30 31                          // RHUBHS01

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    ADE7: 14 0B 5F 55 50 43 08                             // .._UPC.

            Return (UPC3) /* \_SB_.PCI0.XHC_.RHUB.UPC3 */
        }


    ADEE: A4 55 50 43 33                                   // .UPC3

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    ADF3: 14 0B 5F 50 4C 44 08                             // .._PLD.

            Return (PLD1) /* \_SB_.PCI0.XHC_.RHUB.PLD1 */
        }
    }


    ADFA: A4 50 4C 44 31                                   // .PLD1

    Scope (_SB.PCI0.XHC.RHUB.HS02)
    {

    ADFF: 10 2F 2F 05 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    AE0F: 52 48 55 42 48 53 30 32                          // RHUBHS02

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    AE17: 14 0B 5F 55 50 43 08                             // .._UPC.

            Return (UPC3) /* \_SB_.PCI0.XHC_.RHUB.UPC3 */
        }


    AE1E: A4 55 50 43 33                                   // .UPC3

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    AE23: 14 0B 5F 50 4C 44 08                             // .._PLD.

            Return (PLD2) /* \_SB_.PCI0.XHC_.RHUB.PLD2 */
        }
    }


    AE2A: A4 50 4C 44 32                                   // .PLD2

    Scope (_SB.PCI0.XHC.RHUB.HS03)
    {

    AE2F: 10 2F 2F 05 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    AE3F: 52 48 55 42 48 53 30 33                          // RHUBHS03

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    AE47: 14 0B 5F 55 50 43 08                             // .._UPC.

            Return (UPCN) /* \_SB_.PCI0.XHC_.RHUB.UPCN */
        }


    AE4E: A4 55 50 43 4E                                   // .UPCN

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    AE53: 14 0B 5F 50 4C 44 08                             // .._PLD.

            Return (PLD3) /* \_SB_.PCI0.XHC_.RHUB.PLD3 */
        }
    }


    AE5A: A4 50 4C 44 33                                   // .PLD3

    Scope (_SB.PCI0.XHC.RHUB.HS04)
    {

    AE5F: 10 2F 2F 05 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    AE6F: 52 48 55 42 48 53 30 34                          // RHUBHS04

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    AE77: 14 0B 5F 55 50 43 08                             // .._UPC.

            Return (UPC2) /* \_SB_.PCI0.XHC_.RHUB.UPC2 */
        }


    AE7E: A4 55 50 43 32                                   // .UPC2

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    AE83: 14 0B 5F 50 4C 44 08                             // .._PLD.

            Return (PLD4) /* \_SB_.PCI0.XHC_.RHUB.PLD4 */
        }
    }


    AE8A: A4 50 4C 44 34                                   // .PLD4

    Scope (_SB.PCI0.XHC.RHUB.HS05)
    {

    AE8F: 10 2F 2F 05 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    AE9F: 52 48 55 42 48 53 30 35                          // RHUBHS05

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    AEA7: 14 0B 5F 55 50 43 08                             // .._UPC.

            Return (UPCI) /* \_SB_.PCI0.XHC_.RHUB.UPCI */
        }


    AEAE: A4 55 50 43 49                                   // .UPCI

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    AEB3: 14 0B 5F 50 4C 44 08                             // .._PLD.

            Return (PLD5) /* \_SB_.PCI0.XHC_.RHUB.PLD5 */
        }
    }


    AEBA: A4 50 4C 44 35                                   // .PLD5

    Scope (_SB.PCI0.XHC.RHUB.HS06)
    {

    AEBF: 10 4D 06 2F 05 5F 53 42 5F 50 43 49 30 58 48 43  // .M./._SB_PCI0XHC
    AECF: 5F 52 48 55 42 48 53 30 36                       // _RHUBHS06

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    AED8: 14 0B 5F 55 50 43 08                             // .._UPC.

            Return (UPCI) /* \_SB_.PCI0.XHC_.RHUB.UPCI */
        }


    AEDF: A4 55 50 43 49                                   // .UPCI

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    AEE4: 14 48 04 5F 50 4C 44 08                          // .H._PLD.

            If (LNot (PRTE (_ADR)))
            {

    AEEC: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                Return (PLDN) /* \_SB_.PCI0.XHC_.RHUB.PLDN */
            }


    AEF7: A4 50 4C 44 4E                                   // .PLDN

            If (LOr (LOr (LEqual (BID, 0x80), 
    AEFC: A0 1D 91 91 93 42 49 44 5F 0A 80                 // .....BID_..

LEqual (BID, 0x82)), 
    AF07: 93 42 49 44 5F 0A 82                             // .BID_..

LEqual (BID, 0x83)))
            {

    AF0E: 93 42 49 44 5F 0A 83                             // .BID_..

                Return (PL26) /* \_SB_.PCI0.XHC_.RHUB.PL26 */
            }


    AF15: A4 50 4C 32 36                                   // .PL26

            If (LEqual (BID, 0x31))
            {

    AF1A: A0 0D 93 42 49 44 5F 0A 31                       // ...BID_.1

                Return (PL26) /* \_SB_.PCI0.XHC_.RHUB.PL26 */
            }


    AF23: A4 50 4C 32 36                                   // .PL26

            Return (PLD6) /* \_SB_.PCI0.XHC_.RHUB.PLD6 */
        }
    }


    AF28: A4 50 4C 44 36                                   // .PLD6

    Scope (_SB.PCI0.XHC.RHUB.HS07)
    {

    AF2D: 10 4E 05 2F 05 5F 53 42 5F 50 43 49 30 58 48 43  // .N./._SB_PCI0XHC
    AF3D: 5F 52 48 55 42 48 53 30 37                       // _RHUBHS07

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    AF46: 14 0B 5F 55 50 43 08                             // .._UPC.

            Return (UPCI) /* \_SB_.PCI0.XHC_.RHUB.UPCI */
        }


    AF4D: A4 55 50 43 49                                   // .UPCI

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    AF52: 14 0B 5F 50 4C 44 08                             // .._PLD.

            Return (PLD7) /* \_SB_.PCI0.XHC_.RHUB.PLD7 */
        }


    AF59: A4 50 4C 44 37                                   // .PLD7

        Device (WCAM)
        {

    AF5E: 5B 82 2C 57 43 41 4D                             // [.,WCAM

            Name (_ADR, 0x07)  // _ADR: Address

    AF65: 08 5F 41 44 52 0A 07                             // ._ADR..

            Name (_PLD, 
    AF6C: 08 5F 50 4C 44                                   // ._PLD

Package (0x01)  // _PLD: Physical Location of Device
            {

    AF71: 12 1A 01                                         // ...

                ToPLD (
                    PLD_Revision           = 0x2,
                    PLD_IgnoreColor        = 0x1,
                    PLD_Red                = 0x0,
                    PLD_Green              = 0x0,
                    PLD_Blue               = 0x0,
                    PLD_Width              = 0x0,
                    PLD_Height             = 0x0,
                    PLD_UserVisible        = 0x1,
                    PLD_Dock               = 0x0,
                    PLD_Lid                = 0x1,
                    PLD_Panel              = "FRONT",
                    PLD_VerticalPosition   = "UPPER",
                    PLD_HorizontalPosition = "CENTER",
                    PLD_Shape              = "UNKNOWN",
                    PLD_GroupOrientation   = 0x0,
                    PLD_GroupToken         = 0x0,
                    PLD_GroupPosition      = 0x0,
                    PLD_Bay                = 0x0,
                    PLD_Ejectable          = 0x0,
                    PLD_EjectRequired      = 0x0,
                    PLD_CabinetNumber      = 0x0,
                    PLD_CardCageNumber     = 0x0,
                    PLD_Reference          = 0x0,
                    PLD_Rotation           = 0x0,
                    PLD_Order              = 0x0,
                    PLD_VerticalOffset     = 0xFFFF,
                    PLD_HorizontalOffset   = 0xFFFF)

            })
        }
    }


    AF74: 11 17 0A 14 82 00 00 00 00 00 00 00 25 1D 00 00  // ............%...
    AF84: 00 00 00 00 FF FF FF FF                          // ........

    Scope (_SB.PCI0.XHC.RHUB.HS08)
    {

    AF8C: 10 2F 2F 05 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    AF9C: 52 48 55 42 48 53 30 38                          // RHUBHS08

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    AFA4: 14 0B 5F 55 50 43 08                             // .._UPC.

            Return (UPCI) /* \_SB_.PCI0.XHC_.RHUB.UPCI */
        }


    AFAB: A4 55 50 43 49                                   // .UPCI

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    AFB0: 14 0B 5F 50 4C 44 08                             // .._PLD.

            Return (PLD8) /* \_SB_.PCI0.XHC_.RHUB.PLD8 */
        }
    }


    AFB7: A4 50 4C 44 38                                   // .PLD8

    If (CondRefOf (\_SB.PCI0.XHC.RHUB.HS09))
    {

    AFBC: A0 49 08 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30  // .I.[.\/._SB_PCI0
    AFCC: 58 48 43 5F 52 48 55 42 48 53 30 39 00           // XHC_RHUBHS09.

        Scope (_SB.PCI0.XHC.RHUB.HS09)
        {

    AFD9: 10 4C 06 2F 05 5F 53 42 5F 50 43 49 30 58 48 43  // .L./._SB_PCI0XHC
    AFE9: 5F 52 48 55 42 48 53 30 39                       // _RHUBHS09

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

    AFF2: 14 29 5F 55 50 43 08                             // .)_UPC.

                If (LNot (PRTE (_ADR)))
                {

    AFF9: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (UPCN) /* \_SB_.PCI0.XHC_.RHUB.UPCN */
                }


    B004: A4 55 50 43 4E                                   // .UPCN

                If (LEqual (BID, 0x31))
                {

    B009: A0 0D 93 42 49 44 5F 0A 31                       // ...BID_.1

                    Return (UPCN) /* \_SB_.PCI0.XHC_.RHUB.UPCN */
                }


    B012: A4 55 50 43 4E                                   // .UPCN

                Return (UPC3) /* \_SB_.PCI0.XHC_.RHUB.UPC3 */
            }


    B017: A4 55 50 43 33                                   // .UPC3

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

    B01C: 14 29 5F 50 4C 44 08                             // .)_PLD.

                If (LNot (PRTE (_ADR)))
                {

    B023: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (PLDN) /* \_SB_.PCI0.XHC_.RHUB.PLDN */
                }


    B02E: A4 50 4C 44 4E                                   // .PLDN

                If (LEqual (BID, 0x31))
                {

    B033: A0 0D 93 42 49 44 5F 0A 31                       // ...BID_.1

                    Return (PLDN) /* \_SB_.PCI0.XHC_.RHUB.PLDN */
                }


    B03C: A4 50 4C 44 4E                                   // .PLDN

                Return (PLD9) /* \_SB_.PCI0.XHC_.RHUB.PLD9 */
            }
        }
    }


    B041: A4 50 4C 44 39                                   // .PLD9

    If (CondRefOf (\_SB.PCI0.XHC.RHUB.HS10))
    {

    B046: A0 49 08 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30  // .I.[.\/._SB_PCI0
    B056: 58 48 43 5F 52 48 55 42 48 53 31 30 00           // XHC_RHUBHS10.

        Scope (_SB.PCI0.XHC.RHUB.HS10)
        {

    B063: 10 4C 06 2F 05 5F 53 42 5F 50 43 49 30 58 48 43  // .L./._SB_PCI0XHC
    B073: 5F 52 48 55 42 48 53 31 30                       // _RHUBHS10

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

    B07C: 14 29 5F 55 50 43 08                             // .)_UPC.

                If (LNot (PRTE (_ADR)))
                {

    B083: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (UPCN) /* \_SB_.PCI0.XHC_.RHUB.UPCN */
                }


    B08E: A4 55 50 43 4E                                   // .UPCN

                If (LEqual (BID, 0x31))
                {

    B093: A0 0D 93 42 49 44 5F 0A 31                       // ...BID_.1

                    Return (UPCN) /* \_SB_.PCI0.XHC_.RHUB.UPCN */
                }


    B09C: A4 55 50 43 4E                                   // .UPCN

                Return (UPC3) /* \_SB_.PCI0.XHC_.RHUB.UPC3 */
            }


    B0A1: A4 55 50 43 33                                   // .UPC3

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

    B0A6: 14 29 5F 50 4C 44 08                             // .)_PLD.

                If (LNot (PRTE (_ADR)))
                {

    B0AD: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (PLDN) /* \_SB_.PCI0.XHC_.RHUB.PLDN */
                }


    B0B8: A4 50 4C 44 4E                                   // .PLDN

                If (LEqual (BID, 0x31))
                {

    B0BD: A0 0D 93 42 49 44 5F 0A 31                       // ...BID_.1

                    Return (PLDN) /* \_SB_.PCI0.XHC_.RHUB.PLDN */
                }


    B0C6: A4 50 4C 44 4E                                   // .PLDN

                Return (PLDA) /* \_SB_.PCI0.XHC_.RHUB.PLDA */
            }
        }
    }


    B0CB: A4 50 4C 44 41                                   // .PLDA

    If (CondRefOf (\_SB.PCI0.XHC.RHUB.HS11))
    {

    B0D0: A0 4D 06 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30  // .M.[.\/._SB_PCI0
    B0E0: 58 48 43 5F 52 48 55 42 48 53 31 31 00           // XHC_RHUBHS11.

        Scope (_SB.PCI0.XHC.RHUB.HS11)
        {

    B0ED: 10 40 05 2F 05 5F 53 42 5F 50 43 49 30 58 48 43  // .@./._SB_PCI0XHC
    B0FD: 5F 52 48 55 42 48 53 31 31                       // _RHUBHS11

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

    B106: 14 1B 5F 55 50 43 08                             // .._UPC.

                If (LNot (PRTE (_ADR)))
                {

    B10D: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (UPCN) /* \_SB_.PCI0.XHC_.RHUB.UPCN */
                }


    B118: A4 55 50 43 4E                                   // .UPCN

                Return (UPCP) /* \_SB_.PCI0.XHC_.RHUB.UPCP */
            }


    B11D: A4 55 50 43 50                                   // .UPCP

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

    B122: 14 1B 5F 50 4C 44 08                             // .._PLD.

                If (LNot (PRTE (_ADR)))
                {

    B129: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (PLDN) /* \_SB_.PCI0.XHC_.RHUB.PLDN */
                }


    B134: A4 50 4C 44 4E                                   // .PLDN

                Return (PLDB) /* \_SB_.PCI0.XHC_.RHUB.PLDB */
            }
        }
    }


    B139: A4 50 4C 44 42                                   // .PLDB

    If (CondRefOf (\_SB.PCI0.XHC.RHUB.HS12))
    {

    B13E: A0 4D 06 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30  // .M.[.\/._SB_PCI0
    B14E: 58 48 43 5F 52 48 55 42 48 53 31 32 00           // XHC_RHUBHS12.

        Scope (_SB.PCI0.XHC.RHUB.HS12)
        {

    B15B: 10 40 05 2F 05 5F 53 42 5F 50 43 49 30 58 48 43  // .@./._SB_PCI0XHC
    B16B: 5F 52 48 55 42 48 53 31 32                       // _RHUBHS12

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

    B174: 14 1B 5F 55 50 43 08                             // .._UPC.

                If (LNot (PRTE (_ADR)))
                {

    B17B: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (UPCN) /* \_SB_.PCI0.XHC_.RHUB.UPCN */
                }


    B186: A4 55 50 43 4E                                   // .UPCN

                Return (UPCP) /* \_SB_.PCI0.XHC_.RHUB.UPCP */
            }


    B18B: A4 55 50 43 50                                   // .UPCP

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

    B190: 14 1B 5F 50 4C 44 08                             // .._PLD.

                If (LNot (PRTE (_ADR)))
                {

    B197: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (PLDN) /* \_SB_.PCI0.XHC_.RHUB.PLDN */
                }


    B1A2: A4 50 4C 44 4E                                   // .PLDN

                Return (PLDC) /* \_SB_.PCI0.XHC_.RHUB.PLDC */
            }
        }
    }


    B1A7: A4 50 4C 44 43                                   // .PLDC

    If (CondRefOf (\_SB.PCI0.XHC.RHUB.HS13))
    {

    B1AC: A0 4D 06 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30  // .M.[.\/._SB_PCI0
    B1BC: 58 48 43 5F 52 48 55 42 48 53 31 33 00           // XHC_RHUBHS13.

        Scope (_SB.PCI0.XHC.RHUB.HS13)
        {

    B1C9: 10 40 05 2F 05 5F 53 42 5F 50 43 49 30 58 48 43  // .@./._SB_PCI0XHC
    B1D9: 5F 52 48 55 42 48 53 31 33                       // _RHUBHS13

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

    B1E2: 14 1B 5F 55 50 43 08                             // .._UPC.

                If (LNot (PRTE (_ADR)))
                {

    B1E9: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (UPCN) /* \_SB_.PCI0.XHC_.RHUB.UPCN */
                }


    B1F4: A4 55 50 43 4E                                   // .UPCN

                Return (UPCP) /* \_SB_.PCI0.XHC_.RHUB.UPCP */
            }


    B1F9: A4 55 50 43 50                                   // .UPCP

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

    B1FE: 14 1B 5F 50 4C 44 08                             // .._PLD.

                If (LNot (PRTE (_ADR)))
                {

    B205: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (PLDN) /* \_SB_.PCI0.XHC_.RHUB.PLDN */
                }


    B210: A4 50 4C 44 4E                                   // .PLDN

                Return (PLDD) /* \_SB_.PCI0.XHC_.RHUB.PLDD */
            }
        }
    }


    B215: A4 50 4C 44 44                                   // .PLDD

    If (CondRefOf (\_SB.PCI0.XHC.RHUB.HS14))
    {

    B21A: A0 4D 06 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30  // .M.[.\/._SB_PCI0
    B22A: 58 48 43 5F 52 48 55 42 48 53 31 34 00           // XHC_RHUBHS14.

        Scope (_SB.PCI0.XHC.RHUB.HS14)
        {

    B237: 10 40 05 2F 05 5F 53 42 5F 50 43 49 30 58 48 43  // .@./._SB_PCI0XHC
    B247: 5F 52 48 55 42 48 53 31 34                       // _RHUBHS14

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

    B250: 14 1B 5F 55 50 43 08                             // .._UPC.

                If (LNot (PRTE (_ADR)))
                {

    B257: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (UPCN) /* \_SB_.PCI0.XHC_.RHUB.UPCN */
                }


    B262: A4 55 50 43 4E                                   // .UPCN

                Return (UPCP) /* \_SB_.PCI0.XHC_.RHUB.UPCP */
            }


    B267: A4 55 50 43 50                                   // .UPCP

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

    B26C: 14 1B 5F 50 4C 44 08                             // .._PLD.

                If (LNot (PRTE (_ADR)))
                {

    B273: A0 0F 92 50 52 54 45 5F 41 44 52                 // ...PRTE_ADR

                    Return (PLDN) /* \_SB_.PCI0.XHC_.RHUB.PLDN */
                }


    B27E: A4 50 4C 44 4E                                   // .PLDN

                Return (PLDE) /* \_SB_.PCI0.XHC_.RHUB.PLDE */
            }
        }
    }


    B283: A4 50 4C 44 45                                   // .PLDE

    If (CondRefOf (\_SB.PCI0.XHC.RHUB.USBR))
    {

    B288: A0 4C 04 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30  // .L.[.\/._SB_PCI0
    B298: 58 48 43 5F 52 48 55 42 55 53 42 52 00           // XHC_RHUBUSBR.

        Scope (_SB.PCI0.XHC.RHUB.USBR)
        {

    B2A5: 10 2F 2F 05 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    B2B5: 52 48 55 42 55 53 42 52                          // RHUBUSBR

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

    B2BD: 14 0B 5F 55 50 43 08                             // .._UPC.

                Return (UPCN) /* \_SB_.PCI0.XHC_.RHUB.UPCN */
            }


    B2C4: A4 55 50 43 4E                                   // .UPCN

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

    B2C9: 14 0B 5F 50 4C 44 08                             // .._PLD.

                Return (PLDR) /* \_SB_.PCI0.XHC_.RHUB.PLDR */
            }
        }
    }


    B2D0: A4 50 4C 44 52                                   // .PLDR

    Scope (_SB.PCI0.XHC.RHUB.SSP1)
    {

    B2D5: 10 2F 2F 05 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    B2E5: 52 48 55 42 53 53 50 31                          // RHUBSSP1

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B2ED: 14 0B 5F 55 50 43 08                             // .._UPC.

            Return (UPC3) /* \_SB_.PCI0.XHC_.RHUB.UPC3 */
        }


    B2F4: A4 55 50 43 33                                   // .UPC3

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B2F9: 14 0B 5F 50 4C 44 08                             // .._PLD.

            Return (PLD1) /* \_SB_.PCI0.XHC_.RHUB.PLD1 */
        }
    }


    B300: A4 50 4C 44 31                                   // .PLD1

    Scope (_SB.PCI0.XHC.RHUB.SSP2)
    {

    B305: 10 2F 2F 05 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    B315: 52 48 55 42 53 53 50 32                          // RHUBSSP2

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B31D: 14 0B 5F 55 50 43 08                             // .._UPC.

            Return (UPC3) /* \_SB_.PCI0.XHC_.RHUB.UPC3 */
        }


    B324: A4 55 50 43 33                                   // .UPC3

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B329: 14 0B 5F 50 4C 44 08                             // .._PLD.

            Return (PLD2) /* \_SB_.PCI0.XHC_.RHUB.PLD2 */
        }
    }


    B330: A4 50 4C 44 32                                   // .PLD2

    If (CondRefOf (\_SB.PCI0.XHC.RHUB.SSP3))
    {

    B335: A0 4C 04 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30  // .L.[.\/._SB_PCI0
    B345: 58 48 43 5F 52 48 55 42 53 53 50 33 00           // XHC_RHUBSSP3.

        Scope (_SB.PCI0.XHC.RHUB.SSP3)
        {

    B352: 10 2F 2F 05 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    B362: 52 48 55 42 53 53 50 33                          // RHUBSSP3

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

    B36A: 14 0B 5F 55 50 43 08                             // .._UPC.

                Return (UPCN) /* \_SB_.PCI0.XHC_.RHUB.UPCN */
            }


    B371: A4 55 50 43 4E                                   // .UPCN

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

    B376: 14 0B 5F 50 4C 44 08                             // .._PLD.

                Return (PLDN) /* \_SB_.PCI0.XHC_.RHUB.PLDN */
            }
        }
    }


    B37D: A4 50 4C 44 4E                                   // .PLDN

    If (CondRefOf (\_SB.PCI0.XHC.RHUB.SSP4))
    {

    B382: A0 4C 04 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30  // .L.[.\/._SB_PCI0
    B392: 58 48 43 5F 52 48 55 42 53 53 50 34 00           // XHC_RHUBSSP4.

        Scope (_SB.PCI0.XHC.RHUB.SSP4)
        {

    B39F: 10 2F 2F 05 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .//._SB_PCI0XHC_
    B3AF: 52 48 55 42 53 53 50 34                          // RHUBSSP4

            Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
            {

    B3B7: 14 0B 5F 55 50 43 08                             // .._UPC.

                Return (UPC2) /* \_SB_.PCI0.XHC_.RHUB.UPC2 */
            }


    B3BE: A4 55 50 43 32                                   // .UPC2

            Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
            {

    B3C3: 14 0B 5F 50 4C 44 08                             // .._PLD.

                Return (PLDN) /* \_SB_.PCI0.XHC_.RHUB.PLDN */
            }
        }
    }


    B3CA: A4 50 4C 44 4E                                   // .PLDN

    Scope (_SB.PCI0.EHC1.HUBN.PR01.PR11)
    {

    B3CF: 10 4D 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .M./._SB_PCI0EHC
    B3DF: 31 48 55 42 4E 50 52 30 31 50 52 31 31           // 1HUBNPR01PR11

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B3EC: 14 18 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B3F3: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                0xFF, 
                Zero, 
                Zero, 
                Zero
            })

    B3F8: 12 07 04 0A FF 00 00 00                          // ........

            Return (UPCP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR11._UPC.UPCP */
        }


    B400: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B405: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B40C: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B411: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xE1, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B414: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1C 00 00  // ................
    B424: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR11._PLD.PLDP */
        }
    }


    B428: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC1.HUBN.PR01.PR12)
    {

    B42D: 10 4D 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .M./._SB_PCI0EHC
    B43D: 31 48 55 42 4E 50 52 30 31 50 52 31 32           // 1HUBNPR01PR12

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B44A: 14 18 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B451: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                0xFF, 
                Zero, 
                Zero, 
                Zero
            })

    B456: 12 07 04 0A FF 00 00 00                          // ........

            Return (UPCP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR12._UPC.UPCP */
        }


    B45E: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B463: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B46A: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B46F: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xE1, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B472: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1D 00 00  // ................
    B482: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR12._PLD.PLDP */
        }
    }


    B486: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC1.HUBN.PR01.PR13)
    {

    B48B: 10 40 08 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .@./._SB_PCI0EHC
    B49B: 31 48 55 42 4E 50 52 30 31 50 52 31 33           // 1HUBNPR01PR13

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B4A8: 14 18 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B4AF: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                0xFF, 
                Zero, 
                Zero, 
                Zero
            })

    B4B4: 12 07 04 0A FF 00 00 00                          // ........

            Return (UPCP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR13._UPC.UPCP */
        }


    B4BC: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B4C1: 14 4A 04 5F 50 4C 44 08                          // .J._PLD.

            Name (PLDP, 
    B4C9: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B4CE: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xE1, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B4D1: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1D 00 00  // ................
    B4E1: 00 00 00 00                                      // ....

            CreateBitField (DerefOf (
    B4E5: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

    B4E7: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

            If (LEqual (PCHS, 0x02))
            {

    B4F4: A0 12 93 50 43 48 53 0A 02                       // ...PCHS..

                And (VIS, Zero, VIS) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR13._PLD.VIS_ */
            }


    B4FD: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

            Return (PLDP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR13._PLD.PLDP */
        }
    }


    B507: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC1.HUBN.PR01.PR14)
    {

    B50C: 10 4D 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .M./._SB_PCI0EHC
    B51C: 31 48 55 42 4E 50 52 30 31 50 52 31 34           // 1HUBNPR01PR14

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B529: 14 18 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B530: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                0xFF, 
                Zero, 
                Zero, 
                Zero
            })

    B535: 12 07 04 0A FF 00 00 00                          // ........

            Return (UPCP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR14._UPC.UPCP */
        }


    B53D: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B542: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B549: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B54E: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xE1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B551: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1E 00 00  // ................
    B561: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR14._PLD.PLDP */
        }
    }


    B565: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC1.HUBN.PR01.PR15)
    {

    B56A: 10 4D 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .M./._SB_PCI0EHC
    B57A: 31 48 55 42 4E 50 52 30 31 50 52 31 35           // 1HUBNPR01PR15

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B587: 14 18 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B58E: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                Zero, 
                0xFF, 
                Zero, 
                Zero
            })

    B593: 12 07 04 00 0A FF 00 00                          // ........

            Return (UPCP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR15._UPC.UPCP */
        }


    B59B: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B5A0: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B5A7: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B5AC: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B5AF: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
    B5BF: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR15._PLD.PLDP */
        }
    }


    B5C3: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC1.HUBN.PR01.PR16)
    {

    B5C8: 10 4D 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .M./._SB_PCI0EHC
    B5D8: 31 48 55 42 4E 50 52 30 31 50 52 31 36           // 1HUBNPR01PR16

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B5E5: 14 18 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B5EC: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                Zero, 
                0xFF, 
                Zero, 
                Zero
            })

    B5F1: 12 07 04 00 0A FF 00 00                          // ........

            Return (UPCP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR16._UPC.UPCP */
        }


    B5F9: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B5FE: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B605: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B60A: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B60D: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
    B61D: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR16._PLD.PLDP */
        }
    }


    B621: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC1.HUBN.PR01.PR17)
    {

    B626: 10 4B 08 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .K./._SB_PCI0EHC
    B636: 31 48 55 42 4E 50 52 30 31 50 52 31 37           // 1HUBNPR01PR17

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B643: 14 18 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B64A: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                Zero, 
                0xFF, 
                Zero, 
                Zero
            })

    B64F: 12 07 04 00 0A FF 00 00                          // ........

            Return (UPCP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR17._UPC.UPCP */
        }


    B657: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B65C: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B663: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B668: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B66B: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
    B67B: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR17._PLD.PLDP */
        }


    B67F: A4 50 4C 44 50                                   // .PLDP

        Device (WCAM)
        {

    B684: 5B 82 2C 57 43 41 4D                             // [.,WCAM

            Name (_ADR, 0x07)  // _ADR: Address

    B68B: 08 5F 41 44 52 0A 07                             // ._ADR..

            Name (_PLD, 
    B692: 08 5F 50 4C 44                                   // ._PLD

Package (0x01)  // _PLD: Physical Location of Device
            {

    B697: 12 1A 01                                         // ...

                ToPLD (
                    PLD_Revision           = 0x2,
                    PLD_IgnoreColor        = 0x1,
                    PLD_Red                = 0x0,
                    PLD_Green              = 0x0,
                    PLD_Blue               = 0x0,
                    PLD_Width              = 0x0,
                    PLD_Height             = 0x0,
                    PLD_UserVisible        = 0x1,
                    PLD_Dock               = 0x0,
                    PLD_Lid                = 0x1,
                    PLD_Panel              = "FRONT",
                    PLD_VerticalPosition   = "UPPER",
                    PLD_HorizontalPosition = "CENTER",
                    PLD_Shape              = "UNKNOWN",
                    PLD_GroupOrientation   = 0x0,
                    PLD_GroupToken         = 0x0,
                    PLD_GroupPosition      = 0x0,
                    PLD_Bay                = 0x0,
                    PLD_Ejectable          = 0x0,
                    PLD_EjectRequired      = 0x0,
                    PLD_CabinetNumber      = 0x0,
                    PLD_CardCageNumber     = 0x0,
                    PLD_Reference          = 0x0,
                    PLD_Rotation           = 0x0,
                    PLD_Order              = 0x0,
                    PLD_VerticalOffset     = 0xFFFF,
                    PLD_HorizontalOffset   = 0xFFFF)

            })
        }
    }


    B69A: 11 17 0A 14 82 00 00 00 00 00 00 00 25 1D 00 00  // ............%...
    B6AA: 00 00 00 00 FF FF FF FF                          // ........

    Scope (_SB.PCI0.EHC1.HUBN.PR01.PR18)
    {

    B6B2: 10 4D 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .M./._SB_PCI0EHC
    B6C2: 31 48 55 42 4E 50 52 30 31 50 52 31 38           // 1HUBNPR01PR18

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B6CF: 14 18 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B6D6: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                Zero, 
                0xFF, 
                Zero, 
                Zero
            })

    B6DB: 12 07 04 00 0A FF 00 00                          // ........

            Return (UPCP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR18._UPC.UPCP */
        }


    B6E3: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B6E8: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B6EF: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B6F4: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B6F7: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
    B707: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC1.HUBN.PR01.PR18._PLD.PLDP */
        }
    }


    B70B: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC2.HUBN.PR01.PR11)
    {

    B710: 10 4E 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .N./._SB_PCI0EHC
    B720: 32 48 55 42 4E 50 52 30 31 50 52 31 31           // 2HUBNPR01PR11

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B72D: 14 19 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B734: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                0xFF, 
                0xFF, 
                Zero, 
                Zero
            })

    B739: 12 08 04 0A FF 0A FF 00 00                       // .........

            Return (UPCP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR11._UPC.UPCP */
        }


    B742: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B747: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B74E: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B753: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xE1, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B756: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1C 00 00  // ................
    B766: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR11._PLD.PLDP */
        }
    }


    B76A: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC2.HUBN.PR01.PR12)
    {

    B76F: 10 4E 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .N./._SB_PCI0EHC
    B77F: 32 48 55 42 4E 50 52 30 31 50 52 31 32           // 2HUBNPR01PR12

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B78C: 14 19 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B793: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                0xFF, 
                0xFF, 
                Zero, 
                Zero
            })

    B798: 12 08 04 0A FF 0A FF 00 00                       // .........

            Return (UPCP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR12._UPC.UPCP */
        }


    B7A1: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B7A6: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B7AD: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B7B2: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xE1, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B7B5: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1D 00 00  // ................
    B7C5: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR12._PLD.PLDP */
        }
    }


    B7C9: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC2.HUBN.PR01.PR13)
    {

    B7CE: 10 4E 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .N./._SB_PCI0EHC
    B7DE: 32 48 55 42 4E 50 52 30 31 50 52 31 33           // 2HUBNPR01PR13

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B7EB: 14 19 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B7F2: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                0xFF, 
                0xFF, 
                Zero, 
                Zero
            })

    B7F7: 12 08 04 0A FF 0A FF 00 00                       // .........

            Return (UPCP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR13._UPC.UPCP */
        }


    B800: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B805: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B80C: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B811: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xE1, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B814: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1D 00 00  // ................
    B824: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR13._PLD.PLDP */
        }
    }


    B828: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC2.HUBN.PR01.PR14)
    {

    B82D: 10 4E 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .N./._SB_PCI0EHC
    B83D: 32 48 55 42 4E 50 52 30 31 50 52 31 34           // 2HUBNPR01PR14

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B84A: 14 19 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B851: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                0xFF, 
                0xFF, 
                Zero, 
                Zero
            })

    B856: 12 08 04 0A FF 0A FF 00 00                       // .........

            Return (UPCP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR14._UPC.UPCP */
        }


    B85F: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B864: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B86B: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B870: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xE1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B873: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1E 00 00  // ................
    B883: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR14._PLD.PLDP */
        }
    }


    B887: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC2.HUBN.PR01.PR15)
    {

    B88C: 10 4E 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .N./._SB_PCI0EHC
    B89C: 32 48 55 42 4E 50 52 30 31 50 52 31 35           // 2HUBNPR01PR15

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B8A9: 14 19 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B8B0: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                0xFF, 
                0xFF, 
                Zero, 
                Zero
            })

    B8B5: 12 08 04 0A FF 0A FF 00 00                       // .........

            Return (UPCP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR15._UPC.UPCP */
        }


    B8BE: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B8C3: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B8CA: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B8CF: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B8D2: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
    B8E2: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR15._PLD.PLDP */
        }
    }


    B8E6: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.EHC2.HUBN.PR01.PR16)
    {

    B8EB: 10 4E 05 2F 06 5F 53 42 5F 50 43 49 30 45 48 43  // .N./._SB_PCI0EHC
    B8FB: 32 48 55 42 4E 50 52 30 31 50 52 31 36           // 2HUBNPR01PR16

        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
        {

    B908: 14 19 5F 55 50 43 08                             // .._UPC.

            Name (UPCP, 
    B90F: 08 55 50 43 50                                   // .UPCP

Package (0x04)
            {
                0xFF, 
                0xFF, 
                Zero, 
                Zero
            })

    B914: 12 08 04 0A FF 0A FF 00 00                       // .........

            Return (UPCP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR16._UPC.UPCP */
        }


    B91D: A4 55 50 43 50                                   // .UPCP

        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
        {

    B922: 14 27 5F 50 4C 44 08                             // .'_PLD.

            Name (PLDP, 
    B929: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
            {

    B92E: 12 16 01                                         // ...

                Buffer (0x10)
                {
                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // ........
                }
            })

    B931: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
    B941: 00 00 00 00                                      // ....

            Return (PLDP) /* \_SB_.PCI0.EHC2.HUBN.PR01.PR16._PLD.PLDP */
        }
    }


    B945: A4 50 4C 44 50                                   // .PLDP

    Scope (_SB.PCI0.GFX0)
    {

    B94A: 10 34 2F 03 5F 53 42 5F 50 43 49 30 47 46 58 30  // .4/._SB_PCI0GFX0

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    B95A: 14 24 5F 44 45 50 00                             // .$_DEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    B961: A0 17 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    B96B: 93 53 30 49 44 01                                // .S0ID.

                Return (
    B971: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

    B972: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

    B979: A1 05                                            // ..

                Return (
    B97B: A4                                               // .

Package (0x00){})
            }
        }
    }


    B97C: 12 02 00                                         // ...

    Scope (_SB.PCI0.SAT0)
    {

    B97F: 10 41 04 2F 03 5F 53 42 5F 50 43 49 30 53 41 54  // .A./._SB_PCI0SAT
    B98F: 30                                               // 0

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    B990: 14 30 5F 44 45 50 00                             // .0_DEP.

            If (LAnd (LAnd (LEqual (PCHS, 0x02), 
    B997: A0 23 90 90 93 50 43 48 53 0A 02                 // .#...PCHS..

LEqual (S0ID, One)), 
    B9A2: 93 53 30 49 44 01                                // .S0ID.


    B9A8: 92                                               // .

LNotEqual (And (
                PEPC, 0x03), Zero)))
            {

    B9A9: 93 7B 50 45 50 43 0A 03 00 00                    // .{PEPC....

                Return (
    B9B3: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

    B9B4: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

    B9BB: A1 05                                            // ..

                Return (
    B9BD: A4                                               // .

Package (0x00){})
            }
        }
    }


    B9BE: 12 02 00                                         // ...

    Scope (_SB.PCI0.I2C0)
    {

    B9C1: 10 34 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 30  // .4/._SB_PCI0I2C0

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    B9D1: 14 24 5F 44 45 50 00                             // .$_DEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    B9D8: A0 17 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    B9E2: 93 53 30 49 44 01                                // .S0ID.

                Return (
    B9E8: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

    B9E9: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

    B9F0: A1 05                                            // ..

                Return (
    B9F2: A4                                               // .

Package (0x00){})
            }
        }
    }


    B9F3: 12 02 00                                         // ...

    Scope (_SB.PCI0.I2C1)
    {

    B9F6: 10 34 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 31  // .4/._SB_PCI0I2C1

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    BA06: 14 24 5F 44 45 50 00                             // .$_DEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    BA0D: A0 17 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    BA17: 93 53 30 49 44 01                                // .S0ID.

                Return (
    BA1D: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

    BA1E: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

    BA25: A1 05                                            // ..

                Return (
    BA27: A4                                               // .

Package (0x00){})
            }
        }
    }


    BA28: 12 02 00                                         // ...

    Scope (_SB.PCI0.XHC)
    {

    BA2B: 10 34 2F 03 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .4/._SB_PCI0XHC_

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    BA3B: 14 24 5F 44 45 50 00                             // .$_DEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    BA42: A0 17 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    BA4C: 93 53 30 49 44 01                                // .S0ID.

                Return (
    BA52: A4                                               // .

Package (0x01)
                {
                    PEPD
                })
            }

    BA53: 12 06 01 50 45 50 44                             // ...PEPD

            Else
            {

    BA5A: A1 05                                            // ..

                Return (
    BA5C: A4                                               // .

Package (0x00){})
            }
        }
    }


    BA5D: 12 02 00                                         // ...

    Scope (_SB.PCI0.RP01.PXSX)
    {

    BA60: 10 49 0B 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .I./._SB_PCI0RP0
    BA70: 31 50 58 53 58                                   // 1PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    BA75: 14 39 5F 44 45 50 00                             // .9_DEP.

            If (LOr (PAHC (), PNVM ()))
            {

    BA7C: A0 2E 91 50 41 48 43 50 4E 56 4D                 // ...PAHCPNVM

                If (LAnd (LAnd (LEqual (PCHS, 0x02), 
    BA87: A0 23 90 90 93 50 43 48 53 0A 02                 // .#...PCHS..

LEqual (S0ID, One)), 
    BA92: 93 53 30 49 44 01                                // .S0ID.


    BA98: 92                                               // .

LNotEqual (And (
                    PEPC, 0x03), Zero)))
                {

    BA99: 93 7B 50 45 50 43 0A 03 00 00                    // .{PEPC....

                    Return (
    BAA3: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


    BAA4: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
    BAAB: A4                                               // .

Package (0x00){})
        }


    BAAC: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

    BAAF: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


    BABA: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
    BACA: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

    BAD1: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

    BAD8: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

    BAE0: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

    BAE9: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


    BAF1: A4 01                                            // ..

            Return (Zero)
        }


    BAF3: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

    BAF5: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

    BAFC: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

    BB04: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

    BB0D: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


    BB16: A4 01                                            // ..

            Return (Zero)
        }
    }


    BB18: A4 00                                            // ..

    Scope (_SB.PCI0.RP02.PXSX)
    {

    BB1A: 10 49 0B 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .I./._SB_PCI0RP0
    BB2A: 32 50 58 53 58                                   // 2PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    BB2F: 14 39 5F 44 45 50 00                             // .9_DEP.

            If (LOr (PAHC (), PNVM ()))
            {

    BB36: A0 2E 91 50 41 48 43 50 4E 56 4D                 // ...PAHCPNVM

                If (LAnd (LAnd (LEqual (PCHS, 0x02), 
    BB41: A0 23 90 90 93 50 43 48 53 0A 02                 // .#...PCHS..

LEqual (S0ID, One)), 
    BB4C: 93 53 30 49 44 01                                // .S0ID.


    BB52: 92                                               // .

LNotEqual (And (
                    PEPC, 0x03), Zero)))
                {

    BB53: 93 7B 50 45 50 43 0A 03 00 00                    // .{PEPC....

                    Return (
    BB5D: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


    BB5E: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
    BB65: A4                                               // .

Package (0x00){})
        }


    BB66: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

    BB69: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


    BB74: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
    BB84: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

    BB8B: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

    BB92: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

    BB9A: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

    BBA3: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


    BBAB: A4 01                                            // ..

            Return (Zero)
        }


    BBAD: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

    BBAF: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

    BBB6: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

    BBBE: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

    BBC7: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


    BBD0: A4 01                                            // ..

            Return (Zero)
        }
    }


    BBD2: A4 00                                            // ..

    Scope (_SB.PCI0.RP03.PXSX)
    {

    BBD4: 10 49 0B 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .I./._SB_PCI0RP0
    BBE4: 33 50 58 53 58                                   // 3PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    BBE9: 14 39 5F 44 45 50 00                             // .9_DEP.

            If (LOr (PAHC (), PNVM ()))
            {

    BBF0: A0 2E 91 50 41 48 43 50 4E 56 4D                 // ...PAHCPNVM

                If (LAnd (LAnd (LEqual (PCHS, 0x02), 
    BBFB: A0 23 90 90 93 50 43 48 53 0A 02                 // .#...PCHS..

LEqual (S0ID, One)), 
    BC06: 93 53 30 49 44 01                                // .S0ID.


    BC0C: 92                                               // .

LNotEqual (And (
                    PEPC, 0x03), Zero)))
                {

    BC0D: 93 7B 50 45 50 43 0A 03 00 00                    // .{PEPC....

                    Return (
    BC17: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


    BC18: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
    BC1F: A4                                               // .

Package (0x00){})
        }


    BC20: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

    BC23: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


    BC2E: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
    BC3E: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

    BC45: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

    BC4C: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

    BC54: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

    BC5D: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


    BC65: A4 01                                            // ..

            Return (Zero)
        }


    BC67: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

    BC69: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

    BC70: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

    BC78: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

    BC81: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


    BC8A: A4 01                                            // ..

            Return (Zero)
        }
    }


    BC8C: A4 00                                            // ..

    Scope (_SB.PCI0.RP04.PXSX)
    {

    BC8E: 10 49 0B 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .I./._SB_PCI0RP0
    BC9E: 34 50 58 53 58                                   // 4PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    BCA3: 14 39 5F 44 45 50 00                             // .9_DEP.

            If (LOr (PAHC (), PNVM ()))
            {

    BCAA: A0 2E 91 50 41 48 43 50 4E 56 4D                 // ...PAHCPNVM

                If (LAnd (LAnd (LEqual (PCHS, 0x02), 
    BCB5: A0 23 90 90 93 50 43 48 53 0A 02                 // .#...PCHS..

LEqual (S0ID, One)), 
    BCC0: 93 53 30 49 44 01                                // .S0ID.


    BCC6: 92                                               // .

LNotEqual (And (
                    PEPC, 0x03), Zero)))
                {

    BCC7: 93 7B 50 45 50 43 0A 03 00 00                    // .{PEPC....

                    Return (
    BCD1: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


    BCD2: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
    BCD9: A4                                               // .

Package (0x00){})
        }


    BCDA: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

    BCDD: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


    BCE8: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
    BCF8: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

    BCFF: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

    BD06: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

    BD0E: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

    BD17: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


    BD1F: A4 01                                            // ..

            Return (Zero)
        }


    BD21: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

    BD23: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

    BD2A: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

    BD32: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

    BD3B: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


    BD44: A4 01                                            // ..

            Return (Zero)
        }
    }


    BD46: A4 00                                            // ..

    Scope (_SB.PCI0.RP05.PXSX)
    {

    BD48: 10 49 0B 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .I./._SB_PCI0RP0
    BD58: 35 50 58 53 58                                   // 5PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    BD5D: 14 39 5F 44 45 50 00                             // .9_DEP.

            If (LOr (PAHC (), PNVM ()))
            {

    BD64: A0 2E 91 50 41 48 43 50 4E 56 4D                 // ...PAHCPNVM

                If (LAnd (LAnd (LEqual (PCHS, 0x02), 
    BD6F: A0 23 90 90 93 50 43 48 53 0A 02                 // .#...PCHS..

LEqual (S0ID, One)), 
    BD7A: 93 53 30 49 44 01                                // .S0ID.


    BD80: 92                                               // .

LNotEqual (And (
                    PEPC, 0x03), Zero)))
                {

    BD81: 93 7B 50 45 50 43 0A 03 00 00                    // .{PEPC....

                    Return (
    BD8B: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


    BD8C: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
    BD93: A4                                               // .

Package (0x00){})
        }


    BD94: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

    BD97: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


    BDA2: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
    BDB2: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

    BDB9: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

    BDC0: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

    BDC8: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

    BDD1: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


    BDD9: A4 01                                            // ..

            Return (Zero)
        }


    BDDB: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

    BDDD: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

    BDE4: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

    BDEC: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

    BDF5: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


    BDFE: A4 01                                            // ..

            Return (Zero)
        }
    }


    BE00: A4 00                                            // ..

    Scope (_SB.PCI0.RP06.PXSX)
    {

    BE02: 10 49 0B 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .I./._SB_PCI0RP0
    BE12: 36 50 58 53 58                                   // 6PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    BE17: 14 39 5F 44 45 50 00                             // .9_DEP.

            If (LOr (PAHC (), PNVM ()))
            {

    BE1E: A0 2E 91 50 41 48 43 50 4E 56 4D                 // ...PAHCPNVM

                If (LAnd (LAnd (LEqual (PCHS, 0x02), 
    BE29: A0 23 90 90 93 50 43 48 53 0A 02                 // .#...PCHS..

LEqual (S0ID, One)), 
    BE34: 93 53 30 49 44 01                                // .S0ID.


    BE3A: 92                                               // .

LNotEqual (And (
                    PEPC, 0x03), Zero)))
                {

    BE3B: 93 7B 50 45 50 43 0A 03 00 00                    // .{PEPC....

                    Return (
    BE45: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


    BE46: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
    BE4D: A4                                               // .

Package (0x00){})
        }


    BE4E: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

    BE51: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


    BE5C: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
    BE6C: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

    BE73: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

    BE7A: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

    BE82: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

    BE8B: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


    BE93: A4 01                                            // ..

            Return (Zero)
        }


    BE95: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

    BE97: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

    BE9E: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

    BEA6: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

    BEAF: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


    BEB8: A4 01                                            // ..

            Return (Zero)
        }
    }


    BEBA: A4 00                                            // ..

    Scope (_SB.PCI0.RP07.PXSX)
    {

    BEBC: 10 49 0B 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .I./._SB_PCI0RP0
    BECC: 37 50 58 53 58                                   // 7PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    BED1: 14 39 5F 44 45 50 00                             // .9_DEP.

            If (LOr (PAHC (), PNVM ()))
            {

    BED8: A0 2E 91 50 41 48 43 50 4E 56 4D                 // ...PAHCPNVM

                If (LAnd (LAnd (LEqual (PCHS, 0x02), 
    BEE3: A0 23 90 90 93 50 43 48 53 0A 02                 // .#...PCHS..

LEqual (S0ID, One)), 
    BEEE: 93 53 30 49 44 01                                // .S0ID.


    BEF4: 92                                               // .

LNotEqual (And (
                    PEPC, 0x03), Zero)))
                {

    BEF5: 93 7B 50 45 50 43 0A 03 00 00                    // .{PEPC....

                    Return (
    BEFF: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


    BF00: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
    BF07: A4                                               // .

Package (0x00){})
        }


    BF08: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

    BF0B: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


    BF16: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
    BF26: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

    BF2D: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

    BF34: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

    BF3C: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

    BF45: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


    BF4D: A4 01                                            // ..

            Return (Zero)
        }


    BF4F: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

    BF51: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

    BF58: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

    BF60: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

    BF69: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


    BF72: A4 01                                            // ..

            Return (Zero)
        }
    }


    BF74: A4 00                                            // ..

    Scope (_SB.PCI0.RP08.PXSX)
    {

    BF76: 10 49 0B 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .I./._SB_PCI0RP0
    BF86: 38 50 58 53 58                                   // 8PXSX

        Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
        {

    BF8B: 14 39 5F 44 45 50 00                             // .9_DEP.

            If (LOr (PAHC (), PNVM ()))
            {

    BF92: A0 2E 91 50 41 48 43 50 4E 56 4D                 // ...PAHCPNVM

                If (LAnd (LAnd (LEqual (PCHS, 0x02), 
    BF9D: A0 23 90 90 93 50 43 48 53 0A 02                 // .#...PCHS..

LEqual (S0ID, One)), 
    BFA8: 93 53 30 49 44 01                                // .S0ID.


    BFAE: 92                                               // .

LNotEqual (And (
                    PEPC, 0x03), Zero)))
                {

    BFAF: 93 7B 50 45 50 43 0A 03 00 00                    // .{PEPC....

                    Return (
    BFB9: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }
            }


    BFBA: 12 06 01 50 45 50 44                             // ...PEPD

            Return (
    BFC1: A4                                               // .

Package (0x00){})
        }


    BFC2: 12 02 00                                         // ...

        OperationRegion (PCCX, PCI_Config, 0x09, 0x04)

    BFC5: 5B 80 50 43 43 58 02 0A 09 0A 04                 // [.PCCX.....

        Field (PCCX, ByteAcc, NoLock, Preserve)
        {
            PIXX,   8, 
            SCCX,   8, 
            BCCX,   8
        }


    BFD0: 5B 81 15 50 43 43 58 01 50 49 58 58 08 53 43 43  // [..PCCX.PIXX.SCC
    BFE0: 58 08 42 43 43 58 08                             // X.BCCX.

        Method (PAHC, 0, Serialized)
        {

    BFE7: 14 23 50 41 48 43 08                             // .#PAHC.

            If (LEqual (BCCX, One))
            {

    BFEE: A0 1A 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x06))
                {

    BFF6: A0 12 93 53 43 43 58 0A 06                       // ...SCCX..

                    If (LEqual (PIXX, One))
                    {

    BFFF: A0 09 93 50 49 58 58 01                          // ...PIXX.

                        Return (One)
                    }
                }
            }


    C007: A4 01                                            // ..

            Return (Zero)
        }


    C009: A4 00                                            // ..

        Method (PNVM, 0, Serialized)
        {

    C00B: 14 24 50 4E 56 4D 08                             // .$PNVM.

            If (LEqual (BCCX, One))
            {

    C012: A0 1B 93 42 43 43 58 01                          // ...BCCX.

                If (LEqual (SCCX, 0x08))
                {

    C01A: A0 13 93 53 43 43 58 0A 08                       // ...SCCX..

                    If (LEqual (PIXX, 0x02))
                    {

    C023: A0 0A 93 50 49 58 58 0A 02                       // ...PIXX..

                        Return (One)
                    }
                }
            }


    C02C: A4 01                                            // ..

            Return (Zero)
        }
    }


    C02E: A4 00                                            // ..

    Scope (_PR.CPU0)
    {

    C030: 10 35 2E 5F 50 52 5F 43 50 55 30                 // .5._PR_CPU0

        Method (XDEP, 0, NotSerialized)
        {

    C03B: 14 2A 58 44 45 50 00                             // .*XDEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    C042: A0 1D 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    C04C: 93 53 30 49 44 01                                // .S0ID.

                Return (
    C052: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

    C053: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

    C060: A1 05                                            // ..

                Return (
    C062: A4                                               // .

Package (0x00){})
            }
        }
    }


    C063: 12 02 00                                         // ...

    Scope (_PR.CPU1)
    {

    C066: 10 35 2E 5F 50 52 5F 43 50 55 31                 // .5._PR_CPU1

        Method (XDEP, 0, NotSerialized)
        {

    C071: 14 2A 58 44 45 50 00                             // .*XDEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    C078: A0 1D 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    C082: 93 53 30 49 44 01                                // .S0ID.

                Return (
    C088: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

    C089: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

    C096: A1 05                                            // ..

                Return (
    C098: A4                                               // .

Package (0x00){})
            }
        }
    }


    C099: 12 02 00                                         // ...

    Scope (_PR.CPU2)
    {

    C09C: 10 35 2E 5F 50 52 5F 43 50 55 32                 // .5._PR_CPU2

        Method (XDEP, 0, NotSerialized)
        {

    C0A7: 14 2A 58 44 45 50 00                             // .*XDEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    C0AE: A0 1D 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    C0B8: 93 53 30 49 44 01                                // .S0ID.

                Return (
    C0BE: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

    C0BF: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

    C0CC: A1 05                                            // ..

                Return (
    C0CE: A4                                               // .

Package (0x00){})
            }
        }
    }


    C0CF: 12 02 00                                         // ...

    Scope (_PR.CPU3)
    {

    C0D2: 10 35 2E 5F 50 52 5F 43 50 55 33                 // .5._PR_CPU3

        Method (XDEP, 0, NotSerialized)
        {

    C0DD: 14 2A 58 44 45 50 00                             // .*XDEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    C0E4: A0 1D 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    C0EE: 93 53 30 49 44 01                                // .S0ID.

                Return (
    C0F4: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

    C0F5: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

    C102: A1 05                                            // ..

                Return (
    C104: A4                                               // .

Package (0x00){})
            }
        }
    }


    C105: 12 02 00                                         // ...

    Scope (_PR.CPU4)
    {

    C108: 10 35 2E 5F 50 52 5F 43 50 55 34                 // .5._PR_CPU4

        Method (XDEP, 0, NotSerialized)
        {

    C113: 14 2A 58 44 45 50 00                             // .*XDEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    C11A: A0 1D 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    C124: 93 53 30 49 44 01                                // .S0ID.

                Return (
    C12A: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

    C12B: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

    C138: A1 05                                            // ..

                Return (
    C13A: A4                                               // .

Package (0x00){})
            }
        }
    }


    C13B: 12 02 00                                         // ...

    Scope (_PR.CPU5)
    {

    C13E: 10 35 2E 5F 50 52 5F 43 50 55 35                 // .5._PR_CPU5

        Method (XDEP, 0, NotSerialized)
        {

    C149: 14 2A 58 44 45 50 00                             // .*XDEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    C150: A0 1D 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    C15A: 93 53 30 49 44 01                                // .S0ID.

                Return (
    C160: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

    C161: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

    C16E: A1 05                                            // ..

                Return (
    C170: A4                                               // .

Package (0x00){})
            }
        }
    }


    C171: 12 02 00                                         // ...

    Scope (_PR.CPU6)
    {

    C174: 10 35 2E 5F 50 52 5F 43 50 55 36                 // .5._PR_CPU6

        Method (XDEP, 0, NotSerialized)
        {

    C17F: 14 2A 58 44 45 50 00                             // .*XDEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    C186: A0 1D 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    C190: 93 53 30 49 44 01                                // .S0ID.

                Return (
    C196: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

    C197: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

    C1A4: A1 05                                            // ..

                Return (
    C1A6: A4                                               // .

Package (0x00){})
            }
        }
    }


    C1A7: 12 02 00                                         // ...

    Scope (_PR.CPU7)
    {

    C1AA: 10 35 2E 5F 50 52 5F 43 50 55 37                 // .5._PR_CPU7

        Method (XDEP, 0, NotSerialized)
        {

    C1B5: 14 2A 58 44 45 50 00                             // .*XDEP.

            If (LAnd (LEqual (PCHS, 0x02), 
    C1BC: A0 1D 90 93 50 43 48 53 0A 02                    // ....PCHS..

LEqual (S0ID, One)))
            {

    C1C6: 93 53 30 49 44 01                                // .S0ID.

                Return (
    C1CC: A4                                               // .

Package (0x01)
                {
                    \_SB.PEPD
                })
            }

    C1CD: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

            Else
            {

    C1DA: A1 05                                            // ..

                Return (
    C1DC: A4                                               // .

Package (0x00){})
            }
        }
    }


    C1DD: 12 02 00                                         // ...

    Scope (_SB)
    {

    C1E0: 10 83 18 01 5F 53 42 5F                          // ...._SB_

        Device (PEPD)
        {

    C1E8: 5B 82 8A 17 01 50 45 50 44                       // [....PEPD

            Name (_HID, "INT33A1" /* Intel Power Engine */)  // _HID: Hardware ID

    C1F1: 08 5F 48 49 44 0D 49 4E 54 33 33 41 31 00        // ._HID.INT33A1.

            Name (_CID, EisaId ("PNP0D80") /* Windows-compatible System Power Management Controller */)  // _CID: Compatible ID

    C1FF: 08 5F 43 49 44 0C 41 D0 0D 80                    // ._CID.A...

            Name (_UID, One)  // _UID: Unique ID

    C209: 08 5F 55 49 44 01                                // ._UID.

            Name (PEPP, Zero)

    C20F: 08 50 45 50 50 00                                // .PEPP.

            Name (DEVS, 
    C215: 08 44 45 56 53                                   // .DEVS

Package (0x03)
            {
                0x02, 

    C21A: 12 2F 03 0A 02                                   // ./...

                Package (0x01)
                {
                    "\\_SB.PCI0.GFX0"
                }, 


    C21F: 12 12 01 0D 5C 5F 53 42 2E 50 43 49 30 2E 47 46  // ....\_SB.PCI0.GF
    C22F: 58 30 00                                         // X0.

                Package (0x01)
                {
                    "\\_SB.PCI0.SAT0.PRT1"
                }
            })

    C232: 12 17 01 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // ....\_SB.PCI0.SA
    C242: 54 30 2E 50 52 54 31 00                          // T0.PRT1.

            Name (DEVX, 
    C24A: 08 44 45 56 58                                   // .DEVX

Package (0x06)
            {

    C24F: 12 45 0D 06                                      // .E..

                Package (0x02)
                {
                    "\\_SB.PCI0.GFX0", 
                    0xFFFFFFFF
                }, 


    C253: 12 17 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 47 46  // ....\_SB.PCI0.GF
    C263: 58 30 00 0C FF FF FF FF                          // X0......

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT1", 
                    0xFFFFFFFF
                }, 


    C26B: 12 1C 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // ....\_SB.PCI0.SA
    C27B: 54 30 2E 50 52 54 31 00 0C FF FF FF FF           // T0.PRT1......

                Package (0x02)
                {
                    "\\_SB.PCI0.I2C0", 
                    0xFFFFFFFF
                }, 


    C288: 12 17 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
    C298: 43 30 00 0C FF FF FF FF                          // C0......

                Package (0x02)
                {
                    "\\_SB.PCI0.I2C1", 
                    0xFFFFFFFF
                }, 


    C2A0: 12 17 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
    C2B0: 43 31 00 0C FF FF FF FF                          // C1......

                Package (0x02)
                {
                    "\\_SB.PCI0.XHC", 
                    0xFFFFFFFF
                }, 


    C2B8: 12 16 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 58 48  // ....\_SB.PCI0.XH
    C2C8: 43 00 0C FF FF FF FF                             // C......

                Package (0x02)
                {
                    "HDAUDIO\\FUNC_01&VEN_10EC&DEV_0282&SUBSYS_00000000&REV_1000\\4&a02b74b&0&0001", 
                    0xFFFFFFFF
                }
            })

    C2CF: 12 45 05 02 0D 48 44 41 55 44 49 4F 5C 46 55 4E  // .E...HDAUDIO\FUN
    C2DF: 43 5F 30 31 26 56 45 4E 5F 31 30 45 43 26 44 45  // C_01&VEN_10EC&DE
    C2EF: 56 5F 30 32 38 32 26 53 55 42 53 59 53 5F 30 30  // V_0282&SUBSYS_00
    C2FF: 30 30 30 30 30 30 26 52 45 56 5F 31 30 30 30 5C  // 000000&REV_1000\
    C30F: 34 26 61 30 32 62 37 34 62 26 30 26 30 30 30 31  // 4&a02b74b&0&0001
    C31F: 00 0C FF FF FF FF                                // ......

            Name (DEVY, 
    C325: 08 44 45 56 59                                   // .DEVY

Package (0x1E)
            {

    C32A: 12 45 44 1E                                      // .ED.

                Package (0x03)
                {
                    "\\_PR.CPU0", 
                    One, 

    C32E: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 30 00 01     // ....\_PR.CPU0..

                    Package (0x02)
                    {
                        Zero, 

    C33D: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


    C341: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.CPU1", 
                    One, 

    C347: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 31 00 01     // ....\_PR.CPU1..

                    Package (0x02)
                    {
                        Zero, 

    C356: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


    C35A: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.CPU2", 
                    One, 

    C360: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 32 00 01     // ....\_PR.CPU2..

                    Package (0x02)
                    {
                        Zero, 

    C36F: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


    C373: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.CPU3", 
                    One, 

    C379: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 33 00 01     // ....\_PR.CPU3..

                    Package (0x02)
                    {
                        Zero, 

    C388: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


    C38C: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_SB.PCI0.GFX0", 
                    One, 

    C392: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 47 46  // ....\_SB.PCI0.GF
    C3A2: 58 30 00 01                                      // X0..

                    Package (0x02)
                    {
                        Zero, 

    C3A6: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


    C3AA: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0", 
                    Zero, 

    C3B1: 12 1F 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // ....\_SB.PCI0.SA
    C3C1: 54 30 00 00                                      // T0..

                    Package (0x02)
                    {
                        Zero, 

    C3C5: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C3C9: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT0", 
                    Zero, 

    C3D1: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .$..\_SB.PCI0.SA
    C3E1: 54 30 2E 50 52 54 30 00 00                       // T0.PRT0..

                    Package (0x02)
                    {
                        Zero, 

    C3EA: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C3EE: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT1", 
                    Zero, 

    C3F6: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .$..\_SB.PCI0.SA
    C406: 54 30 2E 50 52 54 31 00 00                       // T0.PRT1..

                    Package (0x02)
                    {
                        Zero, 

    C40F: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C413: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT2", 
                    Zero, 

    C41B: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .$..\_SB.PCI0.SA
    C42B: 54 30 2E 50 52 54 32 00 00                       // T0.PRT2..

                    Package (0x02)
                    {
                        Zero, 

    C434: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C438: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT3", 
                    Zero, 

    C440: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .$..\_SB.PCI0.SA
    C450: 54 30 2E 50 52 54 33 00 00                       // T0.PRT3..

                    Package (0x02)
                    {
                        Zero, 

    C459: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C45D: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C0", 
                    One, 

    C465: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
    C475: 43 30 00 01                                      // C0..

                    Package (0x02)
                    {
                        Zero, 

    C479: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


    C47D: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C1", 
                    One, 

    C484: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
    C494: 43 31 00 01                                      // C1..

                    Package (0x02)
                    {
                        Zero, 

    C498: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


    C49C: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.XHC", 
                    One, 

    C4A3: 12 1D 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 58 48  // ....\_SB.PCI0.XH
    C4B3: 43 00 01                                         // C..

                    Package (0x02)
                    {
                        Zero, 

    C4B6: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


    C4BA: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "HDAUDIO\\FUNC_01&VEN_10EC&DEV_0282*", 
                    One, 

    C4C1: 12 36 03 0D 48 44 41 55 44 49 4F 5C 46 55 4E 43  // .6..HDAUDIO\FUNC
    C4D1: 5F 30 31 26 56 45 4E 5F 31 30 45 43 26 44 45 56  // _01&VEN_10EC&DEV
    C4E1: 5F 30 32 38 32 2A 00 01                          // _0282*..

                    Package (0x03)
                    {
                        Zero, 

    C4E9: 12 0E 03 00                                      // ....

                        Package (0x02)
                        {
                            Zero, 
                            Zero
                        }, 


    C4ED: 12 04 02 00 00                                   // .....

                        Package (0x02)
                        {
                            One, 
                            0x03
                        }
                    }
                }, 


    C4F2: 12 05 02 01 0A 03                                // ......

                Package (0x03)
                {
                    "\\_SB.PCI0.RP01.PXSX", 
                    Zero, 

    C4F8: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
    C508: 30 31 2E 50 58 53 58 00 00                       // 01.PXSX..

                    Package (0x02)
                    {
                        Zero, 

    C511: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C515: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP02.PXSX", 
                    Zero, 

    C51D: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
    C52D: 30 32 2E 50 58 53 58 00 00                       // 02.PXSX..

                    Package (0x02)
                    {
                        Zero, 

    C536: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C53A: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP03.PXSX", 
                    Zero, 

    C542: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
    C552: 30 33 2E 50 58 53 58 00 00                       // 03.PXSX..

                    Package (0x02)
                    {
                        Zero, 

    C55B: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C55F: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP04.PXSX", 
                    Zero, 

    C567: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
    C577: 30 34 2E 50 58 53 58 00 00                       // 04.PXSX..

                    Package (0x02)
                    {
                        Zero, 

    C580: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C584: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP05.PXSX", 
                    Zero, 

    C58C: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
    C59C: 30 35 2E 50 58 53 58 00 00                       // 05.PXSX..

                    Package (0x02)
                    {
                        Zero, 

    C5A5: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C5A9: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP06.PXSX", 
                    Zero, 

    C5B1: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
    C5C1: 30 36 2E 50 58 53 58 00 00                       // 06.PXSX..

                    Package (0x02)
                    {
                        Zero, 

    C5CA: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C5CE: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP07.PXSX", 
                    Zero, 

    C5D6: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
    C5E6: 30 37 2E 50 58 53 58 00 00                       // 07.PXSX..

                    Package (0x02)
                    {
                        Zero, 

    C5EF: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C5F3: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP08.PXSX", 
                    Zero, 

    C5FB: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .$..\_SB.PCI0.RP
    C60B: 30 38 2E 50 58 53 58 00 00                       // 08.PXSX..

                    Package (0x02)
                    {
                        Zero, 

    C614: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C618: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP01.PXSX.MINI", 
                    Zero, 

    C620: 12 29 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .)..\_SB.PCI0.RP
    C630: 30 31 2E 50 58 53 58 2E 4D 49 4E 49 00 00        // 01.PXSX.MINI..

                    Package (0x02)
                    {
                        Zero, 

    C63E: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C642: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP02.PXSX.MINI", 
                    Zero, 

    C64A: 12 29 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .)..\_SB.PCI0.RP
    C65A: 30 32 2E 50 58 53 58 2E 4D 49 4E 49 00 00        // 02.PXSX.MINI..

                    Package (0x02)
                    {
                        Zero, 

    C668: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C66C: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP03.PXSX.MINI", 
                    Zero, 

    C674: 12 29 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .)..\_SB.PCI0.RP
    C684: 30 33 2E 50 58 53 58 2E 4D 49 4E 49 00 00        // 03.PXSX.MINI..

                    Package (0x02)
                    {
                        Zero, 

    C692: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C696: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP04.PXSX.MINI", 
                    Zero, 

    C69E: 12 29 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .)..\_SB.PCI0.RP
    C6AE: 30 34 2E 50 58 53 58 2E 4D 49 4E 49 00 00        // 04.PXSX.MINI..

                    Package (0x02)
                    {
                        Zero, 

    C6BC: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C6C0: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP05.PXSX.MINI", 
                    Zero, 

    C6C8: 12 29 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .)..\_SB.PCI0.RP
    C6D8: 30 35 2E 50 58 53 58 2E 4D 49 4E 49 00 00        // 05.PXSX.MINI..

                    Package (0x02)
                    {
                        Zero, 

    C6E6: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C6EA: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP06.PXSX.MINI", 
                    Zero, 

    C6F2: 12 29 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .)..\_SB.PCI0.RP
    C702: 30 36 2E 50 58 53 58 2E 4D 49 4E 49 00 00        // 06.PXSX.MINI..

                    Package (0x02)
                    {
                        Zero, 

    C710: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C714: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP07.PXSX.MINI", 
                    Zero, 

    C71C: 12 29 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .)..\_SB.PCI0.RP
    C72C: 30 37 2E 50 58 53 58 2E 4D 49 4E 49 00 00        // 07.PXSX.MINI..

                    Package (0x02)
                    {
                        Zero, 

    C73A: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


    C73E: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.RP08.PXSX.MINI", 
                    Zero, 

    C746: 12 29 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .)..\_SB.PCI0.RP
    C756: 30 38 2E 50 58 53 58 2E 4D 49 4E 49 00 00        // 08.PXSX.MINI..

                    Package (0x02)
                    {
                        Zero, 

    C764: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }
            })

    C768: 12 07 03 0A FF 00 0A 81                          // ........

            Name (BCCD, 
    C770: 08 42 43 43 44                                   // .BCCD

Package (0x0D)
            {

    C775: 12 48 29 0D                                      // .H).

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0", 

    C779: 12 2C 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .,..\_SB.PCI0.SA
    C789: 54 30 00                                         // T0.

                    Package (0x01)
                    {

    C78C: 12 19 01                                         // ...

                        Package (0x03)
                        {

    C78F: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C792: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


    C79C: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT0", 

    C7A6: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
    C7B6: 54 30 2E 50 52 54 30 00                          // T0.PRT0.

                    Package (0x01)
                    {

    C7BE: 12 19 01                                         // ...

                        Package (0x03)
                        {

    C7C1: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C7C4: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


    C7CE: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT1", 

    C7D8: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
    C7E8: 54 30 2E 50 52 54 31 00                          // T0.PRT1.

                    Package (0x01)
                    {

    C7F0: 12 19 01                                         // ...

                        Package (0x03)
                        {

    C7F3: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C7F6: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


    C800: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT2", 

    C80A: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
    C81A: 54 30 2E 50 52 54 32 00                          // T0.PRT2.

                    Package (0x01)
                    {

    C822: 12 19 01                                         // ...

                        Package (0x03)
                        {

    C825: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C828: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


    C832: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT3", 

    C83C: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
    C84C: 54 30 2E 50 52 54 33 00                          // T0.PRT3.

                    Package (0x01)
                    {

    C854: 12 19 01                                         // ...

                        Package (0x03)
                        {

    C857: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C85A: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


    C864: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.RP01.PXSX", 

    C86E: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
    C87E: 30 31 2E 50 58 53 58 00                          // 01.PXSX.

                    Package (0x01)
                    {

    C886: 12 1B 01                                         // ...

                        Package (0x03)
                        {

    C889: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C88C: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


    C896: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP02.PXSX", 

    C8A2: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
    C8B2: 30 32 2E 50 58 53 58 00                          // 02.PXSX.

                    Package (0x01)
                    {

    C8BA: 12 1B 01                                         // ...

                        Package (0x03)
                        {

    C8BD: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C8C0: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


    C8CA: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP03.PXSX", 

    C8D6: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
    C8E6: 30 33 2E 50 58 53 58 00                          // 03.PXSX.

                    Package (0x01)
                    {

    C8EE: 12 1B 01                                         // ...

                        Package (0x03)
                        {

    C8F1: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C8F4: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


    C8FE: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP04.PXSX", 

    C90A: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
    C91A: 30 34 2E 50 58 53 58 00                          // 04.PXSX.

                    Package (0x01)
                    {

    C922: 12 1B 01                                         // ...

                        Package (0x03)
                        {

    C925: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C928: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


    C932: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP05.PXSX", 

    C93E: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
    C94E: 30 35 2E 50 58 53 58 00                          // 05.PXSX.

                    Package (0x01)
                    {

    C956: 12 1B 01                                         // ...

                        Package (0x03)
                        {

    C959: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C95C: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


    C966: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP06.PXSX", 

    C972: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
    C982: 30 36 2E 50 58 53 58 00                          // 06.PXSX.

                    Package (0x01)
                    {

    C98A: 12 1B 01                                         // ...

                        Package (0x03)
                        {

    C98D: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C990: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


    C99A: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP07.PXSX", 

    C9A6: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
    C9B6: 30 37 2E 50 58 53 58 00                          // 07.PXSX.

                    Package (0x01)
                    {

    C9BE: 12 1B 01                                         // ...

                        Package (0x03)
                        {

    C9C1: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C9C4: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }, 


    C9CE: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

                Package (0x02)
                {
                    "\\_SB.PCI0.RP08.PXSX", 

    C9DA: 12 33 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 52 50  // .3..\_SB.PCI0.RP
    C9EA: 30 38 2E 50 58 53 58 00                          // 08.PXSX.

                    Package (0x01)
                    {

    C9F2: 12 1B 01                                         // ...

                        Package (0x03)
                        {

    C9F5: 12 18 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


    C9F8: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x000186A0
                        }
                    }
                }
            })

    CA02: 12 06 03 00 0A CD 01 0C A0 86 01 00              // ............

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    CA0E: 14 26 5F 53 54 41 00                             // .&_STA.

                If (LEqual (PCHS, 0x02))
                {

    CA15: A0 1D 93 50 43 48 53 0A 02                       // ...PCHS..

                    If (LAnd (
    CA1E: A0 14 90 92                                      // ....

LGreaterEqual (OSYS, 0x07DC), 
    CA22: 95 4F 53 59 53 0B DC 07                          // .OSYS...

LEqual (S0ID, One)))
                    {

    CA2A: 93 53 30 49 44 01                                // .S0ID.

                        Return (0x0F)
                    }
                }


    CA30: A4 0A 0F                                         // ...

                Return (Zero)
            }


    CA33: A4 00                                            // ..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

    CA35: 14 4E 92 5F 44 53 4D 0C                          // .N._DSM.


    CA3D: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
    CA43: A0 4A 17 93 68                                   // .J..h

ToUUID ("b8febfe0-baf8-454b-aecd-49fb91137b21")))
                {

    CA48: 11 13 0A 10 E0 BF FE B8 F8 BA 4B 45 AE CD 49 FB  // ..........KE..I.
    CA58: 91 13 7B 21                                      // ..{!

                    If (LEqual (Arg2, Zero))
                    {

    CA5C: A0 09 93 6A 00                                   // ...j.

                        Return (
    CA61: A4                                               // .

Buffer (One)
                        {
                             0x07                                             // .
                        })
                    }


    CA62: 11 03 01 07                                      // ....

                    If (LEqual (Arg2, One))
                    {
                        Store (One, PEPP) /* \_SB_.PEPD.PEPP */

    CA66: A0 0D 93 6A 01 70 01 50 45 50 50                 // ...j.p.PEPP

                        Return (0x0F)
                    }


    CA71: A4 0A 0F                                         // ...

                    If (LEqual (Arg2, 0x02))
                    {

    CA74: A0 49 14 93 6A 0A 02                             // .I..j..

                        If (LEqual (Arg1, Zero))
                        {

    CA7B: A0 42 07 93 69 00                                // .B..i.

                            Switch (PEPY)
                            {

    CA81: A2 4C 06 01 70 50 45 50 59 5F 54 5F 30           // .L..pPEPY_T_0

                                Case (One)
                                {

    CA8E: A0 1F 93 5F 54 5F 30 01                          // ..._T_0.

                                    Return (
    CA96: A4                                               // .

Package (0x02)
                                    {
                                        One, 

    CA97: 12 16 02 01                                      // ....

                                        Package (0x01)
                                        {
                                            "\\_SB.PCI0.GFX0"
                                        }
                                    })
                                }

    CA9B: 12 12 01 0D 5C 5F 53 42 2E 50 43 49 30 2E 47 46  // ....\_SB.PCI0.GF
    CAAB: 58 30 00                                         // X0.

                                Case
    CAAE: A1 3E                                            // .>

 (0x02)
                                {

    CAB0: A0 25 93 5F 54 5F 30 0A 02                       // .%._T_0..

                                    Return (
    CAB9: A4                                               // .

Package (0x02)
                                    {
                                        One, 

    CABA: 12 1B 02 01                                      // ....

                                        Package (0x01)
                                        {
                                            "\\_SB.PCI0.SAT0.PRT1"
                                        }
                                    })
                                }

    CABE: 12 17 01 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // ....\_SB.PCI0.SA
    CACE: 54 30 2E 50 52 54 31 00                          // T0.PRT1.

                                Case
    CAD6: A1 16                                            // ..

 (0x03)
                                {

    CAD8: A0 0D 93 5F 54 5F 30 0A 03                       // ..._T_0..

                                    Return (DEVS) /* \_SB_.PEPD.DEVS */
                                }

    CAE1: A4 44 45 56 53                                   // .DEVS

                                Default
                                {

    CAE6: A1 06                                            // ..

                                    Return (
    CAE8: A4                                               // .

Package (0x01)
                                    {
                                        Zero
                                    })
                                }


    CAE9: 12 03 01 00                                      // ....

                            }
                        }


    CAED: A5                                               // .

                        If (LEqual (Arg1, One))
                        {

    CAEE: A0 4F 0C 93 69 01                                // .O..i.

                            If (LNot (
    CAF4: A0 16 92                                         // ...

And (PEPY, One)))
                            {

    CAF7: 7B 50 45 50 59 01 00                             // {PEPY..

                                Store (Zero, 
    CAFE: 70 00                                            // p.

Index (DerefOf (
    CB00: 88 83                                            // ..

Index (DEVX, Zero)), One))
                            }


    CB02: 88 44 45 56 58 00 00 01 00                       // .DEVX....

                            If (LNot (
    CB0B: A0 17 92                                         // ...

And (PEPY, 0x02)))
                            {

    CB0E: 7B 50 45 50 59 0A 02 00                          // {PEPY...

                                Store (Zero, 
    CB16: 70 00                                            // p.

Index (DerefOf (
    CB18: 88 83                                            // ..

Index (DEVX, One)), One))
                            }


    CB1A: 88 44 45 56 58 01 00 01 00                       // .DEVX....

                            If (LNot (
    CB23: A0 18 92                                         // ...

And (PEPY, 0x04)))
                            {

    CB26: 7B 50 45 50 59 0A 04 00                          // {PEPY...

                                Store (Zero, 
    CB2E: 70 00                                            // p.

Index (DerefOf (
    CB30: 88 83                                            // ..

Index (DEVX, 0x02)), One))
                            }


    CB32: 88 44 45 56 58 0A 02 00 01 00                    // .DEVX.....

                            If (LNot (
    CB3C: A0 18 92                                         // ...

And (PEPY, 0x08)))
                            {

    CB3F: 7B 50 45 50 59 0A 08 00                          // {PEPY...

                                Store (Zero, 
    CB47: 70 00                                            // p.

Index (DerefOf (
    CB49: 88 83                                            // ..

Index (DEVX, 0x03)), One))
                            }


    CB4B: 88 44 45 56 58 0A 03 00 01 00                    // .DEVX.....

                            If (LNot (
    CB55: A0 18 92                                         // ...

And (PEPY, 0x10)))
                            {

    CB58: 7B 50 45 50 59 0A 10 00                          // {PEPY...

                                Store (Zero, 
    CB60: 70 00                                            // p.

Index (DerefOf (
    CB62: 88 83                                            // ..

Index (DEVX, 0x04)), One))
                            }


    CB64: 88 44 45 56 58 0A 04 00 01 00                    // .DEVX.....

                            If (LNot (
    CB6E: A0 18 92                                         // ...

And (PEPY, 0x20)))
                            {

    CB71: 7B 50 45 50 59 0A 20 00                          // {PEPY. .

                                Store (Zero, 
    CB79: 70 00                                            // p.

Index (DerefOf (
    CB7B: 88 83                                            // ..

Index (DEVX, 0x05)), One))
                            }


    CB7D: 88 44 45 56 58 0A 05 00 01 00                    // .DEVX.....

                            If (LNot (
    CB87: A0 18 92                                         // ...

And (PEPY, 0x40)))
                            {

    CB8A: 7B 50 45 50 59 0A 40 00                          // {PEPY.@.

                                Store (Zero, 
    CB92: 70 00                                            // p.

Index (DerefOf (
    CB94: 88 83                                            // ..

Index (DEVX, 0x06)), One))
                            }


    CB96: 88 44 45 56 58 0A 06 00 01 00                    // .DEVX.....

                            If (LNot (
    CBA0: A0 18 92                                         // ...

And (PEPY, 0x80)))
                            {

    CBA3: 7B 50 45 50 59 0A 80 00                          // {PEPY...

                                Store (Zero, 
    CBAB: 70 00                                            // p.

Index (DerefOf (
    CBAD: 88 83                                            // ..

Index (DEVX, 0x07)), One))
                            }


    CBAF: 88 44 45 56 58 0A 07 00 01 00                    // .DEVX.....

                            Return (DEVX) /* \_SB_.PEPD.DEVX */
                        }
                    }
                }


    CBB9: A4 44 45 56 58                                   // .DEVX

                If (LEqual (Arg0, 
    CBBE: A0 43 7A 93 68                                   // .Cz.h

ToUUID ("c4eb40a0-6cd2-11e2-bcfd-0800200c9a66")))
                {

    CBC3: 11 13 0A 10 A0 40 EB C4 D2 6C E2 11 BC FD 08 00  // .....@...l......
    CBD3: 20 0C 9A 66                                      //  ..f

                    If (LEqual (Arg2, Zero))
                    {

    CBD7: A0 09 93 6A 00                                   // ...j.

                        Return (
    CBDC: A4                                               // .

Buffer (One)
                        {
                             0x07                                             // .
                        })
                    }


    CBDD: 11 03 01 07                                      // ....

                    If (LEqual (Arg2, One))
                    {

    CBE1: A0 45 77 93 6A 01                                // .Ew.j.

                        If (LEqual (S0ID, Zero))
                        {

    CBE7: A0 0B 93 53 30 49 44 00                          // ...S0ID.

                            Return (
    CBEF: A4                                               // .

Package (0x00){})
                        }


    CBF0: 12 02 00                                         // ...

                        If (LEqual (And (PEPC, 0x03), One))
                        {

    CBF3: A0 4B 18 93 7B 50 45 50 43 0A 03 00 01           // .K..{PEPC....

                            If (And (SPST, One))
                            {

    CC00: A0 16 7B 53 50 53 54 01 00                       // ..{SPST..

                                Store (One, 
    CC09: 70 01                                            // p.

Index (DerefOf (
    CC0B: 88 83                                            // ..

Index (DEVY, 0x06)), One))
                            }


    CC0D: 88 44 45 56 59 0A 06 00 01 00                    // .DEVY.....

                            If (And (SPST, 0x02))
                            {

    CC17: A0 17 7B 53 50 53 54 0A 02 00                    // ..{SPST...

                                Store (One, 
    CC21: 70 01                                            // p.

Index (DerefOf (
    CC23: 88 83                                            // ..

Index (DEVY, 0x07)), One))
                            }


    CC25: 88 44 45 56 59 0A 07 00 01 00                    // .DEVY.....

                            If (And (SPST, 0x04))
                            {

    CC2F: A0 17 7B 53 50 53 54 0A 04 00                    // ..{SPST...

                                Store (One, 
    CC39: 70 01                                            // p.

Index (DerefOf (
    CC3B: 88 83                                            // ..

Index (DEVY, 0x08)), One))
                            }


    CC3D: 88 44 45 56 59 0A 08 00 01 00                    // .DEVY.....

                            If (And (SPST, 0x08))
                            {

    CC47: A0 17 7B 53 50 53 54 0A 08 00                    // ..{SPST...

                                Store (One, 
    CC51: 70 01                                            // p.

Index (DerefOf (
    CC53: 88 83                                            // ..

Index (DEVY, 0x09)), One))
                            }


    CC55: 88 44 45 56 59 0A 09 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP01.PXSX.PAHC ())
                            {

    CC5F: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 31 50 58  // .#^^/.PCI0RP01PX
    CC6F: 53 58 50 41 48 43                                // SXPAHC

                                Store (One, 
    CC75: 70 01                                            // p.

Index (DerefOf (
    CC77: 88 83                                            // ..

Index (DEVY, 0x1A)), One))
                            }


    CC79: 88 44 45 56 59 0A 1A 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP02.PXSX.PAHC ())
                            {

    CC83: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 32 50 58  // .#^^/.PCI0RP02PX
    CC93: 53 58 50 41 48 43                                // SXPAHC

                                Store (One, 
    CC99: 70 01                                            // p.

Index (DerefOf (
    CC9B: 88 83                                            // ..

Index (DEVY, 0x1B)), One))
                            }


    CC9D: 88 44 45 56 59 0A 1B 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP03.PXSX.PAHC ())
                            {

    CCA7: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 33 50 58  // .#^^/.PCI0RP03PX
    CCB7: 53 58 50 41 48 43                                // SXPAHC

                                Store (One, 
    CCBD: 70 01                                            // p.

Index (DerefOf (
    CCBF: 88 83                                            // ..

Index (DEVY, 0x1C)), One))
                            }


    CCC1: 88 44 45 56 59 0A 1C 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP04.PXSX.PAHC ())
                            {

    CCCB: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 34 50 58  // .#^^/.PCI0RP04PX
    CCDB: 53 58 50 41 48 43                                // SXPAHC

                                Store (One, 
    CCE1: 70 01                                            // p.

Index (DerefOf (
    CCE3: 88 83                                            // ..

Index (DEVY, 0x1D)), One))
                            }


    CCE5: 88 44 45 56 59 0A 1D 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP05.PXSX.PAHC ())
                            {

    CCEF: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 35 50 58  // .#^^/.PCI0RP05PX
    CCFF: 53 58 50 41 48 43                                // SXPAHC

                                Store (One, 
    CD05: 70 01                                            // p.

Index (DerefOf (
    CD07: 88 83                                            // ..

Index (DEVY, 0x1E)), One))
                            }


    CD09: 88 44 45 56 59 0A 1E 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP06.PXSX.PAHC ())
                            {

    CD13: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 36 50 58  // .#^^/.PCI0RP06PX
    CD23: 53 58 50 41 48 43                                // SXPAHC

                                Store (One, 
    CD29: 70 01                                            // p.

Index (DerefOf (
    CD2B: 88 83                                            // ..

Index (DEVY, 0x1F)), One))
                            }


    CD2D: 88 44 45 56 59 0A 1F 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP07.PXSX.PAHC ())
                            {

    CD37: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 37 50 58  // .#^^/.PCI0RP07PX
    CD47: 53 58 50 41 48 43                                // SXPAHC

                                Store (One, 
    CD4D: 70 01                                            // p.

Index (DerefOf (
    CD4F: 88 83                                            // ..

Index (DEVY, 0x20)), One))
                            }


    CD51: 88 44 45 56 59 0A 20 00 01 00                    // .DEVY. ...

                            If (^^PCI0.RP08.PXSX.PAHC ())
                            {

    CD5B: A0 23 5E 5E 2F 04 50 43 49 30 52 50 30 38 50 58  // .#^^/.PCI0RP08PX
    CD6B: 53 58 50 41 48 43                                // SXPAHC

                                Store (One, 
    CD71: 70 01                                            // p.

Index (DerefOf (
    CD73: 88 83                                            // ..

Index (DEVY, 0x21)), One))
                            }
                        }


    CD75: 88 44 45 56 59 0A 21 00 01 00                    // .DEVY.!...

                        If (LEqual (And (PEPC, 0x03), 0x02))
                        {

    CD7F: A0 4D 1E 93 7B 50 45 50 43 0A 03 00 0A 02        // .M..{PEPC.....

                            If (And (SPST, 0x0F))
                            {

    CD8D: A0 17 7B 53 50 53 54 0A 0F 00                    // ..{SPST...

                                Store (One, 
    CD97: 70 01                                            // p.

Index (DerefOf (
    CD99: 88 83                                            // ..

Index (DEVY, 0x05)), One))
                            }


    CD9B: 88 44 45 56 59 0A 05 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP01.PXSX.PAHC (), ^^PCI0.RP01.PXSX.PNVM ()))
                            {

    CDA5: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 31 50  // .8.^^/.PCI0RP01P
    CDB5: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
    CDC5: 50 30 31 50 58 53 58 50 4E 56 4D                 // P01PXSXPNVM

                                Store (One, 
    CDD0: 70 01                                            // p.

Index (DerefOf (
    CDD2: 88 83                                            // ..

Index (DEVY, 0x12)), One))
                            }


    CDD4: 88 44 45 56 59 0A 12 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP02.PXSX.PAHC (), ^^PCI0.RP02.PXSX.PNVM ()))
                            {

    CDDE: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 32 50  // .8.^^/.PCI0RP02P
    CDEE: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
    CDFE: 50 30 32 50 58 53 58 50 4E 56 4D                 // P02PXSXPNVM

                                Store (One, 
    CE09: 70 01                                            // p.

Index (DerefOf (
    CE0B: 88 83                                            // ..

Index (DEVY, 0x13)), One))
                            }


    CE0D: 88 44 45 56 59 0A 13 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP03.PXSX.PAHC (), ^^PCI0.RP03.PXSX.PNVM ()))
                            {

    CE17: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 33 50  // .8.^^/.PCI0RP03P
    CE27: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
    CE37: 50 30 33 50 58 53 58 50 4E 56 4D                 // P03PXSXPNVM

                                Store (One, 
    CE42: 70 01                                            // p.

Index (DerefOf (
    CE44: 88 83                                            // ..

Index (DEVY, 0x14)), One))
                            }


    CE46: 88 44 45 56 59 0A 14 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP04.PXSX.PAHC (), ^^PCI0.RP04.PXSX.PNVM ()))
                            {

    CE50: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 34 50  // .8.^^/.PCI0RP04P
    CE60: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
    CE70: 50 30 34 50 58 53 58 50 4E 56 4D                 // P04PXSXPNVM

                                Store (One, 
    CE7B: 70 01                                            // p.

Index (DerefOf (
    CE7D: 88 83                                            // ..

Index (DEVY, 0x15)), One))
                            }


    CE7F: 88 44 45 56 59 0A 15 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP05.PXSX.PAHC (), ^^PCI0.RP05.PXSX.PNVM ()))
                            {

    CE89: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 35 50  // .8.^^/.PCI0RP05P
    CE99: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
    CEA9: 50 30 35 50 58 53 58 50 4E 56 4D                 // P05PXSXPNVM

                                Store (One, 
    CEB4: 70 01                                            // p.

Index (DerefOf (
    CEB6: 88 83                                            // ..

Index (DEVY, 0x16)), One))
                            }


    CEB8: 88 44 45 56 59 0A 16 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP06.PXSX.PAHC (), ^^PCI0.RP06.PXSX.PNVM ()))
                            {

    CEC2: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 36 50  // .8.^^/.PCI0RP06P
    CED2: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
    CEE2: 50 30 36 50 58 53 58 50 4E 56 4D                 // P06PXSXPNVM

                                Store (One, 
    CEED: 70 01                                            // p.

Index (DerefOf (
    CEEF: 88 83                                            // ..

Index (DEVY, 0x17)), One))
                            }


    CEF1: 88 44 45 56 59 0A 17 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP07.PXSX.PAHC (), ^^PCI0.RP07.PXSX.PNVM ()))
                            {

    CEFB: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 37 50  // .8.^^/.PCI0RP07P
    CF0B: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
    CF1B: 50 30 37 50 58 53 58 50 4E 56 4D                 // P07PXSXPNVM

                                Store (One, 
    CF26: 70 01                                            // p.

Index (DerefOf (
    CF28: 88 83                                            // ..

Index (DEVY, 0x18)), One))
                            }


    CF2A: 88 44 45 56 59 0A 18 00 01 00                    // .DEVY.....

                            If (LOr (^^PCI0.RP08.PXSX.PAHC (), ^^PCI0.RP08.PXSX.PNVM ()))
                            {

    CF34: A0 38 91 5E 5E 2F 04 50 43 49 30 52 50 30 38 50  // .8.^^/.PCI0RP08P
    CF44: 58 53 58 50 41 48 43 5E 5E 2F 04 50 43 49 30 52  // XSXPAHC^^/.PCI0R
    CF54: 50 30 38 50 58 53 58 50 4E 56 4D                 // P08PXSXPNVM

                                Store (One, 
    CF5F: 70 01                                            // p.

Index (DerefOf (
    CF61: 88 83                                            // ..

Index (DEVY, 0x19)), One))
                            }
                        }


    CF63: 88 44 45 56 59 0A 19 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x04), Zero))
                        {

    CF6D: A0 19 93 7B 50 45 50 43 0A 04 00 00              // ...{PEPC....

                            Store (Zero, 
    CF79: 70 00                                            // p.

Index (DerefOf (
    CF7B: 88 83                                            // ..

Index (DEVY, 0x0A)), One))
                        }


    CF7D: 88 44 45 56 59 0A 0A 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x08), Zero))
                        {

    CF87: A0 19 93 7B 50 45 50 43 0A 08 00 00              // ...{PEPC....

                            Store (Zero, 
    CF93: 70 00                                            // p.

Index (DerefOf (
    CF95: 88 83                                            // ..

Index (DEVY, 0x0B)), One))
                        }


    CF97: 88 44 45 56 59 0A 0B 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x10), Zero))
                        {

    CFA1: A0 19 93 7B 50 45 50 43 0A 10 00 00              // ...{PEPC....

                            Store (Zero, 
    CFAD: 70 00                                            // p.

Index (DerefOf (
    CFAF: 88 83                                            // ..

Index (DEVY, 0x0C)), One))
                        }


    CFB1: 88 44 45 56 59 0A 0C 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x20), Zero))
                        {

    CFBB: A0 19 93 7B 50 45 50 43 0A 20 00 00              // ...{PEPC. ..

                            Store (Zero, 
    CFC7: 70 00                                            // p.

Index (DerefOf (
    CFC9: 88 83                                            // ..

Index (DEVY, 0x0D)), One))
                        }


    CFCB: 88 44 45 56 59 0A 0D 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x40), Zero))
                        {

    CFD5: A0 19 93 7B 50 45 50 43 0A 40 00 00              // ...{PEPC.@..

                            Store (Zero, 
    CFE1: 70 00                                            // p.

Index (DerefOf (
    CFE3: 88 83                                            // ..

Index (DEVY, 0x0E)), One))
                        }


    CFE5: 88 44 45 56 59 0A 0E 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x80), Zero))
                        {

    CFEF: A0 19 93 7B 50 45 50 43 0A 80 00 00              // ...{PEPC....

                            Store (Zero, 
    CFFB: 70 00                                            // p.

Index (DerefOf (
    CFFD: 88 83                                            // ..

Index (DEVY, 0x0F)), One))
                        }


    CFFF: 88 44 45 56 59 0A 0F 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x0100), Zero))
                        {

    D009: A0 1A 93 7B 50 45 50 43 0B 00 01 00 00           // ...{PEPC.....

                            Store (Zero, 
    D016: 70 00                                            // p.

Index (DerefOf (
    D018: 88 83                                            // ..

Index (DEVY, 0x10)), One))
                        }


    D01A: 88 44 45 56 59 0A 10 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x0200), Zero))
                        {

    D024: A0 1A 93 7B 50 45 50 43 0B 00 02 00 00           // ...{PEPC.....

                            Store (Zero, 
    D031: 70 00                                            // p.

Index (DerefOf (
    D033: 88 83                                            // ..

Index (DEVY, 0x11)), One))
                        }


    D035: 88 44 45 56 59 0A 11 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x1000), Zero))
                        {
                            Store (Zero, 
    D03F: A0 43 04 93 7B 50 45 50 43 0B 00 10 00 00 70 00  // .C..{PEPC.....p.

Index (DerefOf (
    D04F: 88 83                                            // ..

Index (DEVY, Zero)), One))
                            Store (Zero, 
    D051: 88 44 45 56 59 00 00 01 00 70 00                 // .DEVY....p.

Index (DerefOf (
    D05C: 88 83                                            // ..

Index (DEVY, One)), One))
                            Store (Zero, 
    D05E: 88 44 45 56 59 01 00 01 00 70 00                 // .DEVY....p.

Index (DerefOf (
    D069: 88 83                                            // ..

Index (DEVY, 0x02)), One))

    D06B: 88 44 45 56 59 0A 02 00 01 00                    // .DEVY.....

                            Store (Zero, 
    D075: 70 00                                            // p.

Index (DerefOf (
    D077: 88 83                                            // ..

Index (DEVY, 0x03)), One))
                        }


    D079: 88 44 45 56 59 0A 03 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x2000), Zero))
                        {

    D083: A0 1A 93 7B 50 45 50 43 0B 00 20 00 00           // ...{PEPC.. ..

                            Store (Zero, 
    D090: 70 00                                            // p.

Index (DerefOf (
    D092: 88 83                                            // ..

Index (DEVY, 0x04)), One))
                        }


    D094: 88 44 45 56 59 0A 04 00 01 00                    // .DEVY.....

                        If (
    D09E: A0 43 2B 92                                      // .C+.

LGreaterEqual (OSYS, 0x07DF))
                        {

    D0A2: 95 4F 53 59 53 0B DF 07                          // .OSYS...

                            If (^^PCI0.RP01.PXSX.WIST ())
                            {
                                Store (0x03, 
    D0AA: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 31 50  // .D.^^/.PCI0RP01P
    D0BA: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
    D0C4: 88 83                                            // ..

Index (DerefOf (
    D0C6: 88 83                                            // ..

Index (DerefOf (
    D0C8: 88 83                                            // ..

Index (DEVY, 0x12)), 
                                    0x02)), One)), One))
                                Store (Zero, 
    D0CA: 88 44 45 56 59 0A 12 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
    D0DA: 00                                               // .

Index (DerefOf (
    D0DB: 88 83                                            // ..

Index (DerefOf (
    D0DD: 88 83                                            // ..

Index (DerefOf (
    D0DF: 88 83                                            // ..

Index (DEVY, 0x12)), 
                                    0x02)), One)), 0x02))

    D0E1: 88 44 45 56 59 0A 12 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
    D0F1: 70 01                                            // p.

Index (DerefOf (
    D0F3: 88 83                                            // ..

Index (DEVY, 0x12)), One))
                            }


    D0F5: 88 44 45 56 59 0A 12 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP02.PXSX.WIST ())
                            {
                                Store (0x03, 
    D0FF: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 32 50  // .D.^^/.PCI0RP02P
    D10F: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
    D119: 88 83                                            // ..

Index (DerefOf (
    D11B: 88 83                                            // ..

Index (DerefOf (
    D11D: 88 83                                            // ..

Index (DEVY, 0x13)), 
                                    0x02)), One)), One))
                                Store (Zero, 
    D11F: 88 44 45 56 59 0A 13 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
    D12F: 00                                               // .

Index (DerefOf (
    D130: 88 83                                            // ..

Index (DerefOf (
    D132: 88 83                                            // ..

Index (DerefOf (
    D134: 88 83                                            // ..

Index (DEVY, 0x13)), 
                                    0x02)), One)), 0x02))

    D136: 88 44 45 56 59 0A 13 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
    D146: 70 01                                            // p.

Index (DerefOf (
    D148: 88 83                                            // ..

Index (DEVY, 0x13)), One))
                            }


    D14A: 88 44 45 56 59 0A 13 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP03.PXSX.WIST ())
                            {
                                Store (0x03, 
    D154: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 33 50  // .D.^^/.PCI0RP03P
    D164: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
    D16E: 88 83                                            // ..

Index (DerefOf (
    D170: 88 83                                            // ..

Index (DerefOf (
    D172: 88 83                                            // ..

Index (DEVY, 0x14)), 
                                    0x02)), One)), One))
                                Store (Zero, 
    D174: 88 44 45 56 59 0A 14 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
    D184: 00                                               // .

Index (DerefOf (
    D185: 88 83                                            // ..

Index (DerefOf (
    D187: 88 83                                            // ..

Index (DerefOf (
    D189: 88 83                                            // ..

Index (DEVY, 0x14)), 
                                    0x02)), One)), 0x02))

    D18B: 88 44 45 56 59 0A 14 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
    D19B: 70 01                                            // p.

Index (DerefOf (
    D19D: 88 83                                            // ..

Index (DEVY, 0x14)), One))
                            }


    D19F: 88 44 45 56 59 0A 14 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP04.PXSX.WIST ())
                            {
                                Store (0x03, 
    D1A9: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 34 50  // .D.^^/.PCI0RP04P
    D1B9: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
    D1C3: 88 83                                            // ..

Index (DerefOf (
    D1C5: 88 83                                            // ..

Index (DerefOf (
    D1C7: 88 83                                            // ..

Index (DEVY, 0x15)), 
                                    0x02)), One)), One))
                                Store (Zero, 
    D1C9: 88 44 45 56 59 0A 15 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
    D1D9: 00                                               // .

Index (DerefOf (
    D1DA: 88 83                                            // ..

Index (DerefOf (
    D1DC: 88 83                                            // ..

Index (DerefOf (
    D1DE: 88 83                                            // ..

Index (DEVY, 0x15)), 
                                    0x02)), One)), 0x02))

    D1E0: 88 44 45 56 59 0A 15 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
    D1F0: 70 01                                            // p.

Index (DerefOf (
    D1F2: 88 83                                            // ..

Index (DEVY, 0x15)), One))
                            }


    D1F4: 88 44 45 56 59 0A 15 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP05.PXSX.WIST ())
                            {
                                Store (0x03, 
    D1FE: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 35 50  // .D.^^/.PCI0RP05P
    D20E: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
    D218: 88 83                                            // ..

Index (DerefOf (
    D21A: 88 83                                            // ..

Index (DerefOf (
    D21C: 88 83                                            // ..

Index (DEVY, 0x16)), 
                                    0x02)), One)), One))
                                Store (Zero, 
    D21E: 88 44 45 56 59 0A 16 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
    D22E: 00                                               // .

Index (DerefOf (
    D22F: 88 83                                            // ..

Index (DerefOf (
    D231: 88 83                                            // ..

Index (DerefOf (
    D233: 88 83                                            // ..

Index (DEVY, 0x16)), 
                                    0x02)), One)), 0x02))

    D235: 88 44 45 56 59 0A 16 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
    D245: 70 01                                            // p.

Index (DerefOf (
    D247: 88 83                                            // ..

Index (DEVY, 0x16)), One))
                            }


    D249: 88 44 45 56 59 0A 16 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP06.PXSX.WIST ())
                            {
                                Store (0x03, 
    D253: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 36 50  // .D.^^/.PCI0RP06P
    D263: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
    D26D: 88 83                                            // ..

Index (DerefOf (
    D26F: 88 83                                            // ..

Index (DerefOf (
    D271: 88 83                                            // ..

Index (DEVY, 0x17)), 
                                    0x02)), One)), One))
                                Store (Zero, 
    D273: 88 44 45 56 59 0A 17 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
    D283: 00                                               // .

Index (DerefOf (
    D284: 88 83                                            // ..

Index (DerefOf (
    D286: 88 83                                            // ..

Index (DerefOf (
    D288: 88 83                                            // ..

Index (DEVY, 0x17)), 
                                    0x02)), One)), 0x02))

    D28A: 88 44 45 56 59 0A 17 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
    D29A: 70 01                                            // p.

Index (DerefOf (
    D29C: 88 83                                            // ..

Index (DEVY, 0x17)), One))
                            }


    D29E: 88 44 45 56 59 0A 17 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP07.PXSX.WIST ())
                            {
                                Store (0x03, 
    D2A8: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 37 50  // .D.^^/.PCI0RP07P
    D2B8: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
    D2C2: 88 83                                            // ..

Index (DerefOf (
    D2C4: 88 83                                            // ..

Index (DerefOf (
    D2C6: 88 83                                            // ..

Index (DEVY, 0x18)), 
                                    0x02)), One)), One))
                                Store (Zero, 
    D2C8: 88 44 45 56 59 0A 18 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
    D2D8: 00                                               // .

Index (DerefOf (
    D2D9: 88 83                                            // ..

Index (DerefOf (
    D2DB: 88 83                                            // ..

Index (DerefOf (
    D2DD: 88 83                                            // ..

Index (DEVY, 0x18)), 
                                    0x02)), One)), 0x02))

    D2DF: 88 44 45 56 59 0A 18 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
    D2EF: 70 01                                            // p.

Index (DerefOf (
    D2F1: 88 83                                            // ..

Index (DEVY, 0x18)), One))
                            }


    D2F3: 88 44 45 56 59 0A 18 00 01 00                    // .DEVY.....

                            If (^^PCI0.RP08.PXSX.WIST ())
                            {
                                Store (0x03, 
    D2FD: A0 44 05 5E 5E 2F 04 50 43 49 30 52 50 30 38 50  // .D.^^/.PCI0RP08P
    D30D: 58 53 58 57 49 53 54 70 0A 03                    // XSXWISTp..

Index (DerefOf (
    D317: 88 83                                            // ..

Index (DerefOf (
    D319: 88 83                                            // ..

Index (DerefOf (
    D31B: 88 83                                            // ..

Index (DEVY, 0x19)), 
                                    0x02)), One)), One))
                                Store (Zero, 
    D31D: 88 44 45 56 59 0A 19 00 0A 02 00 01 00 01 00 70  // .DEVY..........p
    D32D: 00                                               // .

Index (DerefOf (
    D32E: 88 83                                            // ..

Index (DerefOf (
    D330: 88 83                                            // ..

Index (DerefOf (
    D332: 88 83                                            // ..

Index (DEVY, 0x19)), 
                                    0x02)), One)), 0x02))

    D334: 88 44 45 56 59 0A 19 00 0A 02 00 01 00 0A 02 00  // .DEVY...........

                                Store (One, 
    D344: 70 01                                            // p.

Index (DerefOf (
    D346: 88 83                                            // ..

Index (DEVY, 0x19)), One))
                            }
                        }


    D348: 88 44 45 56 59 0A 19 00 01 00                    // .DEVY.....

                        Return (DEVY) /* \_SB_.PEPD.DEVY */
                    }


    D352: A4 44 45 56 59                                   // .DEVY

                    If (LEqual (Arg2, 0x02))
                    {

    D357: A0 0A 93 6A 0A 02                                // ...j..

                        Return (BCCD) /* \_SB_.PEPD.BCCD */
                    }
                }


    D35D: A4 42 43 43 44                                   // .BCCD

                Return (One)
            }
        }
    }


    D362: A4 01                                            // ..

    Name (BUFN, Zero)

    D364: 08 42 55 46 4E 00                                // .BUFN.

    Name (MBUF, 
    D36A: 08 4D 42 55 46                                   // .MBUF

Buffer (0x1000){})

    D36F: 11 04 0B 00 10                                   // .....

    OperationRegion (MDBG, SystemMemory, 0x96FB5018, 0x00001004)

    D374: 5B 80 4D 44 42 47 00 0C 18 50 FB 96 0C 04 10 00  // [.MDBG...P......
    D384: 00                                               // .

    Field (MDBG, AnyAcc, Lock, Preserve)
    {
        MDG0,   32768
    }


    D385: 5B 81 0D 4D 44 42 47 10 4D 44 47 30 80 00 08     // [..MDBG.MDG0...

    Method (DB2H, 1, Serialized)
    {

    D394: 14 24 44 42 32 48 09                             // .$DB2H.

        If (MDEN)
        {
            SHOW (Arg0)
            MDGC (0x20)

    D39B: A0 19 4D 44 45 4E 53 48 4F 57 68 4D 44 47 43 0A  // ..MDENSHOWhMDGC.
    D3AB: 20                                               //  

            Store (MBUF, MDG0) /* \MDG0 */
        }

    D3AC: 70 4D 42 55 46 4D 44 47 30                       // pMBUFMDG0

        Else
        {

    D3B5: A1 03                                            // ..

            Return (Zero)
        }
    }


    D3B7: A4 00                                            // ..

    Method (DW2H, 1, Serialized)
    {
        Store (Arg0, Local0)
        ShiftRight (Arg0, 0x08, Local1)
        And (Local0, 0xFF, Local0)
        And (Local1, 0xFF, Local1)
        DB2H (Local1)
        Decrement (BUFN)
        DB2H (Local0)
    }


    D3B9: 14 27 44 57 32 48 09 70 68 60 7A 68 0A 08 61 7B  // .'DW2H.ph`zh..a{
    D3C9: 60 0A FF 60 7B 61 0A FF 61 44 42 32 48 61 76 42  // `..`{a..aDB2HavB
    D3D9: 55 46 4E 44 42 32 48 60                          // UFNDB2H`

    Method (DD2H, 1, Serialized)
    {
        Store (Arg0, Local0)
        ShiftRight (Arg0, 0x10, Local1)
        And (Local0, 0xFFFF, Local0)
        And (Local1, 0xFFFF, Local1)
        DW2H (Local1)
        Decrement (BUFN)
        DW2H (Local0)
    }


    D3E1: 14 29 44 44 32 48 09 70 68 60 7A 68 0A 10 61 7B  // .)DD2H.ph`zh..a{
    D3F1: 60 0B FF FF 60 7B 61 0B FF FF 61 44 57 32 48 61  // `...`{a...aDW2Ha
    D401: 76 42 55 46 4E 44 57 32 48 60                    // vBUFNDW2H`

    Method (MBGS, 1, Serialized)
    {

    D40B: 14 47 04 4D 42 47 53 09                          // .G.MBGS.

        If (MDEN)
        {
            Store (SizeOf (Arg0), Local0)

    D413: A0 3B 4D 44 45 4E 70 87 68 60                    // .;MDENp.h`

            Name (BUFS, 
    D41D: 08 42 55 46 53                                   // .BUFS

Buffer (Local0){})
            Store (Arg0, BUFS) /* \MBGS.BUFS */
            MDGC (0x20)

    D422: 11 02 60 70 68 42 55 46 53 4D 44 47 43 0A 20     // ..`phBUFSMDGC. 

            While (Local0)
            {
                MDGC (
    D431: A2 14 60 4D 44 47 43                             // ..`MDGC

DerefOf (
    D438: 83                                               // .

Index (BUFS, Subtract (SizeOf (Arg0), Local0))))

    D439: 88 42 55 46 53 74 87 68 60 00 00                 // .BUFSt.h`..

                Decrement (Local0)
            }


    D444: 76 60                                            // v`

            Store (MBUF, MDG0) /* \MDG0 */
        }

    D446: 70 4D 42 55 46 4D 44 47 30                       // pMBUFMDG0

        Else
        {

    D44F: A1 03                                            // ..

            Return (Zero)
        }
    }


    D451: A4 00                                            // ..

    Method (ADBG, 1, Serialized)
    {

    D453: 14 47 04 41 44 42 47 09                          // .G.ADBG.

        If (MDEN)
        {
            Store (SizeOf (Arg0), Local0)

    D45B: A0 3B 4D 44 45 4E 70 87 68 60                    // .;MDENp.h`

            Name (BUFS, 
    D465: 08 42 55 46 53                                   // .BUFS

Buffer (Local0){})
            Store (Arg0, BUFS) /* \ADBG.BUFS */
            MDGC (0x20)

    D46A: 11 02 60 70 68 42 55 46 53 4D 44 47 43 0A 20     // ..`phBUFSMDGC. 

            While (Local0)
            {
                MDGC (
    D479: A2 14 60 4D 44 47 43                             // ..`MDGC

DerefOf (
    D480: 83                                               // .

Index (BUFS, Subtract (SizeOf (Arg0), Local0))))

    D481: 88 42 55 46 53 74 87 68 60 00 00                 // .BUFSt.h`..

                Decrement (Local0)
            }


    D48C: 76 60                                            // v`

            Store (MBUF, MDG0) /* \MDG0 */
        }

    D48E: 70 4D 42 55 46 4D 44 47 30                       // pMBUFMDG0

        Else
        {

    D497: A1 03                                            // ..

            Return (Zero)
        }
    }


    D499: A4 00                                            // ..

    Method (SHOW, 1, Serialized)
    {
        MDGC (NTOC (
    D49B: 14 1C 53 48 4F 57 09 4D 44 47 43 4E 54 4F 43     // ..SHOW.MDGCNTOC

ShiftRight (Arg0, 0x04)))
        MDGC (NTOC (Arg0))
    }


    D4AA: 7A 68 0A 04 00 4D 44 47 43 4E 54 4F 43 68        // zh...MDGCNTOCh

    Method (LINE, 0, Serialized)
    {
        Store (BUFN, Local0)
        And (Local0, 0x0F, Local0)

    D4B8: 14 20 4C 49 4E 45 08 70 42 55 46 4E 60 7B 60 0A  // . LINE.pBUFN`{`.
    D4C8: 0F 60                                            // .`

        While (Local0)
        {
            MDGC (Zero)
            Increment (Local0)

    D4CA: A2 0E 60 4D 44 47 43 00 75 60                    // ..`MDGC.u`

            And (Local0, 0x0F, Local0)
        }
    }


    D4D4: 7B 60 0A 0F 60                                   // {`..`

    Method (MDGC, 1, Serialized)
    {
        Store (Arg0, 
    D4D9: 14 38 4D 44 47 43 09 70 68                       // .8MDGC.ph

Index (MBUF, BUFN))
        Add (BUFN, One, BUFN) /* \BUFN */

    D4E2: 88 4D 42 55 46 42 55 46 4E 00 72 42 55 46 4E 01  // .MBUFBUFN.rBUFN.
    D4F2: 42 55 46 4E                                      // BUFN

        If (LGreater (BUFN, 0x0FFF))
        {
            And (BUFN, 0x0FFF, BUFN) /* \BUFN */
            UP_L (0x0F)
        }
    }


    D4F6: A0 1B 94 42 55 46 4E 0B FF 0F 7B 42 55 46 4E 0B  // ...BUFN...{BUFN.
    D506: FF 0F 42 55 46 4E 55 50 5F 4C 0A 0F              // ..BUFNUP_L..

    Method (UP_L, 1, Serialized)
    {
        Store (Arg0, Local2)
        ShiftLeft (Local2, 0x04, Local2)
        MOVE (Local2)
        Subtract (0x1000, Local2, Local3)

    D512: 14 29 55 50 5F 4C 09 70 68 62 79 62 0A 04 62 4D  // .)UP_L.phbyb..bM
    D522: 4F 56 45 62 74 0B 00 10 62 63                    // OVEbt...bc

        While (Local2)
        {
            Store (Zero, 
    D52C: A2 0F 62 70 00                                   // ..bp.

Index (MBUF, Local3))
            Increment (Local3)

    D531: 88 4D 42 55 46 63 00 75 63                       // .MBUFc.uc

            Decrement (Local2)
        }
    }


    D53A: 76 62                                            // vb

    Method (MOVE, 1, Serialized)
    {
        Store (Arg0, Local4)
        Store (Zero, BUFN) /* \BUFN */
        Subtract (0x1000, Local4, Local5)

    D53C: 14 34 4D 4F 56 45 09 70 68 64 70 00 42 55 46 4E  // .4MOVE.phdp.BUFN
    D54C: 74 0B 00 10 64 65                                // t...de

        While (Local5)
        {
            Decrement (Local5)
            Store (DerefOf (
    D552: A2 1E 65 76 65 70 83                             // ..evep.

Index (MBUF, Local4)), 
    D559: 88 4D 42 55 46 64 00                             // .MBUFd.

Index (MBUF, BUFN))
            Increment (BUFN)

    D560: 88 4D 42 55 46 42 55 46 4E 00 75 42 55 46 4E     // .MBUFBUFN.uBUFN

            Increment (Local4)
        }
    }


    D56F: 75 64                                            // ud

    Method (NTOC, 1, Serialized)
    {
        And (Arg0, 0x0F, Local0)

    D571: 14 1F 4E 54 4F 43 09 7B 68 0A 0F 60              // ..NTOC.{h..`

        If (LLess (Local0, 0x0A))
        {

    D57D: A0 0A 95 60 0A 0A                                // ...`..

            Add (Local0, 0x30, Local0)
        }

    D583: 72 60 0A 30 60                                   // r`.0`

        Else
        {

    D588: A1 06                                            // ..

            Add (Local0, 0x37, Local0)
        }


    D58A: 72 60 0A 37 60                                   // r`.7`

        Return (Local0)
    }


    D58F: A4 60                                            // .`

    If (
    D591: A0 07                                            // ..

LEqual (BID, One)){}

    D593: 93 42 49 44 5F 01                                // .BID_.

    Scope (_SB.PCI0.RP04.PXSX)
    {

    D599: 10 43 41 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .CA/._SB_PCI0RP0
    D5A9: 34 50 58 53 58                                   // 4PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

    D5AE: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


    D5B8: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

    D5C5: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


    D5D0: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
    D5E0: 52 10                                            // R.

        Name (SPLX, 
    D5E2: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

    D5E7: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    D5EB: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    D5FB: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    D5FD: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    D60D: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    D60F: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    D61F: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {

    D621: 14 40 19 53 50 4C 43 08                          // .@.SPLC.


    D629: 08 5F 54 5F 30 00                                // ._T_0.

            Switch (VDID)
            {

    D62F: A2 44 0E 01 70 56 44 49 44 5F 54 5F 30           // .D..pVDID_T_0

                Case (0x093C8086)
                {

    D63C: A0 0C 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                    Break
                }

    D648: A5                                               // .

                Case
    D649: A1 49 0C                                         // .I.

 (0x095A8086)
                {

    D64C: A0 0C 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                    Break
                }

    D658: A5                                               // .

                Case
    D659: A1 49 0B                                         // .I.

 (0x095B8086)
                {

    D65C: A0 0C 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                    Break
                }

    D668: A5                                               // .

                Case
    D669: A1 49 0A                                         // .I.

 (0x31658086)
                {

    D66C: A0 0C 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                    Break
                }

    D678: A5                                               // .

                Case
    D679: A1 49 09                                         // .I.

 (0x31668086)
                {

    D67C: A0 0C 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                    Break
                }

    D688: A5                                               // .

                Case
    D689: A1 49 08                                         // .I.

 (0x08B18086)
                {

    D68C: A0 0C 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                    Break
                }

    D698: A5                                               // .

                Case
    D699: A1 49 07                                         // .I.

 (0x08B28086)
                {

    D69C: A0 0C 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                    Break
                }

    D6A8: A5                                               // .

                Case
    D6A9: A1 49 06                                         // .I.

 (0x08B38086)
                {

    D6AC: A0 0C 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                    Break
                }

    D6B8: A5                                               // .

                Case
    D6B9: A1 49 05                                         // .I.

 (0x08B48086)
                {

    D6BC: A0 0C 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                    Break
                }

    D6C8: A5                                               // .

                Case
    D6C9: A1 49 04                                         // .I.

 (0x24F38086)
                {

    D6CC: A0 0C 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                    Break
                }

    D6D8: A5                                               // .

                Case
    D6D9: A1 39                                            // .9

 (0x24F48086)
                {

    D6DB: A0 0C 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                    Break
                }

    D6E7: A5                                               // .

                Case
    D6E8: A1 2A                                            // .*

 (0x24F58086)
                {

    D6EA: A0 0C 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                    Break
                }

    D6F6: A5                                               // .

                Case
    D6F7: A1 1B                                            // ..

 (0x24F68086)
                {

    D6F9: A0 0C 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                    Break
                }

    D705: A5                                               // .

                Default
                {

    D706: A1 0C                                            // ..

                    Return (
    D708: A4                                               // .

Package (0x02)
                    {
                        Zero, 

    D709: 12 09 02 00                                      // ....

                        Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        }
                    })
                }


    D70D: 12 05 03 00 00 00                                // ......

            }

            Store (DOM1, 
    D713: A5 70 44 4F 4D 31                                // .pDOM1

Index (DerefOf (
    D719: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
    D71B: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
    D729: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
    D72B: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
    D739: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
    D73B: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
    D74A: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
    D74C: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
    D75B: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
    D75D: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
    D76C: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
    D76E: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
    D77E: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
    D780: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
    D78F: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
    D791: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
    D7A0: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

    D7A2: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP04.PXSX.SPLX */
        }


    D7AD: A4 53 50 4C 58                                   // .SPLX

        Name (WANX, 
    D7B2: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

    D7B7: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    D7BB: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    D7CB: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    D7CD: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    D7DD: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
    D7DF: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
    D7E9: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
    D7EB: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
    D7F9: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
    D7FB: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
    D809: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
    D80B: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
    D817: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
    D819: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
    D828: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
    D82A: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
    D839: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

    D83B: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP04.PXSX.WANX */
        }


    D846: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
    D84B: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

    D850: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


    D854: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

    D85F: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
    D86A: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
    D877: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
    D879: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
    D887: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
    D889: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
    D897: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
    D899: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
    D8A8: 88 83                                            // ..

Index (WRDX, 0x02)), One))

    D8AA: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP04.PXSX.WRDX */
        }


    D8B4: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

    D8B9: 14 43 0F 57 49 53 54 08                          // .C.WIST.


    D8C1: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

    D8C7: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

    D8D1: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

    D8DE: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

    D8EA: A4 01                                            // ..

                    Case
    D8EC: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

    D8EF: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

    D8FB: A4 01                                            // ..

                    Case
    D8FD: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

    D900: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

    D90C: A4 01                                            // ..

                    Case
    D90E: A1 49 09                                         // .I.

 (0x31668086)
                    {

    D911: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

    D91D: A4 01                                            // ..

                    Case
    D91F: A1 48 08                                         // .H.

 (0x08B18086)
                    {

    D922: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

    D92E: A4 01                                            // ..

                    Case
    D930: A1 47 07                                         // .G.

 (0x08B28086)
                    {

    D933: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

    D93F: A4 01                                            // ..

                    Case
    D941: A1 46 06                                         // .F.

 (0x08B38086)
                    {

    D944: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

    D950: A4 01                                            // ..

                    Case
    D952: A1 45 05                                         // .E.

 (0x08B48086)
                    {

    D955: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

    D961: A4 01                                            // ..

                    Case
    D963: A1 44 04                                         // .D.

 (0x24F38086)
                    {

    D966: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

    D972: A4 01                                            // ..

                    Case
    D974: A1 33                                            // .3

 (0x24F48086)
                    {

    D976: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

    D982: A4 01                                            // ..

                    Case
    D984: A1 23                                            // .#

 (0x24F58086)
                    {

    D986: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

    D992: A4 01                                            // ..

                    Case
    D994: A1 13                                            // ..

 (0x24F68086)
                    {

    D996: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

    D9A2: A4 01                                            // ..

                    Default
                    {

    D9A4: A1 03                                            // ..

                        Return (Zero)
                    }


    D9A6: A4 00                                            // ..

                }
            }

    D9A8: A5                                               // .

            Else
            {

    D9A9: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


    D9AB: A4 00                                            // ..

    Scope (_SB.PCI0.RP01.PXSX)
    {

    D9AD: 10 43 41 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .CA/._SB_PCI0RP0
    D9BD: 31 50 58 53 58                                   // 1PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

    D9C2: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


    D9CC: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

    D9D9: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


    D9E4: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
    D9F4: 52 10                                            // R.

        Name (SPLX, 
    D9F6: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

    D9FB: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    D9FF: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    DA0F: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    DA11: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    DA21: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    DA23: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    DA33: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {

    DA35: 14 40 19 53 50 4C 43 08                          // .@.SPLC.


    DA3D: 08 5F 54 5F 30 00                                // ._T_0.

            Switch (VDID)
            {

    DA43: A2 44 0E 01 70 56 44 49 44 5F 54 5F 30           // .D..pVDID_T_0

                Case (0x093C8086)
                {

    DA50: A0 0C 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                    Break
                }

    DA5C: A5                                               // .

                Case
    DA5D: A1 49 0C                                         // .I.

 (0x095A8086)
                {

    DA60: A0 0C 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                    Break
                }

    DA6C: A5                                               // .

                Case
    DA6D: A1 49 0B                                         // .I.

 (0x095B8086)
                {

    DA70: A0 0C 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                    Break
                }

    DA7C: A5                                               // .

                Case
    DA7D: A1 49 0A                                         // .I.

 (0x31658086)
                {

    DA80: A0 0C 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                    Break
                }

    DA8C: A5                                               // .

                Case
    DA8D: A1 49 09                                         // .I.

 (0x31668086)
                {

    DA90: A0 0C 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                    Break
                }

    DA9C: A5                                               // .

                Case
    DA9D: A1 49 08                                         // .I.

 (0x08B18086)
                {

    DAA0: A0 0C 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                    Break
                }

    DAAC: A5                                               // .

                Case
    DAAD: A1 49 07                                         // .I.

 (0x08B28086)
                {

    DAB0: A0 0C 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                    Break
                }

    DABC: A5                                               // .

                Case
    DABD: A1 49 06                                         // .I.

 (0x08B38086)
                {

    DAC0: A0 0C 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                    Break
                }

    DACC: A5                                               // .

                Case
    DACD: A1 49 05                                         // .I.

 (0x08B48086)
                {

    DAD0: A0 0C 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                    Break
                }

    DADC: A5                                               // .

                Case
    DADD: A1 49 04                                         // .I.

 (0x24F38086)
                {

    DAE0: A0 0C 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                    Break
                }

    DAEC: A5                                               // .

                Case
    DAED: A1 39                                            // .9

 (0x24F48086)
                {

    DAEF: A0 0C 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                    Break
                }

    DAFB: A5                                               // .

                Case
    DAFC: A1 2A                                            // .*

 (0x24F58086)
                {

    DAFE: A0 0C 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                    Break
                }

    DB0A: A5                                               // .

                Case
    DB0B: A1 1B                                            // ..

 (0x24F68086)
                {

    DB0D: A0 0C 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                    Break
                }

    DB19: A5                                               // .

                Default
                {

    DB1A: A1 0C                                            // ..

                    Return (
    DB1C: A4                                               // .

Package (0x02)
                    {
                        Zero, 

    DB1D: 12 09 02 00                                      // ....

                        Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        }
                    })
                }


    DB21: 12 05 03 00 00 00                                // ......

            }

            Store (DOM1, 
    DB27: A5 70 44 4F 4D 31                                // .pDOM1

Index (DerefOf (
    DB2D: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
    DB2F: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
    DB3D: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
    DB3F: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
    DB4D: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
    DB4F: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
    DB5E: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
    DB60: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
    DB6F: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
    DB71: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
    DB80: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
    DB82: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
    DB92: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
    DB94: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
    DBA3: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
    DBA5: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
    DBB4: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

    DBB6: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP01.PXSX.SPLX */
        }


    DBC1: A4 53 50 4C 58                                   // .SPLX

        Name (WANX, 
    DBC6: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

    DBCB: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    DBCF: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    DBDF: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    DBE1: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    DBF1: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
    DBF3: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
    DBFD: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
    DBFF: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
    DC0D: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
    DC0F: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
    DC1D: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
    DC1F: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
    DC2B: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
    DC2D: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
    DC3C: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
    DC3E: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
    DC4D: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

    DC4F: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP01.PXSX.WANX */
        }


    DC5A: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
    DC5F: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

    DC64: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


    DC68: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

    DC73: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
    DC7E: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
    DC8B: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
    DC8D: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
    DC9B: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
    DC9D: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
    DCAB: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
    DCAD: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
    DCBC: 88 83                                            // ..

Index (WRDX, 0x02)), One))

    DCBE: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP01.PXSX.WRDX */
        }


    DCC8: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

    DCCD: 14 43 0F 57 49 53 54 08                          // .C.WIST.


    DCD5: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

    DCDB: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

    DCE5: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

    DCF2: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

    DCFE: A4 01                                            // ..

                    Case
    DD00: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

    DD03: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

    DD0F: A4 01                                            // ..

                    Case
    DD11: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

    DD14: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

    DD20: A4 01                                            // ..

                    Case
    DD22: A1 49 09                                         // .I.

 (0x31668086)
                    {

    DD25: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

    DD31: A4 01                                            // ..

                    Case
    DD33: A1 48 08                                         // .H.

 (0x08B18086)
                    {

    DD36: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

    DD42: A4 01                                            // ..

                    Case
    DD44: A1 47 07                                         // .G.

 (0x08B28086)
                    {

    DD47: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

    DD53: A4 01                                            // ..

                    Case
    DD55: A1 46 06                                         // .F.

 (0x08B38086)
                    {

    DD58: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

    DD64: A4 01                                            // ..

                    Case
    DD66: A1 45 05                                         // .E.

 (0x08B48086)
                    {

    DD69: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

    DD75: A4 01                                            // ..

                    Case
    DD77: A1 44 04                                         // .D.

 (0x24F38086)
                    {

    DD7A: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

    DD86: A4 01                                            // ..

                    Case
    DD88: A1 33                                            // .3

 (0x24F48086)
                    {

    DD8A: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

    DD96: A4 01                                            // ..

                    Case
    DD98: A1 23                                            // .#

 (0x24F58086)
                    {

    DD9A: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

    DDA6: A4 01                                            // ..

                    Case
    DDA8: A1 13                                            // ..

 (0x24F68086)
                    {

    DDAA: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

    DDB6: A4 01                                            // ..

                    Default
                    {

    DDB8: A1 03                                            // ..

                        Return (Zero)
                    }


    DDBA: A4 00                                            // ..

                }
            }

    DDBC: A5                                               // .

            Else
            {

    DDBD: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


    DDBF: A4 00                                            // ..

    Scope (_SB.PCI0.RP02.PXSX)
    {

    DDC1: 10 43 41 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .CA/._SB_PCI0RP0
    DDD1: 32 50 58 53 58                                   // 2PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

    DDD6: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


    DDE0: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

    DDED: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


    DDF8: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
    DE08: 52 10                                            // R.

        Name (SPLX, 
    DE0A: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

    DE0F: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    DE13: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    DE23: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    DE25: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    DE35: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    DE37: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    DE47: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {

    DE49: 14 40 19 53 50 4C 43 08                          // .@.SPLC.


    DE51: 08 5F 54 5F 30 00                                // ._T_0.

            Switch (VDID)
            {

    DE57: A2 44 0E 01 70 56 44 49 44 5F 54 5F 30           // .D..pVDID_T_0

                Case (0x093C8086)
                {

    DE64: A0 0C 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                    Break
                }

    DE70: A5                                               // .

                Case
    DE71: A1 49 0C                                         // .I.

 (0x095A8086)
                {

    DE74: A0 0C 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                    Break
                }

    DE80: A5                                               // .

                Case
    DE81: A1 49 0B                                         // .I.

 (0x095B8086)
                {

    DE84: A0 0C 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                    Break
                }

    DE90: A5                                               // .

                Case
    DE91: A1 49 0A                                         // .I.

 (0x31658086)
                {

    DE94: A0 0C 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                    Break
                }

    DEA0: A5                                               // .

                Case
    DEA1: A1 49 09                                         // .I.

 (0x31668086)
                {

    DEA4: A0 0C 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                    Break
                }

    DEB0: A5                                               // .

                Case
    DEB1: A1 49 08                                         // .I.

 (0x08B18086)
                {

    DEB4: A0 0C 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                    Break
                }

    DEC0: A5                                               // .

                Case
    DEC1: A1 49 07                                         // .I.

 (0x08B28086)
                {

    DEC4: A0 0C 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                    Break
                }

    DED0: A5                                               // .

                Case
    DED1: A1 49 06                                         // .I.

 (0x08B38086)
                {

    DED4: A0 0C 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                    Break
                }

    DEE0: A5                                               // .

                Case
    DEE1: A1 49 05                                         // .I.

 (0x08B48086)
                {

    DEE4: A0 0C 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                    Break
                }

    DEF0: A5                                               // .

                Case
    DEF1: A1 49 04                                         // .I.

 (0x24F38086)
                {

    DEF4: A0 0C 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                    Break
                }

    DF00: A5                                               // .

                Case
    DF01: A1 39                                            // .9

 (0x24F48086)
                {

    DF03: A0 0C 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                    Break
                }

    DF0F: A5                                               // .

                Case
    DF10: A1 2A                                            // .*

 (0x24F58086)
                {

    DF12: A0 0C 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                    Break
                }

    DF1E: A5                                               // .

                Case
    DF1F: A1 1B                                            // ..

 (0x24F68086)
                {

    DF21: A0 0C 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                    Break
                }

    DF2D: A5                                               // .

                Default
                {

    DF2E: A1 0C                                            // ..

                    Return (
    DF30: A4                                               // .

Package (0x02)
                    {
                        Zero, 

    DF31: 12 09 02 00                                      // ....

                        Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        }
                    })
                }


    DF35: 12 05 03 00 00 00                                // ......

            }

            Store (DOM1, 
    DF3B: A5 70 44 4F 4D 31                                // .pDOM1

Index (DerefOf (
    DF41: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
    DF43: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
    DF51: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
    DF53: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
    DF61: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
    DF63: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
    DF72: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
    DF74: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
    DF83: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
    DF85: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
    DF94: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
    DF96: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
    DFA6: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
    DFA8: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
    DFB7: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
    DFB9: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
    DFC8: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

    DFCA: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP02.PXSX.SPLX */
        }


    DFD5: A4 53 50 4C 58                                   // .SPLX

        Name (WANX, 
    DFDA: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

    DFDF: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    DFE3: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    DFF3: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    DFF5: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    E005: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
    E007: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
    E011: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
    E013: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
    E021: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
    E023: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
    E031: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
    E033: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
    E03F: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
    E041: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
    E050: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
    E052: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
    E061: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

    E063: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP02.PXSX.WANX */
        }


    E06E: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
    E073: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

    E078: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


    E07C: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

    E087: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
    E092: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
    E09F: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
    E0A1: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
    E0AF: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
    E0B1: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
    E0BF: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
    E0C1: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
    E0D0: 88 83                                            // ..

Index (WRDX, 0x02)), One))

    E0D2: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP02.PXSX.WRDX */
        }


    E0DC: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

    E0E1: 14 43 0F 57 49 53 54 08                          // .C.WIST.


    E0E9: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

    E0EF: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

    E0F9: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

    E106: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

    E112: A4 01                                            // ..

                    Case
    E114: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

    E117: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

    E123: A4 01                                            // ..

                    Case
    E125: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

    E128: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

    E134: A4 01                                            // ..

                    Case
    E136: A1 49 09                                         // .I.

 (0x31668086)
                    {

    E139: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

    E145: A4 01                                            // ..

                    Case
    E147: A1 48 08                                         // .H.

 (0x08B18086)
                    {

    E14A: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

    E156: A4 01                                            // ..

                    Case
    E158: A1 47 07                                         // .G.

 (0x08B28086)
                    {

    E15B: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

    E167: A4 01                                            // ..

                    Case
    E169: A1 46 06                                         // .F.

 (0x08B38086)
                    {

    E16C: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

    E178: A4 01                                            // ..

                    Case
    E17A: A1 45 05                                         // .E.

 (0x08B48086)
                    {

    E17D: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

    E189: A4 01                                            // ..

                    Case
    E18B: A1 44 04                                         // .D.

 (0x24F38086)
                    {

    E18E: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

    E19A: A4 01                                            // ..

                    Case
    E19C: A1 33                                            // .3

 (0x24F48086)
                    {

    E19E: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

    E1AA: A4 01                                            // ..

                    Case
    E1AC: A1 23                                            // .#

 (0x24F58086)
                    {

    E1AE: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

    E1BA: A4 01                                            // ..

                    Case
    E1BC: A1 13                                            // ..

 (0x24F68086)
                    {

    E1BE: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

    E1CA: A4 01                                            // ..

                    Default
                    {

    E1CC: A1 03                                            // ..

                        Return (Zero)
                    }


    E1CE: A4 00                                            // ..

                }
            }

    E1D0: A5                                               // .

            Else
            {

    E1D1: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


    E1D3: A4 00                                            // ..

    Scope (_SB.PCI0.RP03.PXSX)
    {

    E1D5: 10 43 41 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .CA/._SB_PCI0RP0
    E1E5: 33 50 58 53 58                                   // 3PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

    E1EA: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


    E1F4: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

    E201: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


    E20C: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
    E21C: 52 10                                            // R.

        Name (SPLX, 
    E21E: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

    E223: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    E227: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    E237: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    E239: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    E249: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    E24B: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    E25B: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {

    E25D: 14 40 19 53 50 4C 43 08                          // .@.SPLC.


    E265: 08 5F 54 5F 30 00                                // ._T_0.

            Switch (VDID)
            {

    E26B: A2 44 0E 01 70 56 44 49 44 5F 54 5F 30           // .D..pVDID_T_0

                Case (0x093C8086)
                {

    E278: A0 0C 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                    Break
                }

    E284: A5                                               // .

                Case
    E285: A1 49 0C                                         // .I.

 (0x095A8086)
                {

    E288: A0 0C 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                    Break
                }

    E294: A5                                               // .

                Case
    E295: A1 49 0B                                         // .I.

 (0x095B8086)
                {

    E298: A0 0C 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                    Break
                }

    E2A4: A5                                               // .

                Case
    E2A5: A1 49 0A                                         // .I.

 (0x31658086)
                {

    E2A8: A0 0C 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                    Break
                }

    E2B4: A5                                               // .

                Case
    E2B5: A1 49 09                                         // .I.

 (0x31668086)
                {

    E2B8: A0 0C 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                    Break
                }

    E2C4: A5                                               // .

                Case
    E2C5: A1 49 08                                         // .I.

 (0x08B18086)
                {

    E2C8: A0 0C 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                    Break
                }

    E2D4: A5                                               // .

                Case
    E2D5: A1 49 07                                         // .I.

 (0x08B28086)
                {

    E2D8: A0 0C 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                    Break
                }

    E2E4: A5                                               // .

                Case
    E2E5: A1 49 06                                         // .I.

 (0x08B38086)
                {

    E2E8: A0 0C 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                    Break
                }

    E2F4: A5                                               // .

                Case
    E2F5: A1 49 05                                         // .I.

 (0x08B48086)
                {

    E2F8: A0 0C 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                    Break
                }

    E304: A5                                               // .

                Case
    E305: A1 49 04                                         // .I.

 (0x24F38086)
                {

    E308: A0 0C 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                    Break
                }

    E314: A5                                               // .

                Case
    E315: A1 39                                            // .9

 (0x24F48086)
                {

    E317: A0 0C 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                    Break
                }

    E323: A5                                               // .

                Case
    E324: A1 2A                                            // .*

 (0x24F58086)
                {

    E326: A0 0C 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                    Break
                }

    E332: A5                                               // .

                Case
    E333: A1 1B                                            // ..

 (0x24F68086)
                {

    E335: A0 0C 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                    Break
                }

    E341: A5                                               // .

                Default
                {

    E342: A1 0C                                            // ..

                    Return (
    E344: A4                                               // .

Package (0x02)
                    {
                        Zero, 

    E345: 12 09 02 00                                      // ....

                        Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        }
                    })
                }


    E349: 12 05 03 00 00 00                                // ......

            }

            Store (DOM1, 
    E34F: A5 70 44 4F 4D 31                                // .pDOM1

Index (DerefOf (
    E355: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
    E357: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
    E365: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
    E367: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
    E375: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
    E377: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
    E386: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
    E388: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
    E397: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
    E399: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
    E3A8: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
    E3AA: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
    E3BA: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
    E3BC: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
    E3CB: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
    E3CD: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
    E3DC: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

    E3DE: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP03.PXSX.SPLX */
        }


    E3E9: A4 53 50 4C 58                                   // .SPLX

        Name (WANX, 
    E3EE: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

    E3F3: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    E3F7: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    E407: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    E409: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    E419: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
    E41B: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
    E425: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
    E427: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
    E435: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
    E437: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
    E445: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
    E447: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
    E453: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
    E455: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
    E464: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
    E466: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
    E475: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

    E477: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP03.PXSX.WANX */
        }


    E482: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
    E487: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

    E48C: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


    E490: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

    E49B: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
    E4A6: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
    E4B3: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
    E4B5: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
    E4C3: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
    E4C5: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
    E4D3: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
    E4D5: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
    E4E4: 88 83                                            // ..

Index (WRDX, 0x02)), One))

    E4E6: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP03.PXSX.WRDX */
        }


    E4F0: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

    E4F5: 14 43 0F 57 49 53 54 08                          // .C.WIST.


    E4FD: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

    E503: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

    E50D: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

    E51A: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

    E526: A4 01                                            // ..

                    Case
    E528: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

    E52B: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

    E537: A4 01                                            // ..

                    Case
    E539: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

    E53C: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

    E548: A4 01                                            // ..

                    Case
    E54A: A1 49 09                                         // .I.

 (0x31668086)
                    {

    E54D: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

    E559: A4 01                                            // ..

                    Case
    E55B: A1 48 08                                         // .H.

 (0x08B18086)
                    {

    E55E: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

    E56A: A4 01                                            // ..

                    Case
    E56C: A1 47 07                                         // .G.

 (0x08B28086)
                    {

    E56F: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

    E57B: A4 01                                            // ..

                    Case
    E57D: A1 46 06                                         // .F.

 (0x08B38086)
                    {

    E580: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

    E58C: A4 01                                            // ..

                    Case
    E58E: A1 45 05                                         // .E.

 (0x08B48086)
                    {

    E591: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

    E59D: A4 01                                            // ..

                    Case
    E59F: A1 44 04                                         // .D.

 (0x24F38086)
                    {

    E5A2: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

    E5AE: A4 01                                            // ..

                    Case
    E5B0: A1 33                                            // .3

 (0x24F48086)
                    {

    E5B2: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

    E5BE: A4 01                                            // ..

                    Case
    E5C0: A1 23                                            // .#

 (0x24F58086)
                    {

    E5C2: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

    E5CE: A4 01                                            // ..

                    Case
    E5D0: A1 13                                            // ..

 (0x24F68086)
                    {

    E5D2: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

    E5DE: A4 01                                            // ..

                    Default
                    {

    E5E0: A1 03                                            // ..

                        Return (Zero)
                    }


    E5E2: A4 00                                            // ..

                }
            }

    E5E4: A5                                               // .

            Else
            {

    E5E5: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


    E5E7: A4 00                                            // ..

    Scope (_SB.PCI0.RP05.PXSX)
    {

    E5E9: 10 43 41 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .CA/._SB_PCI0RP0
    E5F9: 35 50 58 53 58                                   // 5PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

    E5FE: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


    E608: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

    E615: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


    E620: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
    E630: 52 10                                            // R.

        Name (SPLX, 
    E632: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

    E637: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    E63B: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    E64B: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    E64D: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    E65D: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    E65F: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    E66F: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {

    E671: 14 40 19 53 50 4C 43 08                          // .@.SPLC.


    E679: 08 5F 54 5F 30 00                                // ._T_0.

            Switch (VDID)
            {

    E67F: A2 44 0E 01 70 56 44 49 44 5F 54 5F 30           // .D..pVDID_T_0

                Case (0x093C8086)
                {

    E68C: A0 0C 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                    Break
                }

    E698: A5                                               // .

                Case
    E699: A1 49 0C                                         // .I.

 (0x095A8086)
                {

    E69C: A0 0C 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                    Break
                }

    E6A8: A5                                               // .

                Case
    E6A9: A1 49 0B                                         // .I.

 (0x095B8086)
                {

    E6AC: A0 0C 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                    Break
                }

    E6B8: A5                                               // .

                Case
    E6B9: A1 49 0A                                         // .I.

 (0x31658086)
                {

    E6BC: A0 0C 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                    Break
                }

    E6C8: A5                                               // .

                Case
    E6C9: A1 49 09                                         // .I.

 (0x31668086)
                {

    E6CC: A0 0C 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                    Break
                }

    E6D8: A5                                               // .

                Case
    E6D9: A1 49 08                                         // .I.

 (0x08B18086)
                {

    E6DC: A0 0C 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                    Break
                }

    E6E8: A5                                               // .

                Case
    E6E9: A1 49 07                                         // .I.

 (0x08B28086)
                {

    E6EC: A0 0C 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                    Break
                }

    E6F8: A5                                               // .

                Case
    E6F9: A1 49 06                                         // .I.

 (0x08B38086)
                {

    E6FC: A0 0C 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                    Break
                }

    E708: A5                                               // .

                Case
    E709: A1 49 05                                         // .I.

 (0x08B48086)
                {

    E70C: A0 0C 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                    Break
                }

    E718: A5                                               // .

                Case
    E719: A1 49 04                                         // .I.

 (0x24F38086)
                {

    E71C: A0 0C 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                    Break
                }

    E728: A5                                               // .

                Case
    E729: A1 39                                            // .9

 (0x24F48086)
                {

    E72B: A0 0C 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                    Break
                }

    E737: A5                                               // .

                Case
    E738: A1 2A                                            // .*

 (0x24F58086)
                {

    E73A: A0 0C 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                    Break
                }

    E746: A5                                               // .

                Case
    E747: A1 1B                                            // ..

 (0x24F68086)
                {

    E749: A0 0C 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                    Break
                }

    E755: A5                                               // .

                Default
                {

    E756: A1 0C                                            // ..

                    Return (
    E758: A4                                               // .

Package (0x02)
                    {
                        Zero, 

    E759: 12 09 02 00                                      // ....

                        Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        }
                    })
                }


    E75D: 12 05 03 00 00 00                                // ......

            }

            Store (DOM1, 
    E763: A5 70 44 4F 4D 31                                // .pDOM1

Index (DerefOf (
    E769: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
    E76B: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
    E779: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
    E77B: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
    E789: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
    E78B: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
    E79A: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
    E79C: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
    E7AB: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
    E7AD: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
    E7BC: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
    E7BE: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
    E7CE: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
    E7D0: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
    E7DF: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
    E7E1: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
    E7F0: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

    E7F2: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP05.PXSX.SPLX */
        }


    E7FD: A4 53 50 4C 58                                   // .SPLX

        Name (WANX, 
    E802: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

    E807: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    E80B: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    E81B: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    E81D: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    E82D: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
    E82F: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
    E839: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
    E83B: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
    E849: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
    E84B: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
    E859: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
    E85B: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
    E867: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
    E869: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
    E878: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
    E87A: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
    E889: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

    E88B: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP05.PXSX.WANX */
        }


    E896: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
    E89B: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

    E8A0: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


    E8A4: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

    E8AF: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
    E8BA: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
    E8C7: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
    E8C9: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
    E8D7: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
    E8D9: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
    E8E7: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
    E8E9: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
    E8F8: 88 83                                            // ..

Index (WRDX, 0x02)), One))

    E8FA: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP05.PXSX.WRDX */
        }


    E904: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

    E909: 14 43 0F 57 49 53 54 08                          // .C.WIST.


    E911: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

    E917: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

    E921: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

    E92E: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

    E93A: A4 01                                            // ..

                    Case
    E93C: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

    E93F: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

    E94B: A4 01                                            // ..

                    Case
    E94D: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

    E950: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

    E95C: A4 01                                            // ..

                    Case
    E95E: A1 49 09                                         // .I.

 (0x31668086)
                    {

    E961: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

    E96D: A4 01                                            // ..

                    Case
    E96F: A1 48 08                                         // .H.

 (0x08B18086)
                    {

    E972: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

    E97E: A4 01                                            // ..

                    Case
    E980: A1 47 07                                         // .G.

 (0x08B28086)
                    {

    E983: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

    E98F: A4 01                                            // ..

                    Case
    E991: A1 46 06                                         // .F.

 (0x08B38086)
                    {

    E994: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

    E9A0: A4 01                                            // ..

                    Case
    E9A2: A1 45 05                                         // .E.

 (0x08B48086)
                    {

    E9A5: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

    E9B1: A4 01                                            // ..

                    Case
    E9B3: A1 44 04                                         // .D.

 (0x24F38086)
                    {

    E9B6: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

    E9C2: A4 01                                            // ..

                    Case
    E9C4: A1 33                                            // .3

 (0x24F48086)
                    {

    E9C6: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

    E9D2: A4 01                                            // ..

                    Case
    E9D4: A1 23                                            // .#

 (0x24F58086)
                    {

    E9D6: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

    E9E2: A4 01                                            // ..

                    Case
    E9E4: A1 13                                            // ..

 (0x24F68086)
                    {

    E9E6: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

    E9F2: A4 01                                            // ..

                    Default
                    {

    E9F4: A1 03                                            // ..

                        Return (Zero)
                    }


    E9F6: A4 00                                            // ..

                }
            }

    E9F8: A5                                               // .

            Else
            {

    E9F9: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


    E9FB: A4 00                                            // ..

    Scope (_SB.PCI0.RP06.PXSX)
    {

    E9FD: 10 43 41 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .CA/._SB_PCI0RP0
    EA0D: 36 50 58 53 58                                   // 6PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

    EA12: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


    EA1C: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

    EA29: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


    EA34: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
    EA44: 52 10                                            // R.

        Name (SPLX, 
    EA46: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

    EA4B: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    EA4F: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    EA5F: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    EA61: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    EA71: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    EA73: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    EA83: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {

    EA85: 14 40 19 53 50 4C 43 08                          // .@.SPLC.


    EA8D: 08 5F 54 5F 30 00                                // ._T_0.

            Switch (VDID)
            {

    EA93: A2 44 0E 01 70 56 44 49 44 5F 54 5F 30           // .D..pVDID_T_0

                Case (0x093C8086)
                {

    EAA0: A0 0C 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                    Break
                }

    EAAC: A5                                               // .

                Case
    EAAD: A1 49 0C                                         // .I.

 (0x095A8086)
                {

    EAB0: A0 0C 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                    Break
                }

    EABC: A5                                               // .

                Case
    EABD: A1 49 0B                                         // .I.

 (0x095B8086)
                {

    EAC0: A0 0C 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                    Break
                }

    EACC: A5                                               // .

                Case
    EACD: A1 49 0A                                         // .I.

 (0x31658086)
                {

    EAD0: A0 0C 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                    Break
                }

    EADC: A5                                               // .

                Case
    EADD: A1 49 09                                         // .I.

 (0x31668086)
                {

    EAE0: A0 0C 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                    Break
                }

    EAEC: A5                                               // .

                Case
    EAED: A1 49 08                                         // .I.

 (0x08B18086)
                {

    EAF0: A0 0C 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                    Break
                }

    EAFC: A5                                               // .

                Case
    EAFD: A1 49 07                                         // .I.

 (0x08B28086)
                {

    EB00: A0 0C 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                    Break
                }

    EB0C: A5                                               // .

                Case
    EB0D: A1 49 06                                         // .I.

 (0x08B38086)
                {

    EB10: A0 0C 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                    Break
                }

    EB1C: A5                                               // .

                Case
    EB1D: A1 49 05                                         // .I.

 (0x08B48086)
                {

    EB20: A0 0C 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                    Break
                }

    EB2C: A5                                               // .

                Case
    EB2D: A1 49 04                                         // .I.

 (0x24F38086)
                {

    EB30: A0 0C 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                    Break
                }

    EB3C: A5                                               // .

                Case
    EB3D: A1 39                                            // .9

 (0x24F48086)
                {

    EB3F: A0 0C 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                    Break
                }

    EB4B: A5                                               // .

                Case
    EB4C: A1 2A                                            // .*

 (0x24F58086)
                {

    EB4E: A0 0C 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                    Break
                }

    EB5A: A5                                               // .

                Case
    EB5B: A1 1B                                            // ..

 (0x24F68086)
                {

    EB5D: A0 0C 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                    Break
                }

    EB69: A5                                               // .

                Default
                {

    EB6A: A1 0C                                            // ..

                    Return (
    EB6C: A4                                               // .

Package (0x02)
                    {
                        Zero, 

    EB6D: 12 09 02 00                                      // ....

                        Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        }
                    })
                }


    EB71: 12 05 03 00 00 00                                // ......

            }

            Store (DOM1, 
    EB77: A5 70 44 4F 4D 31                                // .pDOM1

Index (DerefOf (
    EB7D: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
    EB7F: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
    EB8D: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
    EB8F: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
    EB9D: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
    EB9F: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
    EBAE: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
    EBB0: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
    EBBF: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
    EBC1: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
    EBD0: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
    EBD2: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
    EBE2: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
    EBE4: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
    EBF3: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
    EBF5: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
    EC04: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

    EC06: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP06.PXSX.SPLX */
        }


    EC11: A4 53 50 4C 58                                   // .SPLX

        Name (WANX, 
    EC16: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

    EC1B: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    EC1F: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    EC2F: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    EC31: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    EC41: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
    EC43: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
    EC4D: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
    EC4F: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
    EC5D: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
    EC5F: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
    EC6D: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
    EC6F: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
    EC7B: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
    EC7D: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
    EC8C: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
    EC8E: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
    EC9D: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

    EC9F: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP06.PXSX.WANX */
        }


    ECAA: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
    ECAF: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

    ECB4: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


    ECB8: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

    ECC3: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
    ECCE: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
    ECDB: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
    ECDD: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
    ECEB: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
    ECED: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
    ECFB: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
    ECFD: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
    ED0C: 88 83                                            // ..

Index (WRDX, 0x02)), One))

    ED0E: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP06.PXSX.WRDX */
        }


    ED18: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

    ED1D: 14 43 0F 57 49 53 54 08                          // .C.WIST.


    ED25: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

    ED2B: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

    ED35: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

    ED42: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

    ED4E: A4 01                                            // ..

                    Case
    ED50: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

    ED53: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

    ED5F: A4 01                                            // ..

                    Case
    ED61: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

    ED64: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

    ED70: A4 01                                            // ..

                    Case
    ED72: A1 49 09                                         // .I.

 (0x31668086)
                    {

    ED75: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

    ED81: A4 01                                            // ..

                    Case
    ED83: A1 48 08                                         // .H.

 (0x08B18086)
                    {

    ED86: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

    ED92: A4 01                                            // ..

                    Case
    ED94: A1 47 07                                         // .G.

 (0x08B28086)
                    {

    ED97: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

    EDA3: A4 01                                            // ..

                    Case
    EDA5: A1 46 06                                         // .F.

 (0x08B38086)
                    {

    EDA8: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

    EDB4: A4 01                                            // ..

                    Case
    EDB6: A1 45 05                                         // .E.

 (0x08B48086)
                    {

    EDB9: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

    EDC5: A4 01                                            // ..

                    Case
    EDC7: A1 44 04                                         // .D.

 (0x24F38086)
                    {

    EDCA: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

    EDD6: A4 01                                            // ..

                    Case
    EDD8: A1 33                                            // .3

 (0x24F48086)
                    {

    EDDA: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

    EDE6: A4 01                                            // ..

                    Case
    EDE8: A1 23                                            // .#

 (0x24F58086)
                    {

    EDEA: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

    EDF6: A4 01                                            // ..

                    Case
    EDF8: A1 13                                            // ..

 (0x24F68086)
                    {

    EDFA: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

    EE06: A4 01                                            // ..

                    Default
                    {

    EE08: A1 03                                            // ..

                        Return (Zero)
                    }


    EE0A: A4 00                                            // ..

                }
            }

    EE0C: A5                                               // .

            Else
            {

    EE0D: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


    EE0F: A4 00                                            // ..

    Scope (_SB.PCI0.RP07.PXSX)
    {

    EE11: 10 43 41 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .CA/._SB_PCI0RP0
    EE21: 37 50 58 53 58                                   // 7PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

    EE26: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


    EE30: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

    EE3D: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


    EE48: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
    EE58: 52 10                                            // R.

        Name (SPLX, 
    EE5A: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

    EE5F: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    EE63: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    EE73: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    EE75: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    EE85: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    EE87: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    EE97: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {

    EE99: 14 40 19 53 50 4C 43 08                          // .@.SPLC.


    EEA1: 08 5F 54 5F 30 00                                // ._T_0.

            Switch (VDID)
            {

    EEA7: A2 44 0E 01 70 56 44 49 44 5F 54 5F 30           // .D..pVDID_T_0

                Case (0x093C8086)
                {

    EEB4: A0 0C 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                    Break
                }

    EEC0: A5                                               // .

                Case
    EEC1: A1 49 0C                                         // .I.

 (0x095A8086)
                {

    EEC4: A0 0C 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                    Break
                }

    EED0: A5                                               // .

                Case
    EED1: A1 49 0B                                         // .I.

 (0x095B8086)
                {

    EED4: A0 0C 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                    Break
                }

    EEE0: A5                                               // .

                Case
    EEE1: A1 49 0A                                         // .I.

 (0x31658086)
                {

    EEE4: A0 0C 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                    Break
                }

    EEF0: A5                                               // .

                Case
    EEF1: A1 49 09                                         // .I.

 (0x31668086)
                {

    EEF4: A0 0C 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                    Break
                }

    EF00: A5                                               // .

                Case
    EF01: A1 49 08                                         // .I.

 (0x08B18086)
                {

    EF04: A0 0C 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                    Break
                }

    EF10: A5                                               // .

                Case
    EF11: A1 49 07                                         // .I.

 (0x08B28086)
                {

    EF14: A0 0C 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                    Break
                }

    EF20: A5                                               // .

                Case
    EF21: A1 49 06                                         // .I.

 (0x08B38086)
                {

    EF24: A0 0C 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                    Break
                }

    EF30: A5                                               // .

                Case
    EF31: A1 49 05                                         // .I.

 (0x08B48086)
                {

    EF34: A0 0C 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                    Break
                }

    EF40: A5                                               // .

                Case
    EF41: A1 49 04                                         // .I.

 (0x24F38086)
                {

    EF44: A0 0C 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                    Break
                }

    EF50: A5                                               // .

                Case
    EF51: A1 39                                            // .9

 (0x24F48086)
                {

    EF53: A0 0C 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                    Break
                }

    EF5F: A5                                               // .

                Case
    EF60: A1 2A                                            // .*

 (0x24F58086)
                {

    EF62: A0 0C 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                    Break
                }

    EF6E: A5                                               // .

                Case
    EF6F: A1 1B                                            // ..

 (0x24F68086)
                {

    EF71: A0 0C 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                    Break
                }

    EF7D: A5                                               // .

                Default
                {

    EF7E: A1 0C                                            // ..

                    Return (
    EF80: A4                                               // .

Package (0x02)
                    {
                        Zero, 

    EF81: 12 09 02 00                                      // ....

                        Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        }
                    })
                }


    EF85: 12 05 03 00 00 00                                // ......

            }

            Store (DOM1, 
    EF8B: A5 70 44 4F 4D 31                                // .pDOM1

Index (DerefOf (
    EF91: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
    EF93: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
    EFA1: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
    EFA3: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
    EFB1: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
    EFB3: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
    EFC2: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
    EFC4: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
    EFD3: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
    EFD5: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
    EFE4: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
    EFE6: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
    EFF6: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
    EFF8: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
    F007: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
    F009: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
    F018: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

    F01A: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP07.PXSX.SPLX */
        }


    F025: A4 53 50 4C 58                                   // .SPLX

        Name (WANX, 
    F02A: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

    F02F: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    F033: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    F043: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    F045: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    F055: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
    F057: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
    F061: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
    F063: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
    F071: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
    F073: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
    F081: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
    F083: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
    F08F: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
    F091: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
    F0A0: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
    F0A2: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
    F0B1: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

    F0B3: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP07.PXSX.WANX */
        }


    F0BE: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
    F0C3: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

    F0C8: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


    F0CC: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

    F0D7: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
    F0E2: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
    F0EF: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
    F0F1: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
    F0FF: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
    F101: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
    F10F: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
    F111: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
    F120: 88 83                                            // ..

Index (WRDX, 0x02)), One))

    F122: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP07.PXSX.WRDX */
        }


    F12C: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

    F131: 14 43 0F 57 49 53 54 08                          // .C.WIST.


    F139: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

    F13F: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

    F149: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

    F156: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

    F162: A4 01                                            // ..

                    Case
    F164: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

    F167: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

    F173: A4 01                                            // ..

                    Case
    F175: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

    F178: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

    F184: A4 01                                            // ..

                    Case
    F186: A1 49 09                                         // .I.

 (0x31668086)
                    {

    F189: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

    F195: A4 01                                            // ..

                    Case
    F197: A1 48 08                                         // .H.

 (0x08B18086)
                    {

    F19A: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

    F1A6: A4 01                                            // ..

                    Case
    F1A8: A1 47 07                                         // .G.

 (0x08B28086)
                    {

    F1AB: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

    F1B7: A4 01                                            // ..

                    Case
    F1B9: A1 46 06                                         // .F.

 (0x08B38086)
                    {

    F1BC: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

    F1C8: A4 01                                            // ..

                    Case
    F1CA: A1 45 05                                         // .E.

 (0x08B48086)
                    {

    F1CD: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

    F1D9: A4 01                                            // ..

                    Case
    F1DB: A1 44 04                                         // .D.

 (0x24F38086)
                    {

    F1DE: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

    F1EA: A4 01                                            // ..

                    Case
    F1EC: A1 33                                            // .3

 (0x24F48086)
                    {

    F1EE: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

    F1FA: A4 01                                            // ..

                    Case
    F1FC: A1 23                                            // .#

 (0x24F58086)
                    {

    F1FE: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

    F20A: A4 01                                            // ..

                    Case
    F20C: A1 13                                            // ..

 (0x24F68086)
                    {

    F20E: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

    F21A: A4 01                                            // ..

                    Default
                    {

    F21C: A1 03                                            // ..

                        Return (Zero)
                    }


    F21E: A4 00                                            // ..

                }
            }

    F220: A5                                               // .

            Else
            {

    F221: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


    F223: A4 00                                            // ..

    Scope (_SB.PCI0.RP08.PXSX)
    {

    F225: 10 43 41 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // .CA/._SB_PCI0RP0
    F235: 38 50 58 53 58                                   // 8PXSX

        OperationRegion (RPXX, PCI_Config, Zero, 0x10)

    F23A: 5B 80 52 50 58 58 02 00 0A 10                    // [.RPXX....

        Field (RPXX, AnyAcc, NoLock, Preserve)
        {
            VDID,   32
        }


    F244: 5B 81 0B 52 50 58 58 00 56 44 49 44 20           // [..RPXX.VDID 

        OperationRegion (FLDR, PCI_Config, 0x44, 0x06)

    F251: 5B 80 46 4C 44 52 02 0A 44 0A 06                 // [.FLDR..D..

        Field (FLDR, ByteAcc, NoLock, Preserve)
        {
            DCAP,   32, 
            DCTR,   16
        }


    F25C: 5B 81 10 46 4C 44 52 01 44 43 41 50 20 44 43 54  // [..FLDR.DCAP DCT
    F26C: 52 10                                            // R.

        Name (SPLX, 
    F26E: 08 53 50 4C 58                                   // .SPLX

Package (0x04)
        {
            Zero, 

    F273: 12 39 04 00                                      // .9..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    F277: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    F287: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    F289: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    F299: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    F29B: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    F2AB: 00 80                                            // ..

        Method (SPLC, 0, Serialized)
        {

    F2AD: 14 40 19 53 50 4C 43 08                          // .@.SPLC.


    F2B5: 08 5F 54 5F 30 00                                // ._T_0.

            Switch (VDID)
            {

    F2BB: A2 44 0E 01 70 56 44 49 44 5F 54 5F 30           // .D..pVDID_T_0

                Case (0x093C8086)
                {

    F2C8: A0 0C 93 5F 54 5F 30 0C 86 80 3C 09              // ..._T_0...<.

                    Break
                }

    F2D4: A5                                               // .

                Case
    F2D5: A1 49 0C                                         // .I.

 (0x095A8086)
                {

    F2D8: A0 0C 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                    Break
                }

    F2E4: A5                                               // .

                Case
    F2E5: A1 49 0B                                         // .I.

 (0x095B8086)
                {

    F2E8: A0 0C 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                    Break
                }

    F2F4: A5                                               // .

                Case
    F2F5: A1 49 0A                                         // .I.

 (0x31658086)
                {

    F2F8: A0 0C 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                    Break
                }

    F304: A5                                               // .

                Case
    F305: A1 49 09                                         // .I.

 (0x31668086)
                {

    F308: A0 0C 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                    Break
                }

    F314: A5                                               // .

                Case
    F315: A1 49 08                                         // .I.

 (0x08B18086)
                {

    F318: A0 0C 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                    Break
                }

    F324: A5                                               // .

                Case
    F325: A1 49 07                                         // .I.

 (0x08B28086)
                {

    F328: A0 0C 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                    Break
                }

    F334: A5                                               // .

                Case
    F335: A1 49 06                                         // .I.

 (0x08B38086)
                {

    F338: A0 0C 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                    Break
                }

    F344: A5                                               // .

                Case
    F345: A1 49 05                                         // .I.

 (0x08B48086)
                {

    F348: A0 0C 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                    Break
                }

    F354: A5                                               // .

                Case
    F355: A1 49 04                                         // .I.

 (0x24F38086)
                {

    F358: A0 0C 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                    Break
                }

    F364: A5                                               // .

                Case
    F365: A1 39                                            // .9

 (0x24F48086)
                {

    F367: A0 0C 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                    Break
                }

    F373: A5                                               // .

                Case
    F374: A1 2A                                            // .*

 (0x24F58086)
                {

    F376: A0 0C 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                    Break
                }

    F382: A5                                               // .

                Case
    F383: A1 1B                                            // ..

 (0x24F68086)
                {

    F385: A0 0C 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                    Break
                }

    F391: A5                                               // .

                Default
                {

    F392: A1 0C                                            // ..

                    Return (
    F394: A4                                               // .

Package (0x02)
                    {
                        Zero, 

    F395: 12 09 02 00                                      // ....

                        Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        }
                    })
                }


    F399: 12 05 03 00 00 00                                // ......

            }

            Store (DOM1, 
    F39F: A5 70 44 4F 4D 31                                // .pDOM1

Index (DerefOf (
    F3A5: 88 83                                            // ..

Index (SPLX, One)), Zero))
            Store (LIM1, 
    F3A7: 88 53 50 4C 58 01 00 00 00 70 4C 49 4D 31        // .SPLX....pLIM1

Index (DerefOf (
    F3B5: 88 83                                            // ..

Index (SPLX, One)), One))
            Store (TIM1, 
    F3B7: 88 53 50 4C 58 01 00 01 00 70 54 49 4D 31        // .SPLX....pTIM1

Index (DerefOf (
    F3C5: 88 83                                            // ..

Index (SPLX, One)), 0x02))
            Store (DOM2, 
    F3C7: 88 53 50 4C 58 01 00 0A 02 00 70 44 4F 4D 32     // .SPLX.....pDOM2

Index (DerefOf (
    F3D6: 88 83                                            // ..

Index (SPLX, 0x02)), Zero))
            Store (LIM2, 
    F3D8: 88 53 50 4C 58 0A 02 00 00 00 70 4C 49 4D 32     // .SPLX.....pLIM2

Index (DerefOf (
    F3E7: 88 83                                            // ..

Index (SPLX, 0x02)), One))
            Store (TIM2, 
    F3E9: 88 53 50 4C 58 0A 02 00 01 00 70 54 49 4D 32     // .SPLX.....pTIM2

Index (DerefOf (
    F3F8: 88 83                                            // ..

Index (SPLX, 0x02)), 0x02))
            Store (DOM3, 
    F3FA: 88 53 50 4C 58 0A 02 00 0A 02 00 70 44 4F 4D 33  // .SPLX......pDOM3

Index (DerefOf (
    F40A: 88 83                                            // ..

Index (SPLX, 0x03)), Zero))
            Store (LIM3, 
    F40C: 88 53 50 4C 58 0A 03 00 00 00 70 4C 49 4D 33     // .SPLX.....pLIM3

Index (DerefOf (
    F41B: 88 83                                            // ..

Index (SPLX, 0x03)), One))
            Store (TIM3, 
    F41D: 88 53 50 4C 58 0A 03 00 01 00 70 54 49 4D 33     // .SPLX.....pTIM3

Index (DerefOf (
    F42C: 88 83                                            // ..

Index (SPLX, 0x03)), 0x02))

    F42E: 88 53 50 4C 58 0A 03 00 0A 02 00                 // .SPLX......

            Return (SPLX) /* \_SB_.PCI0.RP08.PXSX.SPLX */
        }


    F439: A4 53 50 4C 58                                   // .SPLX

        Name (WANX, 
    F43E: 08 57 41 4E 58                                   // .WANX

Package (0x03)
        {
            Zero, 

    F443: 12 27 03 00                                      // .'..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }, 


    F447: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    F457: 00 80                                            // ..

            Package (0x03)
            {
                0x80000000, 
                0x80000000, 
                0x80000000
            }
        })

    F459: 12 11 03 0C 00 00 00 80 0C 00 00 00 80 0C 00 00  // ................
    F469: 00 80                                            // ..

        Method (WAND, 0, Serialized)
        {
            Store (Zero, 
    F46B: 14 4B 06 57 41 4E 44 08 70 00                    // .K.WAND.p.

Index (DerefOf (
    F475: 88 83                                            // ..

Index (WANX, One)), Zero))
            Store (TRD0, 
    F477: 88 57 41 4E 58 01 00 00 00 70 54 52 44 30        // .WANX....pTRD0

Index (DerefOf (
    F485: 88 83                                            // ..

Index (WANX, One)), One))
            Store (TRL0, 
    F487: 88 57 41 4E 58 01 00 01 00 70 54 52 4C 30        // .WANX....pTRL0

Index (DerefOf (
    F495: 88 83                                            // ..

Index (WANX, One)), 0x02))
            Store (One, 
    F497: 88 57 41 4E 58 01 00 0A 02 00 70 01              // .WANX.....p.

Index (DerefOf (
    F4A3: 88 83                                            // ..

Index (WANX, 0x02)), Zero))
            Store (TRD1, 
    F4A5: 88 57 41 4E 58 0A 02 00 00 00 70 54 52 44 31     // .WANX.....pTRD1

Index (DerefOf (
    F4B4: 88 83                                            // ..

Index (WANX, 0x02)), One))
            Store (TRL1, 
    F4B6: 88 57 41 4E 58 0A 02 00 01 00 70 54 52 4C 31     // .WANX.....pTRL1

Index (DerefOf (
    F4C5: 88 83                                            // ..

Index (WANX, 0x02)), 0x02))

    F4C7: 88 57 41 4E 58 0A 02 00 0A 02 00                 // .WANX......

            Return (WANX) /* \_SB_.PCI0.RP08.PXSX.WANX */
        }


    F4D2: A4 57 41 4E 58                                   // .WANX

        Name (WRDX, 
    F4D7: 08 57 52 44 58                                   // .WRDX

Package (0x03)
        {
            Zero, 

    F4DC: 12 19 03 00                                      // ....

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }, 


    F4E0: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

            Package (0x02)
            {
                0x80000000, 
                0x8000
            }
        })

    F4EB: 12 0A 02 0C 00 00 00 80 0B 00 80                 // ...........

        Method (WRDD, 0, Serialized)
        {
            Store (WDM1, 
    F4F6: 14 4E 04 57 52 44 44 08 70 57 44 4D 31           // .N.WRDD.pWDM1

Index (DerefOf (
    F503: 88 83                                            // ..

Index (WRDX, One)), Zero))
            Store (CID1, 
    F505: 88 57 52 44 58 01 00 00 00 70 43 49 44 31        // .WRDX....pCID1

Index (DerefOf (
    F513: 88 83                                            // ..

Index (WRDX, One)), One))
            Store (WDM2, 
    F515: 88 57 52 44 58 01 00 01 00 70 57 44 4D 32        // .WRDX....pWDM2

Index (DerefOf (
    F523: 88 83                                            // ..

Index (WRDX, 0x02)), Zero))
            Store (CID2, 
    F525: 88 57 52 44 58 0A 02 00 00 00 70 43 49 44 32     // .WRDX.....pCID2

Index (DerefOf (
    F534: 88 83                                            // ..

Index (WRDX, 0x02)), One))

    F536: 88 57 52 44 58 0A 02 00 01 00                    // .WRDX.....

            Return (WRDX) /* \_SB_.PCI0.RP08.PXSX.WRDX */
        }


    F540: A4 57 52 44 58                                   // .WRDX

        Method (WIST, 0, Serialized)
        {

    F545: 14 43 0F 57 49 53 54 08                          // .C.WIST.


    F54D: 08 5F 54 5F 30 00                                // ._T_0.

            If (CondRefOf (VDID))
            {

    F553: A0 41 0E 5B 12 56 44 49 44 00                    // .A.[.VDID.

                Switch (VDID)
                {

    F55D: A2 47 0D 01 70 56 44 49 44 5F 54 5F 30           // .G..pVDID_T_0

                    Case (0x095A8086)
                    {

    F56A: A0 0D 93 5F 54 5F 30 0C 86 80 5A 09              // ..._T_0...Z.

                        Return (One)
                    }

    F576: A4 01                                            // ..

                    Case
    F578: A1 4B 0B                                         // .K.

 (0x095B8086)
                    {

    F57B: A0 0D 93 5F 54 5F 30 0C 86 80 5B 09              // ..._T_0...[.

                        Return (One)
                    }

    F587: A4 01                                            // ..

                    Case
    F589: A1 4A 0A                                         // .J.

 (0x31658086)
                    {

    F58C: A0 0D 93 5F 54 5F 30 0C 86 80 65 31              // ..._T_0...e1

                        Return (One)
                    }

    F598: A4 01                                            // ..

                    Case
    F59A: A1 49 09                                         // .I.

 (0x31668086)
                    {

    F59D: A0 0D 93 5F 54 5F 30 0C 86 80 66 31              // ..._T_0...f1

                        Return (One)
                    }

    F5A9: A4 01                                            // ..

                    Case
    F5AB: A1 48 08                                         // .H.

 (0x08B18086)
                    {

    F5AE: A0 0D 93 5F 54 5F 30 0C 86 80 B1 08              // ..._T_0.....

                        Return (One)
                    }

    F5BA: A4 01                                            // ..

                    Case
    F5BC: A1 47 07                                         // .G.

 (0x08B28086)
                    {

    F5BF: A0 0D 93 5F 54 5F 30 0C 86 80 B2 08              // ..._T_0.....

                        Return (One)
                    }

    F5CB: A4 01                                            // ..

                    Case
    F5CD: A1 46 06                                         // .F.

 (0x08B38086)
                    {

    F5D0: A0 0D 93 5F 54 5F 30 0C 86 80 B3 08              // ..._T_0.....

                        Return (One)
                    }

    F5DC: A4 01                                            // ..

                    Case
    F5DE: A1 45 05                                         // .E.

 (0x08B48086)
                    {

    F5E1: A0 0D 93 5F 54 5F 30 0C 86 80 B4 08              // ..._T_0.....

                        Return (One)
                    }

    F5ED: A4 01                                            // ..

                    Case
    F5EF: A1 44 04                                         // .D.

 (0x24F38086)
                    {

    F5F2: A0 0D 93 5F 54 5F 30 0C 86 80 F3 24              // ..._T_0....$

                        Return (One)
                    }

    F5FE: A4 01                                            // ..

                    Case
    F600: A1 33                                            // .3

 (0x24F48086)
                    {

    F602: A0 0D 93 5F 54 5F 30 0C 86 80 F4 24              // ..._T_0....$

                        Return (One)
                    }

    F60E: A4 01                                            // ..

                    Case
    F610: A1 23                                            // .#

 (0x24F58086)
                    {

    F612: A0 0D 93 5F 54 5F 30 0C 86 80 F5 24              // ..._T_0....$

                        Return (One)
                    }

    F61E: A4 01                                            // ..

                    Case
    F620: A1 13                                            // ..

 (0x24F68086)
                    {

    F622: A0 0D 93 5F 54 5F 30 0C 86 80 F6 24              // ..._T_0....$

                        Return (One)
                    }

    F62E: A4 01                                            // ..

                    Default
                    {

    F630: A1 03                                            // ..

                        Return (Zero)
                    }


    F632: A4 00                                            // ..

                }
            }

    F634: A5                                               // .

            Else
            {

    F635: A1 03                                            // ..

                Return (Zero)
            }
        }
    }


    F637: A4 00                                            // ..

    Name (NLID, Zero)

    F639: 08 4E 4C 49 44 00                                // .NLID.

    Name (LINX, Zero)

    F63F: 08 4C 49 4E 58 00                                // .LINX.

    Scope (_SB)
    {

    F645: 10 4B 13 5F 53 42 5F                             // .K._SB_

        Name (ECOK, Zero)

    F64C: 08 45 43 4F 4B 00                                // .ECOK.

        Method (VTOB, 1, NotSerialized)
        {
            Store (One, Local0)
            ShiftLeft (Local0, Arg0, Local0)

    F652: 14 0F 56 54 4F 42 01 70 01 60 79 60 68 60        // ..VTOB.p.`y`h`

            Return (Local0)
        }


    F660: A4 60                                            // .`

        Method (BTOV, 1, NotSerialized)
        {
            ShiftRight (Arg0, One, Local0)
            Store (Zero, Local1)

    F662: 14 18 42 54 4F 56 01 7A 68 01 60 70 00 61        // ..BTOV.zh.`p.a

            While (Local0)
            {
                Increment (Local1)

    F670: A2 08 60 75 61                                   // ..`ua

                ShiftRight (Local0, One, Local0)
            }


    F675: 7A 60 01 60                                      // z`.`

            Return (Local1)
        }


    F679: A4 61                                            // .a

        Method (MKWD, 2, NotSerialized)
        {

    F67B: 14 27 4D 4B 57 44 02                             // .'MKWD.

            If (And (Arg1, 0x80))
            {

    F682: A0 0D 7B 69 0A 80 00                             // ..{i...

                Store (0xFFFF0000, Local0)
            }

    F689: 70 0C 00 00 FF FF 60                             // p.....`

            Else
            {

    F690: A1 04                                            // ..

                Store (Zero, Local0)
            }

            Or (Local0, Arg0, Local0)
            Or (Local0, ShiftLeft (Arg1, 0x08), Local0)

    F692: 70 00 60 7D 60 68 60 7D 60 79 69 0A 08 00 60     // p.`}`h`}`yi...`

            Return (Local0)
        }


    F6A1: A4 60                                            // .`

        Method (POSW, 1, NotSerialized)
        {

    F6A3: 14 2E 50 4F 53 57 01                             // ..POSW.

            If (And (Arg0, 0x8000))
            {

    F6AA: A0 23 7B 68 0B 00 80 00                          // .#{h....

                If (LEqual (Arg0, 0xFFFF))
                {

    F6B2: A0 0C 93 68 0B FF FF                             // ...h...

                    Return (0xFFFFFFFF)
                }

    F6B9: A4 0C FF FF FF FF                                // ......

                Else
                {
                    Not (Arg0, Local0)
                    Increment (Local0)
                    And (Local0, 0xFFFF, Local0)

    F6BF: A1 0E 80 68 60 75 60 7B 60 0B FF FF 60           // ...h`u`{`...`

                    Return (Local0)
                }
            }

    F6CC: A4 60                                            // .`

            Else
            {

    F6CE: A1 03                                            // ..

                Return (Arg0)
            }
        }


    F6D0: A4 68                                            // .h

        Method (GBFE, 3, NotSerialized)
        {

    F6D2: 14 13 47 42 46 45 03                             // ..GBFE.

            CreateByteField (Arg0, Arg1, TIDX)

    F6D9: 8C 68 69 54 49 44 58                             // .hiTIDX

            Store (TIDX, Arg2)
        }


    F6E0: 70 54 49 44 58 6A                                // pTIDXj

        Method (PBFE, 3, NotSerialized)
        {

    F6E6: 14 13 50 42 46 45 03                             // ..PBFE.

            CreateByteField (Arg0, Arg1, TIDX)

    F6ED: 8C 68 69 54 49 44 58                             // .hiTIDX

            Store (Arg2, TIDX) /* \_SB_.PBFE.TIDX */
        }


    F6F4: 70 6A 54 49 44 58                                // pjTIDX

        Method (ITOS, 1, NotSerialized)
        {
            Store (
    F6FA: 14 44 06 49 54 4F 53 01 70                       // .D.ITOS.p

Buffer (0x09)
                {
                    /* 0000 */  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // 0.......
                    /* 0008 */  0x00                                             // .
                }, Local0)
            Store (
    F703: 11 0C 0A 09 30 00 00 00 00 00 00 00 00 60 70     // ....0........`p

Buffer (0x11)
                {
                    "0123456789ABCDEF"
                }, Local7)
            Store (0x08, Local1)
            Store (Zero, Local2)
            Store (Zero, Local3)

    F712: 11 14 0A 11 30 31 32 33 34 35 36 37 38 39 41 42  // ....0123456789AB
    F722: 43 44 45 46 00 67 70 0A 08 61 70 00 62 70 00 63  // CDEF.gp..ap.bp.c

            While (Local1)
            {
                Decrement (Local1)
                And (ShiftRight (Arg0, ShiftLeft (Local1, 0x02)), 0x0F, Local4)

    F732: A2 2A 61 76 61 7B 7A 68 79 61 0A 02 00 00 0A 0F  // .*ava{zhya......
    F742: 64                                               // d

                If (Local4)
                {

    F743: A0 05 64                                         // ..d

                    Store (Ones, Local3)
                }


    F746: 70 FF 63                                         // p.c

                If (Local3)
                {
                    GBFE (Local7, Local4, 
    F749: A0 13 63 47 42 46 45 67 64                       // ..cGBFEgd

RefOf (Local5))
                    PBFE (Local0, Local2, Local5)

    F752: 71 65 50 42 46 45 60 62 65                       // qePBFE`be

                    Increment (Local2)
                }
            }


    F75B: 75 62                                            // ub

            Return (Local0)
        }


    F75D: A4 60                                            // .`

        Device (PWRB)
        {

    F75F: 5B 82 0F 50 57 52 42                             // [..PWRB

            Name (_HID, EisaId ("PNP0C0C") /* Power Button Device */)  // _HID: Hardware ID
        }


    F766: 08 5F 48 49 44 0C 41 D0 0C 0C                    // ._HID.A...

        Device (SLPB)
        {

    F770: 5B 82 0F 53 4C 50 42                             // [..SLPB

            Name (_HID, EisaId ("PNP0C0E") /* Sleep Button Device */)  // _HID: Hardware ID
        }
    }


    F777: 08 5F 48 49 44 0C 41 D0 0C 0E                    // ._HID.A...

    Scope (_SB)
    {

    F781: 10 4D 0F 5F 53 42 5F                             // .M._SB_

        Device (ACAD)
        {

    F788: 5B 82 45 0F 41 43 41 44                          // [.E.ACAD

            Name (_HID, "ACPI0003" /* Power Source Device */)  // _HID: Hardware ID

    F790: 08 5F 48 49 44 0D 41 43 50 49 30 30 30 33 00     // ._HID.ACPI0003.

            Name (_PCL, 
    F79F: 08 5F 50 43 4C                                   // ._PCL

Package (0x01)  // _PCL: Power Consumer List
            {
                _SB
            })

    F7A4: 12 06 01 5F 53 42 5F                             // ..._SB_

            Name (ACST, Zero)

    F7AB: 08 41 43 53 54 00                                // .ACST.

            Name (ACWT, Zero)

    F7B1: 08 41 43 57 54 00                                // .ACWT.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

    F7B7: 14 48 04 5F 49 4E 49 00                          // .H._INI.

                If (LEqual (SIMU, 0x53))
                {

    F7BF: A0 0E 93 53 49 4D 55 0A 53                       // ...SIMU.S

                    Store (Zero, ACST) /* \_SB_.ACAD.ACST */
                }

    F7C8: 70 00 41 43 53 54                                // p.ACST

                ElseIf
    F7CE: A1 28                                            // .(

 (ECOK)
                {

    F7D0: A0 1E 45 43 4F 4B                                // ..ECOK

                    Store (^^PCI0.LPCB.EC0.ACDF, ACST) /* \_SB_.ACAD.ACST */
                }

    F7D6: 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 30  // p^^/.PCI0LPCBEC0
    F7E6: 5F 41 43 44 46 41 43 53 54                       // _ACDFACST

                Else
                {

    F7EF: A1 07                                            // ..

                    Store (One, ACST) /* \_SB_.ACAD.ACST */
                }


    F7F1: 70 01 41 43 53 54                                // p.ACST

                Store (ACST, PWRS) /* \PWRS */
            }


    F7F7: 70 41 43 53 54 50 57 52 53                       // pACSTPWRS

            Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
            {
                Store (ACST, ACWT) /* \_SB_.ACAD.ACWT */

    F800: 14 4E 07 5F 50 53 52 00 70 41 43 53 54 41 43 57  // .N._PSR.pACSTACW
    F810: 54                                               // T

                If (LEqual (SIMU, 0x53))
                {

    F811: A0 0E 93 53 49 4D 55 0A 53                       // ...SIMU.S

                    Store (Zero, ACST) /* \_SB_.ACAD.ACST */
                }

    F81A: 70 00 41 43 53 54                                // p.ACST

                ElseIf
    F820: A1 28                                            // .(

 (ECOK)
                {

    F822: A0 1E 45 43 4F 4B                                // ..ECOK

                    Store (^^PCI0.LPCB.EC0.ACDF, ACST) /* \_SB_.ACAD.ACST */
                }

    F828: 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 30  // p^^/.PCI0LPCBEC0
    F838: 5F 41 43 44 46 41 43 53 54                       // _ACDFACST

                Else
                {

    F841: A1 07                                            // ..

                    Store (One, ACST) /* \_SB_.ACAD.ACST */
                }


    F843: 70 01 41 43 53 54                                // p.ACST

                If (ACST)
                {
                    Store (One, Local0)

    F849: A0 15 41 43 53 54 70 01 60                       // ..ACSTp.`

                    Store (Zero, ^^BAT1.BCRI) /* \_SB_.BAT1.BCRI */
                }

    F852: 70 00 5E 5E 2E 42 41 54 31 42 43 52 49           // p.^^.BAT1BCRI

                Else
                {

    F85F: A1 04                                            // ..

                    Store (Zero, Local0)
                }

                Store (ACST, PWRS) /* \PWRS */

    F861: 70 00 60 70 41 43 53 54 50 57 52 53              // p.`pACSTPWRS

                If (
    F86D: A0 0F 92                                         // ...

LNotEqual (ACWT, ACST))
                {
                    PNOT ()
                }


    F870: 93 41 43 57 54 41 43 53 54 50 4E 4F 54           // .ACWTACSTPNOT

                Return (Local0)
            }
        }
    }


    F87D: A4 60                                            // .`

    Scope (_SB)
    {

    F87F: 10 4D 98 5F 53 42 5F                             // .M._SB_

        Device (BAT1)
        {

    F886: 5B 82 45 98 42 41 54 31                          // [.E.BAT1

            Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID

    F88E: 08 5F 48 49 44 0C 41 D0 0C 0A                    // ._HID.A...

            Name (_UID, One)  // _UID: Unique ID

    F898: 08 5F 55 49 44 01                                // ._UID.

            Name (CBTI, Zero)

    F89E: 08 43 42 54 49 00                                // .CBTI.

            Name (PBTI, Zero)

    F8A4: 08 50 42 54 49 00                                // .PBTI.

            Name (BTIN, Zero)

    F8AA: 08 42 54 49 4E 00                                // .BTIN.

            Name (BTCH, Zero)

    F8B0: 08 42 54 43 48 00                                // .BTCH.

            Name (BIFI, Zero)

    F8B6: 08 42 49 46 49 00                                // .BIFI.

            Name (SEL0, Zero)

    F8BC: 08 53 45 4C 30 00                                // .SEL0.

            Name (BCRI, Zero)

    F8C2: 08 42 43 52 49 00                                // .BCRI.

            Name (PBIF, 
    F8C8: 08 50 42 49 46                                   // .PBIF

Package (0x0D)
            {
                One, 
                0x1130, 
                0x1130, 
                One, 
                0x2B5C, 
                0x012C, 
                0x84, 
                0x20, 
                0x20, 
                "BAT1      ", 
                "11        ", 
                "11        ", 
                "11        "
            })

    F8CD: 12 47 04 0D 01 0B 30 11 0B 30 11 01 0B 5C 2B 0B  // .G....0..0...\+.
    F8DD: 2C 01 0A 84 0A 20 0A 20 0D 42 41 54 31 20 20 20  // ,.... . .BAT1   
    F8ED: 20 20 20 00 0D 31 31 20 20 20 20 20 20 20 20 00  //    ..11        .
    F8FD: 0D 31 31 20 20 20 20 20 20 20 20 00 0D 31 31 20  // .11        ..11 
    F90D: 20 20 20 20 20 20 20 00                          //        .

            Name (PBIX, 
    F915: 08 50 42 49 58                                   // .PBIX

Package (0x14)
            {
                Zero, 
                One, 
                0x1130, 
                0x1130, 
                One, 
                0x2B5C, 
                0x012C, 
                0x84, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                Zero, 
                0x20, 
                0x20, 
                "BAT1      ", 
                "11        ", 
                "11        ", 
                "11        "
            })

    F91A: 12 4E 04 14 00 01 0B 30 11 0B 30 11 01 0B 5C 2B  // .N.....0..0...\+
    F92A: 0B 2C 01 0A 84 00 00 00 00 00 00 0A 20 0A 20 0D  // .,.......... . .
    F93A: 42 41 54 31 20 20 20 20 20 20 00 0D 31 31 20 20  // BAT1      ..11  
    F94A: 20 20 20 20 20 20 00 0D 31 31 20 20 20 20 20 20  //       ..11      
    F95A: 20 20 00 0D 31 31 20 20 20 20 20 20 20 20 00     //   ..11        .

            Name (PBST, 
    F969: 08 50 42 53 54                                   // .PBST

Package (0x04)
            {
                Zero, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0x2710
            })

    F96E: 12 10 04 00 0C FF FF FF FF 0C FF FF FF FF 0B 10  // ................
    F97E: 27                                               // '

            Name (ERRC, Zero)

    F97F: 08 45 52 52 43 00                                // .ERRC.

            Name (_PCL, 
    F985: 08 5F 50 43 4C                                   // ._PCL

Package (0x01)  // _PCL: Power Consumer List
            {
                _SB
            })

    F98A: 12 06 01 5F 53 42 5F                             // ..._SB_

            Name (BTPF, Zero)

    F991: 08 42 54 50 46 00                                // .BTPF.

            Method (_BTP, 1, NotSerialized)  // _BTP: Battery Trip Point
            {

    F997: 14 0C 5F 42 54 50 01                             // .._BTP.

                Store (Arg0, BTPF) /* \_SB_.BAT1.BTPF */
            }


    F99E: 70 68 42 54 50 46                                // phBTPF

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

    F9A4: 14 2F 5F 53 54 41 00                             // ./_STA.

                If (ECOK)
                {

    F9AB: A0 23 45 43 4F 4B                                // .#ECOK

                    If (^^PCI0.LPCB.EC0.MBTS)
                    {

    F9B1: A0 18 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
    F9C1: 30 5F 4D 42 54 53                                // 0_MBTS

                        Return (0x1F)
                    }

    F9C7: A4 0A 1F                                         // ...

                    Else
                    {

    F9CA: A1 04                                            // ..

                        Return (0x0F)
                    }
                }

    F9CC: A4 0A 0F                                         // ...

                Else
                {

    F9CF: A1 04                                            // ..

                    Return (0x0F)
                }
            }


    F9D1: A4 0A 0F                                         // ...

            Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
            {
                IVBI ()

    F9D4: 14 2F 5F 42 49 46 00 49 56 42 49                 // ./_BIF.IVBI

                If (ECOK)
                {

    F9DF: A0 1F 45 43 4F 4B                                // ..ECOK

                    If (^^PCI0.LPCB.EC0.MBTS)
                    {
                        UBIF ()
                    }
                }


    F9E5: A0 19 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
    F9F5: 30 5F 4D 42 54 53 55 42 49 46                    // 0_MBTSUBIF

                Return (PBIF) /* \_SB_.BAT1.PBIF */
            }


    F9FF: A4 50 42 49 46                                   // .PBIF

            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended
            {
                IVBX ()

    FA04: 14 2F 5F 42 49 58 00 49 56 42 58                 // ./_BIX.IVBX

                If (ECOK)
                {

    FA0F: A0 1F 45 43 4F 4B                                // ..ECOK

                    If (^^PCI0.LPCB.EC0.MBTS)
                    {
                        UBIX ()
                    }
                }


    FA15: A0 19 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
    FA25: 30 5F 4D 42 54 53 55 42 49 58                    // 0_MBTSUBIX

                Return (PBIX) /* \_SB_.BAT1.PBIX */
            }


    FA2F: A4 50 42 49 58                                   // .PBIX

            Method (IVBI, 0, NotSerialized)
            {
                Store (0xFFFFFFFF, 
    FA34: 14 4B 06 49 56 42 49 00 70 0C FF FF FF FF        // .K.IVBI.p.....

Index (PBIF, One))
                Store (0xFFFFFFFF, 
    FA42: 88 50 42 49 46 01 00 70 0C FF FF FF FF           // .PBIF..p.....

Index (PBIF, 0x02))
                Store (0xFFFFFFFF, 
    FA4F: 88 50 42 49 46 0A 02 00 70 0C FF FF FF FF        // .PBIF...p.....

Index (PBIF, 0x04))
                Store ("Bad", 
    FA5D: 88 50 42 49 46 0A 04 00 70 0D 42 61 64 00        // .PBIF...p.Bad.

Index (PBIF, 0x09))
                Store ("      ", 
    FA6B: 88 50 42 49 46 0A 09 00 70 0D 20 20 20 20 20 20  // .PBIF...p.      
    FA7B: 00                                               // .

Index (PBIF, 0x0A))
                Store ("Bad", 
    FA7C: 88 50 42 49 46 0A 0A 00 70 0D 42 61 64 00        // .PBIF...p.Bad.

Index (PBIF, 0x0B))

    FA8A: 88 50 42 49 46 0A 0B 00                          // .PBIF...

                Store ("Bad", 
    FA92: 70 0D 42 61 64 00                                // p.Bad.

Index (PBIF, 0x0C))
            }


    FA98: 88 50 42 49 46 0A 0C 00                          // .PBIF...

            Name (LFCC, 0x1130)

    FAA0: 08 4C 46 43 43 0B 30 11                          // .LFCC.0.

            Method (UBIF, 0, Serialized)
            {

    FAA8: 14 49 2B 55 42 49 46 08                          // .I+UBIF.


    FAB0: 08 5F 54 5F 31 00                                // ._T_1.


    FAB6: 08 5F 54 5F 30 00                                // ._T_0.

                If (ECOK)
                {
                    Acquire (^^PCI0.LPCB.EC0.MUT1, 0xFFFF)
                    Store (^^PCI0.LPCB.EC0.BTDC, Local0)
                    Store (^^PCI0.LPCB.EC0.LFCC, Local1)
                    Store (^^PCI0.LPCB.EC0.BTDV, Local2)
                    Store (^^PCI0.LPCB.EC0.BTMD, Local3)
                    Store (^^PCI0.LPCB.EC0.BTMN, Local4)
                    Store (^^PCI0.LPCB.EC0.BTSN, Local5)
                    Release (^^PCI0.LPCB.EC0.MUT1)
                    Store (Local0, 
    FABC: A0 45 2A 45 43 4F 4B 5B 23 5E 5E 2F 04 50 43 49  // .E*ECOK[#^^/.PCI
    FACC: 30 4C 50 43 42 45 43 30 5F 4D 55 54 31 FF FF 70  // 0LPCBEC0_MUT1..p
    FADC: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F  // ^^/.PCI0LPCBEC0_
    FAEC: 42 54 44 43 60 70 5E 5E 2F 04 50 43 49 30 4C 50  // BTDC`p^^/.PCI0LP
    FAFC: 43 42 45 43 30 5F 4C 46 43 43 61 70 5E 5E 2F 04  // CBEC0_LFCCap^^/.
    FB0C: 50 43 49 30 4C 50 43 42 45 43 30 5F 42 54 44 56  // PCI0LPCBEC0_BTDV
    FB1C: 62 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // bp^^/.PCI0LPCBEC
    FB2C: 30 5F 42 54 4D 44 63 70 5E 5E 2F 04 50 43 49 30  // 0_BTMDcp^^/.PCI0
    FB3C: 4C 50 43 42 45 43 30 5F 42 54 4D 4E 64 70 5E 5E  // LPCBEC0_BTMNdp^^
    FB4C: 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 42 54  // /.PCI0LPCBEC0_BT
    FB5C: 53 4E 65 5B 27 5E 5E 2F 04 50 43 49 30 4C 50 43  // SNe['^^/.PCI0LPC
    FB6C: 42 45 43 30 5F 4D 55 54 31 70 60                 // BEC0_MUT1p`

Index (PBIF, One))
                    Store (Local1, 
    FB77: 88 50 42 49 46 01 00 70 61                       // .PBIF..pa

Index (PBIF, 0x02))
                    Store (Local2, 
    FB80: 88 50 42 49 46 0A 02 00 70 62                    // .PBIF...pb

Index (PBIF, 0x04))
                    Store (Local1, LFCC) /* \_SB_.BAT1.LFCC */
                    Multiply (Local1, 0x04, Local7)
                    Divide (Local7, 0x64, , Local7)
                    Store (Local7, 
    FB8A: 88 50 42 49 46 0A 04 00 70 61 4C 46 43 43 77 61  // .PBIF...paLFCCwa
    FB9A: 0A 04 67 78 67 0A 64 00 67 70 67                 // ..gxg.d.gpg

Index (PBIF, 0x06))
                    Store ("LION", 
    FBA5: 88 50 42 49 46 0A 06 00 70 0D 4C 49 4F 4E 00     // .PBIF...p.LION.

Index (PBIF, 0x0B))

    FBB4: 88 50 42 49 46 0A 0B 00                          // .PBIF...

                    Switch (Local3)
                    {

    FBBC: A2 4F 08 01 70 63 5F 54 5F 30                    // .O..pc_T_0

                        Case (One)
                        {

    FBC6: A0 19 93 5F 54 5F 30 01                          // ..._T_0.

                            Store ("AL15A32", 
    FBCE: 70 0D 41 4C 31 35 41 33 32 00                    // p.AL15A32.

Index (PBIF, 0x09))
                        }

    FBD8: 88 50 42 49 46 0A 09 00                          // .PBIF...

                        Case
    FBE0: A1 4A 06                                         // .J.

 (0x02)
                        {

    FBE3: A0 1A 93 5F 54 5F 30 0A 02                       // ..._T_0..

                            Store ("AL12A32", 
    FBEC: 70 0D 41 4C 31 32 41 33 32 00                    // p.AL12A32.

Index (PBIF, 0x09))
                        }

    FBF6: 88 50 42 49 46 0A 09 00                          // .PBIF...

                        Case
    FBFE: A1 4C 04                                         // .L.

 (0x03)
                        {

    FC01: A0 1A 93 5F 54 5F 30 0A 03                       // ..._T_0..

                            Store ("AP13B3K", 
    FC0A: 70 0D 41 50 31 33 42 33 4B 00                    // p.AP13B3K.

Index (PBIF, 0x09))
                        }

    FC14: 88 50 42 49 46 0A 09 00                          // .PBIF...

                        Case
    FC1C: A1 2E                                            // ..

 (0x04)
                        {

    FC1E: A0 1A 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            Store ("AC14B8K", 
    FC27: 70 0D 41 43 31 34 42 38 4B 00                    // p.AC14B8K.

Index (PBIF, 0x09))
                        }

    FC31: 88 50 42 49 46 0A 09 00                          // .PBIF...

                        Default
                        {

    FC39: A1 11                                            // ..

                            Store ("xxxxx", 
    FC3B: 70 0D 78 78 78 78 78 00                          // p.xxxxx.

Index (PBIF, 0x09))
                        }


    FC43: 88 50 42 49 46 0A 09 00                          // .PBIF...

                    }


    FC4B: A5                                               // .

                    Switch (Local4)
                    {

    FC4C: A2 44 10 01 70 64 5F 54 5F 31                    // .D..pd_T_1

                        Case (0x03)
                        {

    FC56: A0 18 93 5F 54 5F 31 0A 03                       // ..._T_1..

                            Store ("SANYO", 
    FC5F: 70 0D 53 41 4E 59 4F 00                          // p.SANYO.

Index (PBIF, 0x0C))
                        }

    FC67: 88 50 42 49 46 0A 0C 00                          // .PBIF...

                        Case
    FC6F: A1 40 0E                                         // .@.

 (0x04)
                        {

    FC72: A0 17 93 5F 54 5F 31 0A 04                       // ..._T_1..

                            Store ("SONY", 
    FC7B: 70 0D 53 4F 4E 59 00                             // p.SONY.

Index (PBIF, 0x0C))
                        }

    FC82: 88 50 42 49 46 0A 0C 00                          // .PBIF...

                        Case
    FC8A: A1 45 0C                                         // .E.

 (0x05)
                        {

    FC8D: A0 1C 93 5F 54 5F 31 0A 05                       // ..._T_1..

                            Store ("PANASONIC", 
    FC96: 70 0D 50 41 4E 41 53 4F 4E 49 43 00              // p.PANASONIC.

Index (PBIF, 0x0C))
                        }

    FCA2: 88 50 42 49 46 0A 0C 00                          // .PBIF...

                        Case
    FCAA: A1 45 0A                                         // .E.

 (0x06)
                        {

    FCAD: A0 1A 93 5F 54 5F 31 0A 06                       // ..._T_1..

                            Store ("SAMSUNG", 
    FCB6: 70 0D 53 41 4D 53 55 4E 47 00                    // p.SAMSUNG.

Index (PBIF, 0x0C))
                        }

    FCC0: 88 50 42 49 46 0A 0C 00                          // .PBIF...

                        Case
    FCC8: A1 47 08                                         // .G.

 (0x07)
                        {

    FCCB: A0 19 93 5F 54 5F 31 0A 07                       // ..._T_1..

                            Store ("SIMPLO", 
    FCD4: 70 0D 53 49 4D 50 4C 4F 00                       // p.SIMPLO.

Index (PBIF, 0x0C))
                        }

    FCDD: 88 50 42 49 46 0A 0C 00                          // .PBIF...

                        Case
    FCE5: A1 4A 06                                         // .J.

 (0x08)
                        {

    FCE8: A0 1B 93 5F 54 5F 31 0A 08                       // ..._T_1..

                            Store ("MOTOROLA", 
    FCF1: 70 0D 4D 4F 54 4F 52 4F 4C 41 00                 // p.MOTOROLA.

Index (PBIF, 0x0C))
                        }

    FCFC: 88 50 42 49 46 0A 0C 00                          // .PBIF...

                        Case
    FD04: A1 4B 04                                         // .K.

 (0x09)
                        {

    FD07: A0 1B 93 5F 54 5F 31 0A 09                       // ..._T_1..

                            Store ("CELXPERT", 
    FD10: 70 0D 43 45 4C 58 50 45 52 54 00                 // p.CELXPERT.

Index (PBIF, 0x0C))
                        }

    FD1B: 88 50 42 49 46 0A 0C 00                          // .PBIF...

                        Case
    FD23: A1 2C                                            // .,

 (0x0A)
                        {

    FD25: A0 16 93 5F 54 5F 31 0A 0A                       // ..._T_1..

                            Store ("LGC", 
    FD2E: 70 0D 4C 47 43 00                                // p.LGC.

Index (PBIF, 0x0C))
                        }

    FD34: 88 50 42 49 46 0A 0C 00                          // .PBIF...

                        Default
                        {

    FD3C: A1 13                                            // ..

                            Store ("UNKNOWN", 
    FD3E: 70 0D 55 4E 4B 4E 4F 57 4E 00                    // p.UNKNOWN.

Index (PBIF, 0x0C))
                        }


    FD48: 88 50 42 49 46 0A 0C 00                          // .PBIF...

                    }


    FD50: A5                                               // .

                    Store (ITOS (
    FD51: 70 49 54 4F 53                                   // pITOS

ToBCD (Local5)), 
    FD56: 5B 29 65 00                                      // [)e.

Index (PBIF, 0x0A))
                }
            }


    FD5A: 88 50 42 49 46 0A 0A 00                          // .PBIF...

            Method (IVBX, 0, NotSerialized)
            {
                Store (0xFFFFFFFF, 
    FD62: 14 4C 06 49 56 42 58 00 70 0C FF FF FF FF        // .L.IVBX.p.....

Index (PBIX, 0x02))
                Store (0xFFFFFFFF, 
    FD70: 88 50 42 49 58 0A 02 00 70 0C FF FF FF FF        // .PBIX...p.....

Index (PBIX, 0x03))
                Store (0xFFFFFFFF, 
    FD7E: 88 50 42 49 58 0A 03 00 70 0C FF FF FF FF        // .PBIX...p.....

Index (PBIX, 0x05))
                Store ("Bad", 
    FD8C: 88 50 42 49 58 0A 05 00 70 0D 42 61 64 00        // .PBIX...p.Bad.

Index (PBIX, 0x10))
                Store ("      ", 
    FD9A: 88 50 42 49 58 0A 10 00 70 0D 20 20 20 20 20 20  // .PBIX...p.      
    FDAA: 00                                               // .

Index (PBIX, 0x11))
                Store ("Bad", 
    FDAB: 88 50 42 49 58 0A 11 00 70 0D 42 61 64 00        // .PBIX...p.Bad.

Index (PBIX, 0x12))

    FDB9: 88 50 42 49 58 0A 12 00                          // .PBIX...

                Store ("Bad", 
    FDC1: 70 0D 42 61 64 00                                // p.Bad.

Index (PBIX, 0x13))
            }


    FDC7: 88 50 42 49 58 0A 13 00                          // .PBIX...

            Method (UBIX, 0, Serialized)
            {

    FDCF: 14 4C 2B 55 42 49 58 08                          // .L+UBIX.


    FDD7: 08 5F 54 5F 31 00                                // ._T_1.


    FDDD: 08 5F 54 5F 30 00                                // ._T_0.

                If (ECOK)
                {
                    Acquire (^^PCI0.LPCB.EC0.MUT1, 0xFFFF)
                    Store (^^PCI0.LPCB.EC0.BTDC, Local0)
                    Store (^^PCI0.LPCB.EC0.LFCC, Local1)
                    Store (^^PCI0.LPCB.EC0.BTDV, Local2)
                    Store (^^PCI0.LPCB.EC0.BTMD, Local3)
                    Store (^^PCI0.LPCB.EC0.BTMN, Local4)
                    Store (^^PCI0.LPCB.EC0.BTSN, Local5)
                    Release (^^PCI0.LPCB.EC0.MUT1)
                    Store (Local0, 
    FDE3: A0 48 2A 45 43 4F 4B 5B 23 5E 5E 2F 04 50 43 49  // .H*ECOK[#^^/.PCI
    FDF3: 30 4C 50 43 42 45 43 30 5F 4D 55 54 31 FF FF 70  // 0LPCBEC0_MUT1..p
    FE03: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F  // ^^/.PCI0LPCBEC0_
    FE13: 42 54 44 43 60 70 5E 5E 2F 04 50 43 49 30 4C 50  // BTDC`p^^/.PCI0LP
    FE23: 43 42 45 43 30 5F 4C 46 43 43 61 70 5E 5E 2F 04  // CBEC0_LFCCap^^/.
    FE33: 50 43 49 30 4C 50 43 42 45 43 30 5F 42 54 44 56  // PCI0LPCBEC0_BTDV
    FE43: 62 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // bp^^/.PCI0LPCBEC
    FE53: 30 5F 42 54 4D 44 63 70 5E 5E 2F 04 50 43 49 30  // 0_BTMDcp^^/.PCI0
    FE63: 4C 50 43 42 45 43 30 5F 42 54 4D 4E 64 70 5E 5E  // LPCBEC0_BTMNdp^^
    FE73: 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 42 54  // /.PCI0LPCBEC0_BT
    FE83: 53 4E 65 5B 27 5E 5E 2F 04 50 43 49 30 4C 50 43  // SNe['^^/.PCI0LPC
    FE93: 42 45 43 30 5F 4D 55 54 31 70 60                 // BEC0_MUT1p`

Index (PBIX, 0x02))
                    Store (Local1, 
    FE9E: 88 50 42 49 58 0A 02 00 70 61                    // .PBIX...pa

Index (PBIX, 0x03))
                    Store (Local2, 
    FEA8: 88 50 42 49 58 0A 03 00 70 62                    // .PBIX...pb

Index (PBIX, 0x05))
                    Store (Local1, LFCC) /* \_SB_.BAT1.LFCC */
                    Multiply (Local1, 0x04, Local7)
                    Divide (Local7, 0x64, , Local7)
                    Store (Local7, 
    FEB2: 88 50 42 49 58 0A 05 00 70 61 4C 46 43 43 77 61  // .PBIX...paLFCCwa
    FEC2: 0A 04 67 78 67 0A 64 00 67 70 67                 // ..gxg.d.gpg

Index (PBIX, 0x07))
                    Store ("LION", 
    FECD: 88 50 42 49 58 0A 07 00 70 0D 4C 49 4F 4E 00     // .PBIX...p.LION.

Index (PBIX, 0x12))

    FEDC: 88 50 42 49 58 0A 12 00                          // .PBIX...

                    Switch (Local3)
                    {

    FEE4: A2 41 09 01 70 63 5F 54 5F 30                    // .A..pc_T_0

                        Case (One)
                        {

    FEEE: A0 19 93 5F 54 5F 30 01                          // ..._T_0.

                            Store ("AL15A32", 
    FEF6: 70 0D 41 4C 31 35 41 33 32 00                    // p.AL15A32.

Index (PBIX, 0x10))
                        }

    FF00: 88 50 42 49 58 0A 10 00                          // .PBIX...

                        Case
    FF08: A1 4C 06                                         // .L.

 (0x02)
                        {

    FF0B: A0 1A 93 5F 54 5F 30 0A 02                       // ..._T_0..

                            Store ("AL12A32", 
    FF14: 70 0D 41 4C 31 32 41 33 32 00                    // p.AL12A32.

Index (PBIX, 0x10))
                        }

    FF1E: 88 50 42 49 58 0A 10 00                          // .PBIX...

                        Case
    FF26: A1 4E 04                                         // .N.

 (0x03)
                        {

    FF29: A0 1A 93 5F 54 5F 30 0A 03                       // ..._T_0..

                            Store ("AP13B3K", 
    FF32: 70 0D 41 50 31 33 42 33 4B 00                    // p.AP13B3K.

Index (PBIX, 0x10))
                        }

    FF3C: 88 50 42 49 58 0A 10 00                          // .PBIX...

                        Case
    FF44: A1 30                                            // .0

 (0x04)
                        {

    FF46: A0 1A 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            Store ("AC14B8K", 
    FF4F: 70 0D 41 43 31 34 42 38 4B 00                    // p.AC14B8K.

Index (PBIX, 0x10))
                        }

    FF59: 88 50 42 49 58 0A 10 00                          // .PBIX...

                        Default
                        {

    FF61: A1 13                                            // ..

                            Store ("UNKNOWN", 
    FF63: 70 0D 55 4E 4B 4E 4F 57 4E 00                    // p.UNKNOWN.

Index (PBIX, 0x10))
                        }


    FF6D: 88 50 42 49 58 0A 10 00                          // .PBIX...

                    }


    FF75: A5                                               // .

                    Switch (Local4)
                    {

    FF76: A2 44 10 01 70 64 5F 54 5F 31                    // .D..pd_T_1

                        Case (0x03)
                        {

    FF80: A0 18 93 5F 54 5F 31 0A 03                       // ..._T_1..

                            Store ("SANYO", 
    FF89: 70 0D 53 41 4E 59 4F 00                          // p.SANYO.

Index (PBIX, 0x13))
                        }

    FF91: 88 50 42 49 58 0A 13 00                          // .PBIX...

                        Case
    FF99: A1 40 0E                                         // .@.

 (0x04)
                        {

    FF9C: A0 17 93 5F 54 5F 31 0A 04                       // ..._T_1..

                            Store ("SONY", 
    FFA5: 70 0D 53 4F 4E 59 00                             // p.SONY.

Index (PBIX, 0x13))
                        }

    FFAC: 88 50 42 49 58 0A 13 00                          // .PBIX...

                        Case
    FFB4: A1 45 0C                                         // .E.

 (0x05)
                        {

    FFB7: A0 1C 93 5F 54 5F 31 0A 05                       // ..._T_1..

                            Store ("PANASONIC", 
    FFC0: 70 0D 50 41 4E 41 53 4F 4E 49 43 00              // p.PANASONIC.

Index (PBIX, 0x13))
                        }

    FFCC: 88 50 42 49 58 0A 13 00                          // .PBIX...

                        Case
    FFD4: A1 45 0A                                         // .E.

 (0x06)
                        {

    FFD7: A0 1A 93 5F 54 5F 31 0A 06                       // ..._T_1..

                            Store ("SAMSUNG", 
    FFE0: 70 0D 53 41 4D 53 55 4E 47 00                    // p.SAMSUNG.

Index (PBIX, 0x13))
                        }

    FFEA: 88 50 42 49 58 0A 13 00                          // .PBIX...

                        Case
    FFF2: A1 47 08                                         // .G.

 (0x07)
                        {

    FFF5: A0 19 93 5F 54 5F 31 0A 07                       // ..._T_1..

                            Store ("SIMPLO", 
    FFFE: 70 0D 53 49 4D 50 4C 4F 00                       // p.SIMPLO.

Index (PBIX, 0x13))
                        }

   10007: 88 50 42 49 58 0A 13 00                          // .PBIX...

                        Case
   1000F: A1 4A 06                                         // .J.

 (0x08)
                        {

   10012: A0 1B 93 5F 54 5F 31 0A 08                       // ..._T_1..

                            Store ("MOTOROLA", 
   1001B: 70 0D 4D 4F 54 4F 52 4F 4C 41 00                 // p.MOTOROLA.

Index (PBIX, 0x13))
                        }

   10026: 88 50 42 49 58 0A 13 00                          // .PBIX...

                        Case
   1002E: A1 4B 04                                         // .K.

 (0x09)
                        {

   10031: A0 1B 93 5F 54 5F 31 0A 09                       // ..._T_1..

                            Store ("CELXPERT", 
   1003A: 70 0D 43 45 4C 58 50 45 52 54 00                 // p.CELXPERT.

Index (PBIX, 0x13))
                        }

   10045: 88 50 42 49 58 0A 13 00                          // .PBIX...

                        Case
   1004D: A1 2C                                            // .,

 (0x0A)
                        {

   1004F: A0 16 93 5F 54 5F 31 0A 0A                       // ..._T_1..

                            Store ("LGC", 
   10058: 70 0D 4C 47 43 00                                // p.LGC.

Index (PBIX, 0x13))
                        }

   1005E: 88 50 42 49 58 0A 13 00                          // .PBIX...

                        Default
                        {

   10066: A1 13                                            // ..

                            Store ("UNKNOWN", 
   10068: 70 0D 55 4E 4B 4E 4F 57 4E 00                    // p.UNKNOWN.

Index (PBIX, 0x13))
                        }


   10072: 88 50 42 49 58 0A 13 00                          // .PBIX...

                    }


   1007A: A5                                               // .

                    Store (ITOS (
   1007B: 70 49 54 4F 53                                   // pITOS

ToBCD (Local5)), 
   10080: 5B 29 65 00                                      // [)e.

Index (PBIX, 0x11))
                }
            }


   10084: 88 50 42 49 58 0A 11 00                          // .PBIX...

            Name (RCAP, Zero)

   1008C: 08 52 43 41 50 00                                // .RCAP.

            Method (_BST, 0, NotSerialized)  // _BST: Battery Status
            {

   10092: 14 4A 17 5F 42 53 54 00                          // .J._BST.

                If (ECOK)
                {
                    Store (^^PCI0.LPCB.EC0.MBTS, Local0)

   1009A: A0 43 13 45 43 4F 4B 70 5E 5E 2F 04 50 43 49 30  // .C.ECOKp^^/.PCI0
   100AA: 4C 50 43 42 45 43 30 5F 4D 42 54 53 60           // LPCBEC0_MBTS`

                    If (LEqual (Local0, Zero))
                    {
                        Store (Zero, 
   100B7: A0 42 04 93 60 00 70 00                          // .B..`.p.

Index (PBST, Zero))
                        Store (0xFFFFFFFF, 
   100BF: 88 50 42 53 54 00 00 70 0C FF FF FF FF           // .PBST..p.....

Index (PBST, One))
                        Store (0xFFFFFFFF, 
   100CC: 88 50 42 53 54 01 00 70 0C FF FF FF FF           // .PBST..p.....

Index (PBST, 0x02))
                        Store (0xFFFFFFFF, 
   100D9: 88 50 42 53 54 0A 02 00 70 0C FF FF FF FF        // .PBST...p.....

Index (PBST, 0x03))
                        Store (Zero, RCAP) /* \_SB_.BAT1.RCAP */

   100E7: 88 50 42 53 54 0A 03 00 70 00 52 43 41 50        // .PBST...p.RCAP

                        Return (PBST) /* \_SB_.BAT1.PBST */
                    }

                    Store (^^PCI0.LPCB.EC0.MBRM, Local1)
                    Store (Local1, 
   100F5: A4 50 42 53 54 70 5E 5E 2F 04 50 43 49 30 4C 50  // .PBSTp^^/.PCI0LP
   10105: 43 42 45 43 30 5F 4D 42 52 4D 61 70 61           // CBEC0_MBRMapa

Index (PBST, 0x02))
                    Store (Local1, RCAP) /* \_SB_.BAT1.RCAP */
                    Store (^^PCI0.LPCB.EC0.MCUR, Local3)
                    Store (POSW (Local3), 
   10112: 88 50 42 53 54 0A 02 00 70 61 52 43 41 50 70 5E  // .PBST...paRCAPp^
   10122: 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 30 5F 4D  // ^/.PCI0LPCBEC0_M
   10132: 43 55 52 63 70 50 4F 53 57 63                    // CURcpPOSWc

Index (PBST, One))

   1013C: 88 50 42 53 54 01 00                             // .PBST..

                    If (^^PCI0.LPCB.EC0.MFCF)
                    {

   10143: A0 1E 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
   10153: 30 5F 4D 46 43 46                                // 0_MFCF

                        Store (Zero, 
   10159: 70 00                                            // p.

Index (PBST, Zero))
                    }

   1015B: 88 50 42 53 54 00 00                             // .PBST..

                    ElseIf
   10162: A1 4E 04                                         // .N.

 (^^PCI0.LPCB.EC0.MBPC)
                    {

   10165: A0 1F 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
   10175: 30 5F 4D 42 50 43                                // 0_MBPC

                        Store (0x02, 
   1017B: 70 0A 02                                         // p..

Index (PBST, Zero))
                    }

   1017E: 88 50 42 53 54 00 00                             // .PBST..

                    ElseIf
   10185: A1 2B                                            // .+

 (^^PCI0.LPCB.EC0.MBDX)
                    {

   10187: A0 1E 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
   10197: 30 5F 4D 42 44 58                                // 0_MBDX

                        Store (One, 
   1019D: 70 01                                            // p.

Index (PBST, Zero))
                    }

   1019F: 88 50 42 53 54 00 00                             // .PBST..

                    Else
                    {

   101A6: A1 0A                                            // ..

                        Store (Zero, 
   101A8: 70 00                                            // p.

Index (PBST, Zero))
                    }


   101AA: 88 50 42 53 54 00 00                             // .PBST..

                    Store (^^PCI0.LPCB.EC0.MBVG, 
   101B1: 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 30  // p^^/.PCI0LPCBEC0
   101C1: 5F 4D 42 56 47                                   // _MBVG

Index (PBST, 0x03))
                }

   101C6: 88 50 42 53 54 0A 03 00                          // .PBST...

                Else
                {
                    Store (Zero, 
   101CE: A1 39 70 00                                      // .9p.

Index (PBST, Zero))
                    Store (0xFFFFFFFF, 
   101D2: 88 50 42 53 54 00 00 70 0C FF FF FF FF           // .PBST..p.....

Index (PBST, One))
                    Store (0xFFFFFFFF, 
   101DF: 88 50 42 53 54 01 00 70 0C FF FF FF FF           // .PBST..p.....

Index (PBST, 0x02))
                    Store (0xFFFFFFFF, 
   101EC: 88 50 42 53 54 0A 02 00 70 0C FF FF FF FF        // .PBST...p.....

Index (PBST, 0x03))

   101FA: 88 50 42 53 54 0A 03 00                          // .PBST...

                    Store (Zero, RCAP) /* \_SB_.BAT1.RCAP */
                }


   10202: 70 00 52 43 41 50                                // p.RCAP

                Return (PBST) /* \_SB_.BAT1.PBST */
            }
        }
    }


   10208: A4 50 42 53 54                                   // .PBST

    Scope (_SB)
    {

   1020D: 10 45 06 5F 53 42 5F                             // .E._SB_

        Device (LID0)
        {

   10214: 5B 82 4D 05 4C 49 44 30                          // [.M.LID0

            Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID

   1021C: 08 5F 48 49 44 0C 41 D0 0C 0D                    // ._HID.A...

            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {

   10226: 14 4C 04 5F 4C 49 44 00                          // .L._LID.

                If (LEqual (^^PCI0.LPCB.EC0.TESM, 0x08))
                {

   1022E: A0 1A 93 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // ...^^/.PCI0LPCBE
   1023E: 43 30 5F 54 45 53 4D 0A 08                       // C0_TESM..

                    Return (One)
                }


   10247: A4 01                                            // ..

                If (^^PCI0.LPCB.EC0.LIDT)
                {
                    WTGP (0x53, Zero)

   10249: A0 1E 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
   10259: 30 5F 4C 49 44 54 57 54 47 50 0A 53 00           // 0_LIDTWTGP.S.

                    Return (Zero)
                }

   10266: A4 00                                            // ..

                Else
                {
                    WTGP (0x53, One)

   10268: A1 0A 57 54 47 50 0A 53 01                       // ..WTGP.S.

                    Return (One)
                }
            }
        }
    }


   10271: A4 01                                            // ..

    Scope (_TZ)
    {

   10273: 10 40 1E 5F 54 5A 5F                             // .@._TZ_

        ThermalZone (TZ01)
        {

   1027A: 5B 85 48 1D 54 5A 30 31                          // [.H.TZ01

            Method (_TMP, 0, NotSerialized)  // _TMP: Temperature
            {

   10282: 14 3C 5F 54 4D 50 00                             // .<_TMP.

                If (\_SB.ECOK)
                {
                    Store (\_SB.PCI0.LPCB.EC0.CTMP, Local0)

   10289: A0 2F 5C 2E 5F 53 42 5F 45 43 4F 4B 70 5C 2F 05  // ./\._SB_ECOKp\/.
   10299: 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 43 30 5F  // _SB_PCI0LPCBEC0_
   102A9: 43 54 4D 50 60                                   // CTMP`

                    Return (
   102AE: A4                                               // .

Add (Multiply (Local0, 0x0A), 0x0AAC))
                }

   102AF: 72 77 60 0A 0A 00 0B AC 0A 00                    // rw`.......

                Else
                {

   102B9: A1 05                                            // ..

                    Return (0x0C3C)
                }
            }


   102BB: A4 0B 3C 0C                                      // ..<.

            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
            {

   102BF: 14 46 0B 5F 50 53 56 00                          // .F._PSV.

                If (LEqual (\_SB.PCI0.LPCB.EC0.TJMX, Zero))
                {

   102C7: A0 1E 93 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // ...\/._SB_PCI0LP
   102D7: 43 42 45 43 30 5F 54 4A 4D 58 00                 // CBEC0_TJMX.

                    Return (0x0F5C)
                }

   102E2: A4 0B 5C 0F                                      // ..\.

                ElseIf
   102E6: A1 4F 08                                         // .O.

 (LEqual (\_SB.PCI0.LPCB.EC0.TJMX, One))
                {

   102E9: A0 1E 93 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // ...\/._SB_PCI0LP
   102F9: 43 42 45 43 30 5F 54 4A 4D 58 01                 // CBEC0_TJMX.

                    Return (0x0F5C)
                }

   10304: A4 0B 5C 0F                                      // ..\.

                ElseIf
   10308: A1 4D 06                                         // .M.

 (LEqual (\_SB.PCI0.LPCB.EC0.TJMX, 0x02))
                {

   1030B: A0 1F 93 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // ...\/._SB_PCI0LP
   1031B: 43 42 45 43 30 5F 54 4A 4D 58 0A 02              // CBEC0_TJMX..

                    Return (0x0F5C)
                }

   10327: A4 0B 5C 0F                                      // ..\.

                ElseIf
   1032B: A1 4A 04                                         // .J.

 (LEqual (\_SB.PCI0.LPCB.EC0.TJMX, 0x03))
                {

   1032E: A0 1F 93 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // ...\/._SB_PCI0LP
   1033E: 43 42 45 43 30 5F 54 4A 4D 58 0A 03              // CBEC0_TJMX..

                    Return (0x0F5C)
                }

   1034A: A4 0B 5C 0F                                      // ..\.

                ElseIf
   1034E: A1 27                                            // .'

 (LEqual (\_SB.PCI0.LPCB.EC0.TJMX, 0x04))
                {

   10350: A0 1F 93 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // ...\/._SB_PCI0LP
   10360: 43 42 45 43 30 5F 54 4A 4D 58 0A 04              // CBEC0_TJMX..

                    Return (0x0F5C)
                }

   1036C: A4 0B 5C 0F                                      // ..\.

                Else
                {

   10370: A1 05                                            // ..

                    Return (0x0F5C)
                }
            }


   10372: A4 0B 5C 0F                                      // ..\.

            Name (_PSL, 
   10376: 08 5F 50 53 4C                                   // ._PSL

Package (0x01)  // _PSL: Passive List
            {
                \_PR.CPU0
            })

   1037B: 12 0C 01 5C 2E 5F 50 52 5F 43 50 55 30           // ...\._PR_CPU0

            Name (_TSP, 0x28)  // _TSP: Thermal Sampling Period

   10388: 08 5F 54 53 50 0A 28                             // ._TSP.(

            Name (_TC1, 0x02)  // _TC1: Thermal Constant 1

   1038F: 08 5F 54 43 31 0A 02                             // ._TC1..

            Name (_TC2, 0x03)  // _TC2: Thermal Constant 2

   10396: 08 5F 54 43 32 0A 03                             // ._TC2..

            Method (_CRT, 0, NotSerialized)  // _CRT: Critical Temperature
            {

   1039D: 14 46 0B 5F 43 52 54 00                          // .F._CRT.

                If (LEqual (\_SB.PCI0.LPCB.EC0.TJMX, Zero))
                {

   103A5: A0 1E 93 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // ...\/._SB_PCI0LP
   103B5: 43 42 45 43 30 5F 54 4A 4D 58 00                 // CBEC0_TJMX.

                    Return (0x0DFE)
                }

   103C0: A4 0B FE 0D                                      // ....

                ElseIf
   103C4: A1 4F 08                                         // .O.

 (LEqual (\_SB.PCI0.LPCB.EC0.TJMX, One))
                {

   103C7: A0 1E 93 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // ...\/._SB_PCI0LP
   103D7: 43 42 45 43 30 5F 54 4A 4D 58 01                 // CBEC0_TJMX.

                    Return (0x0E30)
                }

   103E2: A4 0B 30 0E                                      // ..0.

                ElseIf
   103E6: A1 4D 06                                         // .M.

 (LEqual (\_SB.PCI0.LPCB.EC0.TJMX, 0x02))
                {

   103E9: A0 1F 93 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // ...\/._SB_PCI0LP
   103F9: 43 42 45 43 30 5F 54 4A 4D 58 0A 02              // CBEC0_TJMX..

                    Return (0x0E94)
                }

   10405: A4 0B 94 0E                                      // ....

                ElseIf
   10409: A1 4A 04                                         // .J.

 (LEqual (\_SB.PCI0.LPCB.EC0.TJMX, 0x03))
                {

   1040C: A0 1F 93 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // ...\/._SB_PCI0LP
   1041C: 43 42 45 43 30 5F 54 4A 4D 58 0A 03              // CBEC0_TJMX..

                    Return (0x0EC6)
                }

   10428: A4 0B C6 0E                                      // ....

                ElseIf
   1042C: A1 27                                            // .'

 (LEqual (\_SB.PCI0.LPCB.EC0.TJMX, 0x04))
                {

   1042E: A0 1F 93 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // ...\/._SB_PCI0LP
   1043E: 43 42 45 43 30 5F 54 4A 4D 58 0A 04              // CBEC0_TJMX..

                    Return (0x0DCC)
                }

   1044A: A4 0B CC 0D                                      // ....

                Else
                {

   1044E: A1 05                                            // ..

                    Return (0x0EB2)
                }
            }
        }
    }


   10450: A4 0B B2 0E                                      // ....

    Scope (_SB.PCI0)
    {

   10454: 10 4B 38 2E 5F 53 42 5F 50 43 49 30              // .K8._SB_PCI0

        Name (PNLT, 
   10460: 08 50 4E 4C 54                                   // .PNLT

Buffer (0x0B)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00, 0x00                                 // ...
        })

   10465: 11 0E 0A 0B 00 00 00 00 00 00 00 00 00 00 00     // ...............

        Name (PNL7, 
   10474: 08 50 4E 4C 37                                   // .PNL7

Buffer (0x0A)
        {
            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
            /* 0008 */  0x00, 0x00                                       // ..
        })

   10479: 11 0D 0A 0A 00 00 00 00 00 00 00 00 00 00        // ..............

        Method (CRBL, 0, NotSerialized)
        {

   10487: 14 48 35 43 52 42 4C 00                          // .H5CRBL.

            If (
   1048F: A0 4D 1E 92                                      // .M..

LGreaterEqual (OSYS, 0x07DC))
            {
                Store (BCL0, 
   10493: 95 4F 53 59 53 0B DC 07 70 42 43 4C 30           // .OSYS...pBCL0

Index (PNLT, Zero))
                Store (BCL1, 
   104A0: 88 50 4E 4C 54 00 00 70 42 43 4C 31              // .PNLT..pBCL1

Index (PNLT, One))
                Store (BCL2, 
   104AC: 88 50 4E 4C 54 01 00 70 42 43 4C 32              // .PNLT..pBCL2

Index (PNLT, 0x02))
                Store (BCL3, 
   104B8: 88 50 4E 4C 54 0A 02 00 70 42 43 4C 33           // .PNLT...pBCL3

Index (PNLT, 0x03))
                Store (BCL4, 
   104C5: 88 50 4E 4C 54 0A 03 00 70 42 43 4C 34           // .PNLT...pBCL4

Index (PNLT, 0x04))
                Store (BCL5, 
   104D2: 88 50 4E 4C 54 0A 04 00 70 42 43 4C 35           // .PNLT...pBCL5

Index (PNLT, 0x05))
                Store (BCL6, 
   104DF: 88 50 4E 4C 54 0A 05 00 70 42 43 4C 36           // .PNLT...pBCL6

Index (PNLT, 0x06))
                Store (BCL7, 
   104EC: 88 50 4E 4C 54 0A 06 00 70 42 43 4C 37           // .PNLT...pBCL7

Index (PNLT, 0x07))
                Store (BCL8, 
   104F9: 88 50 4E 4C 54 0A 07 00 70 42 43 4C 38           // .PNLT...pBCL8

Index (PNLT, 0x08))
                Store (BCL9, 
   10506: 88 50 4E 4C 54 0A 08 00 70 42 43 4C 39           // .PNLT...pBCL9

Index (PNLT, 0x09))
                Store (BLVA, 
   10513: 88 50 4E 4C 54 0A 09 00 70 42 4C 56 41           // .PNLT...pBLVA

Index (PNLT, 0x0A))
                Store (Or (BCL0, 0x8000), ^GFX0.BLM0) /* External reference */
                Store (Or (BCL1, 0x8A00), ^GFX0.BLM1) /* External reference */
                Store (Or (BCL2, 0x9400), ^GFX0.BLM2) /* External reference */
                Store (Or (BCL3, 0x9E00), ^GFX0.BLM3) /* External reference */
                Store (Or (BCL4, 0xA800), ^GFX0.BLM4) /* External reference */
                Store (Or (BCL5, 0xB200), ^GFX0.BLM5) /* External reference */
                Store (Or (BCL6, 0xBC00), ^GFX0.BLM6) /* External reference */
                Store (Or (BCL7, 0xC600), ^GFX0.BLM7) /* External reference */
                Store (Or (BCL8, 0xD000), ^GFX0.BLM8) /* External reference */
                Store (Or (BCL9, 0xDA00), ^GFX0.BLM9) /* External reference */
                Store (Or (BLVA, 0xE400), ^GFX0.BLMA) /* External reference */

   10520: 88 50 4E 4C 54 0A 0A 00 70 7D 42 43 4C 30 0B 00  // .PNLT...p}BCL0..
   10530: 80 00 5E 2E 47 46 58 30 42 4C 4D 30 70 7D 42 43  // ..^.GFX0BLM0p}BC
   10540: 4C 31 0B 00 8A 00 5E 2E 47 46 58 30 42 4C 4D 31  // L1....^.GFX0BLM1
   10550: 70 7D 42 43 4C 32 0B 00 94 00 5E 2E 47 46 58 30  // p}BCL2....^.GFX0
   10560: 42 4C 4D 32 70 7D 42 43 4C 33 0B 00 9E 00 5E 2E  // BLM2p}BCL3....^.
   10570: 47 46 58 30 42 4C 4D 33 70 7D 42 43 4C 34 0B 00  // GFX0BLM3p}BCL4..
   10580: A8 00 5E 2E 47 46 58 30 42 4C 4D 34 70 7D 42 43  // ..^.GFX0BLM4p}BC
   10590: 4C 35 0B 00 B2 00 5E 2E 47 46 58 30 42 4C 4D 35  // L5....^.GFX0BLM5
   105A0: 70 7D 42 43 4C 36 0B 00 BC 00 5E 2E 47 46 58 30  // p}BCL6....^.GFX0
   105B0: 42 4C 4D 36 70 7D 42 43 4C 37 0B 00 C6 00 5E 2E  // BLM6p}BCL7....^.
   105C0: 47 46 58 30 42 4C 4D 37 70 7D 42 43 4C 38 0B 00  // GFX0BLM7p}BCL8..
   105D0: D0 00 5E 2E 47 46 58 30 42 4C 4D 38 70 7D 42 43  // ..^.GFX0BLM8p}BC
   105E0: 4C 39 0B 00 DA 00 5E 2E 47 46 58 30 42 4C 4D 39  // L9....^.GFX0BLM9
   105F0: 70 7D 42 4C 56 41 0B 00 E4 00 5E 2E 47 46 58 30  // p}BLVA....^.GFX0
   10600: 42 4C 4D 41                                      // BLMA

                If (LEqual (BBTP, One))
                {
                    Store (Or (BL86, 0xB200), ^GFX0.BLM5) /* External reference */
                    Store (Or (BL87, 0xBC00), ^GFX0.BLM6) /* External reference */
                    Store (Or (BL88, 0xC600), ^GFX0.BLM7) /* External reference */
                    Store (Or (BL89, 0xD000), ^GFX0.BLM8) /* External reference */

   10604: A0 4C 06 93 42 42 54 50 01 70 7D 42 4C 38 36 0B  // .L..BBTP.p}BL86.
   10614: 00 B2 00 5E 2E 47 46 58 30 42 4C 4D 35 70 7D 42  // ...^.GFX0BLM5p}B
   10624: 4C 38 37 0B 00 BC 00 5E 2E 47 46 58 30 42 4C 4D  // L87....^.GFX0BLM
   10634: 36 70 7D 42 4C 38 38 0B 00 C6 00 5E 2E 47 46 58  // 6p}BL88....^.GFX
   10644: 30 42 4C 4D 37 70 7D 42 4C 38 39 0B 00 D0 00 5E  // 0BLM7p}BL89....^
   10654: 2E 47 46 58 30 42 4C 4D 38                       // .GFX0BLM8

                    Store (Or (BL8A, 0xDA00), ^GFX0.BLM9) /* External reference */
                }


   1065D: 70 7D 42 4C 38 41 0B 00 DA 00 5E 2E 47 46 58 30  // p}BL8A....^.GFX0
   1066D: 42 4C 4D 39                                      // BLM9

                Store (Zero, ^GFX0.BLMX) /* External reference */
            }

   10671: 70 00 5E 2E 47 46 58 30 42 4C 4D 58              // p.^.GFX0BLMX

            Else
            {
                Store (BCL0, 
   1067D: A1 42 16 70 42 43 4C 30                          // .B.pBCL0

Index (PNL7, Zero))
                Store (BCL1, 
   10685: 88 50 4E 4C 37 00 00 70 42 43 4C 31              // .PNL7..pBCL1

Index (PNL7, One))
                Store (BCL2, 
   10691: 88 50 4E 4C 37 01 00 70 42 43 4C 32              // .PNL7..pBCL2

Index (PNL7, 0x02))
                Store (BCL3, 
   1069D: 88 50 4E 4C 37 0A 02 00 70 42 43 4C 33           // .PNL7...pBCL3

Index (PNL7, 0x03))
                Store (BCL4, 
   106AA: 88 50 4E 4C 37 0A 03 00 70 42 43 4C 34           // .PNL7...pBCL4

Index (PNL7, 0x04))
                Store (BCL5, 
   106B7: 88 50 4E 4C 37 0A 04 00 70 42 43 4C 35           // .PNL7...pBCL5

Index (PNL7, 0x05))
                Store (BCL6, 
   106C4: 88 50 4E 4C 37 0A 05 00 70 42 43 4C 36           // .PNL7...pBCL6

Index (PNL7, 0x06))
                Store (BCL7, 
   106D1: 88 50 4E 4C 37 0A 06 00 70 42 43 4C 37           // .PNL7...pBCL7

Index (PNL7, 0x07))
                Store (BCL8, 
   106DE: 88 50 4E 4C 37 0A 07 00 70 42 43 4C 38           // .PNL7...pBCL8

Index (PNL7, 0x08))
                Store (BCL9, 
   106EB: 88 50 4E 4C 37 0A 08 00 70 42 43 4C 39           // .PNL7...pBCL9

Index (PNL7, 0x09))
                Store (Or (BCL0, 0x8A00), ^GFX0.BLM0) /* External reference */
                Store (Or (BCL1, 0x9400), ^GFX0.BLM1) /* External reference */
                Store (Or (BCL2, 0x9E00), ^GFX0.BLM2) /* External reference */
                Store (Or (BCL3, 0xA800), ^GFX0.BLM3) /* External reference */
                Store (Or (BCL4, 0xB200), ^GFX0.BLM4) /* External reference */
                Store (Or (BCL5, 0xBC00), ^GFX0.BLM5) /* External reference */
                Store (Or (BCL6, 0xC600), ^GFX0.BLM6) /* External reference */
                Store (Or (BCL7, 0xD000), ^GFX0.BLM7) /* External reference */
                Store (Or (BCL8, 0xDA00), ^GFX0.BLM8) /* External reference */
                Store (Or (BCL9, 0xE400), ^GFX0.BLM9) /* External reference */
                Store (Zero, ^GFX0.BLMA) /* External reference */

   106F8: 88 50 4E 4C 37 0A 09 00 70 7D 42 43 4C 30 0B 00  // .PNL7...p}BCL0..
   10708: 8A 00 5E 2E 47 46 58 30 42 4C 4D 30 70 7D 42 43  // ..^.GFX0BLM0p}BC
   10718: 4C 31 0B 00 94 00 5E 2E 47 46 58 30 42 4C 4D 31  // L1....^.GFX0BLM1
   10728: 70 7D 42 43 4C 32 0B 00 9E 00 5E 2E 47 46 58 30  // p}BCL2....^.GFX0
   10738: 42 4C 4D 32 70 7D 42 43 4C 33 0B 00 A8 00 5E 2E  // BLM2p}BCL3....^.
   10748: 47 46 58 30 42 4C 4D 33 70 7D 42 43 4C 34 0B 00  // GFX0BLM3p}BCL4..
   10758: B2 00 5E 2E 47 46 58 30 42 4C 4D 34 70 7D 42 43  // ..^.GFX0BLM4p}BC
   10768: 4C 35 0B 00 BC 00 5E 2E 47 46 58 30 42 4C 4D 35  // L5....^.GFX0BLM5
   10778: 70 7D 42 43 4C 36 0B 00 C6 00 5E 2E 47 46 58 30  // p}BCL6....^.GFX0
   10788: 42 4C 4D 36 70 7D 42 43 4C 37 0B 00 D0 00 5E 2E  // BLM6p}BCL7....^.
   10798: 47 46 58 30 42 4C 4D 37 70 7D 42 43 4C 38 0B 00  // GFX0BLM7p}BCL8..
   107A8: DA 00 5E 2E 47 46 58 30 42 4C 4D 38 70 7D 42 43  // ..^.GFX0BLM8p}BC
   107B8: 4C 39 0B 00 E4 00 5E 2E 47 46 58 30 42 4C 4D 39  // L9....^.GFX0BLM9
   107C8: 70 00 5E 2E 47 46 58 30 42 4C 4D 41              // p.^.GFX0BLMA

                Store (Zero, ^GFX0.BLMX) /* External reference */
            }
        }
    }


   107D4: 70 00 5E 2E 47 46 58 30 42 4C 4D 58              // p.^.GFX0BLMX

    Scope (_SB)
    {

   107E0: 10 4F 06 5F 53 42 5F                             // .O._SB_

        OperationRegion (EXCO, SystemIO, 0x72, 0x02)

   107E7: 5B 80 45 58 43 4F 01 0A 72 0A 02                 // [.EXCO..r..

        Field (EXCO, ByteAcc, NoLock, Preserve)
        {
            INDX,   8, 
            DATA,   8
        }


   107F2: 5B 81 10 45 58 43 4F 01 49 4E 44 58 08 44 41 54  // [..EXCO.INDX.DAT
   10802: 41 08                                            // A.

        IndexField (INDX, DATA, ByteAcc, NoLock, Preserve)
        {
            Offset (0x80), 
            CM2M,   32, 
            Offset (0x87), 
            RDWL,   1, 
            RDBT,   1, 
            RD3G,   1, 
            TPDS,   1, 
            PTWL,   1, 
            PTBT,   1, 
            PT3G,   1, 
            RDTS,   1, 
            Offset (0xEE), 
            CSBM,   8, 
            Offset (0xFF), 
            Offset (0x100)
        }
    }


   10804: 5B 86 4A 04 49 4E 44 58 44 41 54 41 01 00 40 40  // [.J.INDXDATA..@@
   10814: 43 4D 32 4D 20 00 18 52 44 57 4C 01 52 44 42 54  // CM2M ..RDWL.RDBT
   10824: 01 52 44 33 47 01 54 50 44 53 01 50 54 57 4C 01  // .RD3G.TPDS.PTWL.
   10834: 50 54 42 54 01 50 54 33 47 01 52 44 54 53 01 00  // PTBT.PT3G.RDTS..
   10844: 40 33 43 53 42 4D 08 00 40 08 00 08              // @3CSBM..@...

    Scope (_SB)
    {

   10850: 10 45 06 5F 53 42 5F                             // .E._SB_

        Device (A_CC)
        {

   10857: 5B 82 4D 05 41 5F 43 43                          // [.M.A_CC

            Name (_HID, "SMO8810")  // _HID: Hardware ID

   1085F: 08 5F 48 49 44 0D 53 4D 4F 38 38 31 30 00        // ._HID.SMO8810.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

   1086D: 14 16 5F 53 54 41 00                             // .._STA.

                If (LEqual (RDGI (0x33), Zero))
                {

   10874: A0 0B 93 52 44 47 49 0A 33 00                    // ...RDGI.3.

                    Return (Zero)
                }

   1087E: A4 00                                            // ..

                Else
                {

   10880: A1 03                                            // ..

                    Return (Zero)
                }
            }


   10882: A4 00                                            // ..

            Name (_UID, One)  // _UID: Unique ID

   10884: 08 5F 55 49 44 01                                // ._UID.

            Name (BUF2, 
   1088A: 08 42 55 46 32                                   // .BUF2

ResourceTemplate ()
            {
                Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                {
                    0x0000001E,
                }
            })

   1088F: 11 0E 0A 0B 89 06 00 03 01 1E 00 00 00 79 00     // .............y.

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

   1089E: 14 0B 5F 43 52 53 08                             // .._CRS.

                Return (BUF2) /* \_SB_.A_CC.BUF2 */
            }


   108A5: A4 42 55 46 32                                   // .BUF2

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

   108AA: 14 0B 5F 53 52 53 09                             // .._SRS.

                Return (BUF2) /* \_SB_.A_CC.BUF2 */
            }
        }
    }


   108B1: A4 42 55 46 32                                   // .BUF2

    Name (_S0, 
   108B6: 08 5F 53 30 5F                                   // ._S0_

Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })

   108BB: 12 06 04 00 00 00 00                             // .......

    If (SS1)
    {

   108C2: A0 11 53 53 31 5F                                // ..SS1_

        Name (_S1, 
   108C8: 08 5F 53 31 5F                                   // ._S1_

Package (0x04)  // _S1_: S1 System State
        {
            One, 
            Zero, 
            Zero, 
            Zero
        })
    }


   108CD: 12 06 04 01 00 00 00                             // .......

    If (SS3)
    {

   108D4: A0 12 53 53 33 5F                                // ..SS3_

        Name (_S3, 
   108DA: 08 5F 53 33 5F                                   // ._S3_

Package (0x04)  // _S3_: S3 System State
        {
            0x05, 
            Zero, 
            Zero, 
            Zero
        })
    }


   108DF: 12 07 04 0A 05 00 00 00                          // ........

    If (SS4)
    {

   108E7: A0 12 53 53 34 5F                                // ..SS4_

        Name (_S4, 
   108ED: 08 5F 53 34 5F                                   // ._S4_

Package (0x04)  // _S4_: S4 System State
        {
            0x06, 
            Zero, 
            Zero, 
            Zero
        })
    }


   108F2: 12 07 04 0A 06 00 00 00                          // ........

    Name (_S5, 
   108FA: 08 5F 53 35 5F                                   // ._S5_

Package (0x04)  // _S5_: S5 System State
    {
        0x07, 
        Zero, 
        Zero, 
        Zero
    })

   108FF: 12 07 04 0A 07 00 00 00                          // ........

    Method (PTS, 1, NotSerialized)
    {

   10907: 14 09 50 54 53 5F 01                             // ..PTS_.

        If (Arg0){}
    }


   1090E: A0 02 68                                         // ..h

    Method (WAK, 1, NotSerialized)
    {
    }


   10911: 14 06 57 41 4B 5F 01                             // ..WAK_.

    If (LEqual (ECR1, One))
    {

   10918: A0 49 20 93 45 43 52 31 01                       // .I .ECR1.

        Method (PDSM, 5, Serialized)
        {

   10921: 14 42 06 50 44 53 4D 0D                          // .B.PDSM.

            Name (F9PK, 
   10929: 08 46 39 50 4B                                   // .F9PK

Package (0x05)
            {
                Zero, 
                Ones, 
                Ones, 
                Zero, 
                Ones
            })
            Store (Arg4, 
   1092E: 12 07 05 00 FF FF 00 FF 70 6C                    // ........pl

Index (F9PK, Zero))
            Store (Arg4, 
   10938: 88 46 39 50 4B 00 00 70 6C                       // .F9PK..pl

Index (F9PK, 0x03))

   10941: 88 46 39 50 4B 0A 03 00                          // .F9PK...

            If (LEqual (Arg0, 
   10949: A0 35 93 68                                      // .5.h

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */))
            {

   1094D: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
   1095D: 19 C3 43 4D                                      // ..CM

                If (
   10961: A0 1D 92                                         // ...

LGreaterEqual (Arg1, 0x03))
                {

   10964: 95 69 0A 03                                      // .i..

                    If (LEqual (Arg2, Zero))
                    {

   10968: A0 0B 93 6A 00                                   // ...j.

                        Return (
   1096D: A4                                               // .

Buffer (0x02)
                        {
                             0x01, 0x02                                       // ..
                        })
                    }


   1096E: 11 05 0A 02 01 02                                // ......

                    If (LEqual (Arg2, 0x09))
                    {

   10974: A0 0A 93 6A 0A 09                                // ...j..

                        Return (F9PK) /* \PDSM.F9PK */
                    }
                }
            }


   1097A: A4 46 39 50 4B                                   // .F9PK

            Return (
   1097F: A4                                               // .

Buffer (One)
            {
                 0x00                                             // .
            })
        }


   10980: 11 03 01 00                                      // ....

        Scope (_SB.PCI0.XHC)
        {

   10984: 10 22 2F 03 5F 53 42 5F 50 43 49 30 58 48 43 5F  // ."/._SB_PCI0XHC_

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

   10994: 14 12 5F 44 53 4D 0C                             // .._DSM.

                Return (PDSM (Arg0, Arg1, Arg2, Arg3, 0xC350))
            }
        }


   1099B: A4 50 44 53 4D 68 69 6A 6B 0B 50 C3              // .PDSMhijk.P.

        Scope (_SB.PCI0.LPCB)
        {

   109A7: 10 22 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43 42  // ."/._SB_PCI0LPCB

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

   109B7: 14 12 5F 44 53 4D 0C                             // .._DSM.

                Return (PDSM (Arg0, Arg1, Arg2, Arg3, 0xC350))
            }
        }


   109BE: A4 50 44 53 4D 68 69 6A 6B 0B 50 C3              // .PDSMhijk.P.

        Scope (_SB.PCI0.SAT0)
        {

   109CA: 10 22 2F 03 5F 53 42 5F 50 43 49 30 53 41 54 30  // ."/._SB_PCI0SAT0

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

   109DA: 14 12 5F 44 53 4D 0C                             // .._DSM.

                Return (PDSM (Arg0, Arg1, Arg2, Arg3, 0xC350))
            }
        }


   109E1: A4 50 44 53 4D 68 69 6A 6B 0B 50 C3              // .PDSMhijk.P.

        Scope (_SB.PCI0.SBUS)
        {

   109ED: 10 22 2F 03 5F 53 42 5F 50 43 49 30 53 42 55 53  // ."/._SB_PCI0SBUS

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

   109FD: 14 12 5F 44 53 4D 0C                             // .._DSM.

                Return (PDSM (Arg0, Arg1, Arg2, Arg3, 0xC350))
            }
        }


   10A04: A4 50 44 53 4D 68 69 6A 6B 0B 50 C3              // .PDSMhijk.P.

        If (LEqual (SMD0, 0x02))
        {

   10A10: A0 41 11 93 53 4D 44 30 0A 02                    // .A..SMD0..

            Scope (_SB.PCI0.SDMA)
            {

   10A1A: 10 20 2F 03 5F 53 42 5F 50 43 49 30 53 44 4D 41  // . /._SB_PCI0SDMA

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

   10A2A: 14 10 5F 44 53 4D 0C                             // .._DSM.

                    Return (PDSM (Arg0, Arg1, Arg2, Arg3, Zero))
                }
            }


   10A31: A4 50 44 53 4D 68 69 6A 6B 00                    // .PDSMhijk.

            Scope (_SB.PCI0.I2C0)
            {

   10A3B: 10 20 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 30  // . /._SB_PCI0I2C0

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

   10A4B: 14 10 5F 44 53 4D 0C                             // .._DSM.

                    Return (PDSM (Arg0, Arg1, Arg2, Arg3, Zero))
                }
            }


   10A52: A4 50 44 53 4D 68 69 6A 6B 00                    // .PDSMhijk.

            Scope (_SB.PCI0.I2C1)
            {

   10A5C: 10 20 2F 03 5F 53 42 5F 50 43 49 30 49 32 43 31  // . /._SB_PCI0I2C1

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

   10A6C: 14 10 5F 44 53 4D 0C                             // .._DSM.

                    Return (PDSM (Arg0, Arg1, Arg2, Arg3, Zero))
                }
            }


   10A73: A4 50 44 53 4D 68 69 6A 6B 00                    // .PDSMhijk.

            Scope (_SB.PCI0.SPI0)
            {

   10A7D: 10 20 2F 03 5F 53 42 5F 50 43 49 30 53 50 49 30  // . /._SB_PCI0SPI0

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

   10A8D: 14 10 5F 44 53 4D 0C                             // .._DSM.

                    Return (PDSM (Arg0, Arg1, Arg2, Arg3, Zero))
                }
            }


   10A94: A4 50 44 53 4D 68 69 6A 6B 00                    // .PDSMhijk.

            Scope (_SB.PCI0.SPI1)
            {

   10A9E: 10 20 2F 03 5F 53 42 5F 50 43 49 30 53 50 49 31  // . /._SB_PCI0SPI1

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

   10AAE: 14 10 5F 44 53 4D 0C                             // .._DSM.

                    Return (PDSM (Arg0, Arg1, Arg2, Arg3, Zero))
                }
            }


   10AB5: A4 50 44 53 4D 68 69 6A 6B 00                    // .PDSMhijk.

            Scope (_SB.PCI0.UA00)
            {

   10ABF: 10 20 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 30  // . /._SB_PCI0UA00

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

   10ACF: 14 10 5F 44 53 4D 0C                             // .._DSM.

                    Return (PDSM (Arg0, Arg1, Arg2, Arg3, Zero))
                }
            }


   10AD6: A4 50 44 53 4D 68 69 6A 6B 00                    // .PDSMhijk.

            Scope (_SB.PCI0.UA01)
            {

   10AE0: 10 20 2F 03 5F 53 42 5F 50 43 49 30 55 41 30 31  // . /._SB_PCI0UA01

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

   10AF0: 14 10 5F 44 53 4D 0C                             // .._DSM.

                    Return (PDSM (Arg0, Arg1, Arg2, Arg3, Zero))
                }
            }


   10AF7: A4 50 44 53 4D 68 69 6A 6B 00                    // .PDSMhijk.

            Scope (_SB.PCI0.SDHC)
            {

   10B01: 10 20 2F 03 5F 53 42 5F 50 43 49 30 53 44 48 43  // . /._SB_PCI0SDHC

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

   10B11: 14 10 5F 44 53 4D 0C                             // .._DSM.

                    Return (PDSM (Arg0, Arg1, Arg2, Arg3, Zero))
                }
            }
        }
    }
}



Table Header:
Table Body (Length 0x10B22)
